{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as userSecurityEventTypes from '../../userSecurity/token/eventTypes';\nimport * as eventTypes from './eventTypes';\nconst initialState = {\n  id: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  isSubmitting: false\n};\nconst signupReducer = createReducer(initialState, {\n  [userSecurityEventTypes.USERSECURITY_TOKEN_REMOVED]: state => _objectSpread({}, initialState),\n  [eventTypes.USERSECURITY_SIGNUP_REQUESTED]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    isSubmitting: true\n  }),\n  [eventTypes.USERSECURITY_SIGNUP_RECEIVED]: (state, action) => _objectSpread(_objectSpread({}, action.payload), {}, {\n    isSubmitting: false\n  }),\n  [eventTypes.USERSECURITY_SIGNUP_ERRORED]: (state, action) => _objectSpread(_objectSpread({}, action.payload), {}, {\n    isSubmitting: false\n  })\n});\nexport default signupReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/userSecurity/signup/signupReducer.ts"],"names":["createReducer","userSecurityEventTypes","eventTypes","initialState","id","undefined","error","errorDescription","isSubmitting","signupReducer","USERSECURITY_TOKEN_REMOVED","state","USERSECURITY_SIGNUP_REQUESTED","USERSECURITY_SIGNUP_RECEIVED","action","payload","USERSECURITY_SIGNUP_ERRORED"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAAsD,kBAAtD;AAEA,OAAO,KAAKC,sBAAZ,MAAwC,qCAAxC;AAEA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAEA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,EAAE,EAAEC,SAD4B;AAEhCC,EAAAA,KAAK,EAAED,SAFyB;AAGhCE,EAAAA,gBAAgB,EAAEF,SAHc;AAIhCG,EAAAA,YAAY,EAAE;AAJkB,CAAlC;AAOA,MAAMC,aAAmC,GAAGT,aAAa,CAACG,YAAD,EAAe;AACtE,GAACF,sBAAsB,CAACS,0BAAxB,GAAsDC,KAAD,sBAAiBR,YAAjB,CADiB;AAEtE,GAACD,UAAU,CAACU,6BAAZ,GAA6CD,KAAD,oCAAiBR,YAAjB;AAA+BK,IAAAA,YAAY,EAAE;AAA7C,IAF0B;AAGtE,GAACN,UAAU,CAACW,4BAAZ,GAA2C,CAACF,KAAD,EAAQG,MAAR,qCAAwDA,MAAM,CAACC,OAA/D;AAAwEP,IAAAA,YAAY,EAAE;AAAtF,IAH2B;AAItE,GAACN,UAAU,CAACc,2BAAZ,GAA0C,CAACL,KAAD,EAAQG,MAAR,qCAAwDA,MAAM,CAACC,OAA/D;AAAwEP,IAAAA,YAAY,EAAE;AAAtF;AAJ4B,CAAf,CAAzD;AAOA,eAAeC,aAAf","sourcesContent":["import { createReducer, PayloadAction, Reducer } from '@reduxjs/toolkit'\nimport { SignupState, SignupResponse } from './models'\nimport * as userSecurityEventTypes from '../../userSecurity/token/eventTypes'\n\nimport * as eventTypes from './eventTypes'\n\nconst initialState: SignupState = {\n  id: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  isSubmitting: false\n}\n\nconst signupReducer: Reducer<SignupState> = createReducer(initialState, {\n  [userSecurityEventTypes.USERSECURITY_TOKEN_REMOVED]: (state) => ({ ...initialState }),\n  [eventTypes.USERSECURITY_SIGNUP_REQUESTED]: (state) => ({ ...initialState, isSubmitting: true }),\n  [eventTypes.USERSECURITY_SIGNUP_RECEIVED]: (state, action: PayloadAction<SignupResponse>) => ({ ...action.payload, isSubmitting: false }),\n  [eventTypes.USERSECURITY_SIGNUP_ERRORED]: (state, action: PayloadAction<SignupResponse>) => ({ ...action.payload, isSubmitting: false }),\n})\n\nexport default signupReducer\n"]},"metadata":{},"sourceType":"module"}