{"ast":null,"code":"import _asyncToGenerator from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/regenerator\";\nimport { baseUrl } from '../../../shared/baseUrl';\nimport { getHeadersNoAuth } from '../../../shared/getHeaders';\nexport var getNews = function getNews() {\n  return fetch(\"\".concat(baseUrl, \"/v1/tags/getnewsmetadata\"), {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var json, newsMetaData, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return response.json();\n\n            case 2:\n              json = _context.sent;\n              newsMetaData = json.data;\n              data = {\n                newsMetaData: newsMetaData,\n                error: '',\n                errorDescription: ''\n              };\n              return _context.abrupt(\"return\", {\n                success: json.success,\n                statusCode: newsMetaData == null ? 400 : json.statusCode,\n                data: data,\n                is_success: json.success\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/content/news/api/getNews.ts"],"names":["baseUrl","getHeadersNoAuth","getNews","fetch","method","headers","then","response","json","newsMetaData","data","error","errorDescription","success","statusCode","is_success"],"mappings":";;AACA,SAASA,OAAT,QAAwB,yBAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmD;AACxE,SAAOC,KAAK,WACPH,OADO,+BAC4B;AACtCI,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,OAAO,EAAEJ,gBAAgB;AAFa,GAD5B,CAAL,CAKLK,IALK;AAAA,wEAKA,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYA,QAAQ,CAACC,IAAT,EADZ;;AAAA;AACDA,cAAAA,IADC;AAECC,cAAAA,YAFD,GAEgCD,IAAI,CAACE,IAFrC;AAGCA,cAAAA,IAHD,GAG+B;AAClCD,gBAAAA,YAAY,EAAEA,YADoB;AAElCE,gBAAAA,KAAK,EAAE,EAF2B;AAGlCC,gBAAAA,gBAAgB,EAAE;AAHgB,eAH/B;AAAA,+CAQE;AACLC,gBAAAA,OAAO,EAAEL,IAAI,CAACK,OADT;AAELC,gBAAAA,UAAU,EAAEL,YAAY,IAAI,IAAhB,GAAuB,GAAvB,GAA6BD,IAAI,CAACM,UAFzC;AAGLJ,gBAAAA,IAAI,EAAJA,IAHK;AAILK,gBAAAA,UAAU,EAAEP,IAAI,CAACK;AAJZ,eARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALA;;AAAA;AAAA;AAAA;AAAA,MAAP;AAoBD,CArBM","sourcesContent":["import { INewsMetaDataResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { getHeadersNoAuth } from '../../../shared/getHeaders'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { INewsArticle } from '../models'\n\nexport const getNews = (): Promise<ApiResponse<INewsMetaDataResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/tags/getnewsmetadata`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const newsMetaData: INewsArticle[] = json.data\n    const data: INewsMetaDataResponse = {\n      newsMetaData: newsMetaData,\n      error: '',\n      errorDescription: ''\n    }\n    return {\n      success: json.success,\n      statusCode: newsMetaData == null ? 400 : json.statusCode,\n      data,\n      is_success: json.success\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}