{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes';\nexport var videoPlayerStreamRequested = createAction(eventTypes.CONTENT_VIDEO_PLAYER_STREAM_REQUESTED, function (resolve) {\n  return function (eventId, videoId, isLive) {\n    return resolve({\n      eventId: eventId,\n      videoId: videoId,\n      isLive: isLive\n    });\n  };\n});\nexport var videoPlayerStreamReceived = createAction(eventTypes.CONTENT_VIDEO_PLAYER_STREAM_RECEIVED, function (resolve) {\n  return function (videoStream) {\n    return resolve(videoStream);\n  };\n});\nexport var videoPlayerStreamErrored = createAction(eventTypes.CONTENT_VIDEO_PLAYER_STREAM_ERRORED, function (resolve) {\n  return function (err) {\n    return resolve(err);\n  };\n});\nexport var videoPlayerTokenRequested = createAction(eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED, function (resolve) {\n  return function (scope) {\n    return resolve(scope);\n  };\n});\nexport var videoPlayerTokenReceived = createAction(eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED, function (resolve) {\n  return function (token) {\n    return resolve(token);\n  };\n});\nexport var videoPlayerTokenErrored = createAction(eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_ERRORED, function (resolve) {\n  return function (err) {\n    return resolve(err);\n  };\n});","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/content/videoPlayer/events.ts"],"names":["createAction","eventTypes","videoPlayerStreamRequested","CONTENT_VIDEO_PLAYER_STREAM_REQUESTED","resolve","eventId","videoId","isLive","videoPlayerStreamReceived","CONTENT_VIDEO_PLAYER_STREAM_RECEIVED","videoStream","videoPlayerStreamErrored","CONTENT_VIDEO_PLAYER_STREAM_ERRORED","err","videoPlayerTokenRequested","CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED","scope","videoPlayerTokenReceived","CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED","token","videoPlayerTokenErrored","CONTENT_VIDEO_PLAYER_TOKEN_ERRORED"],"mappings":"AACA,SAAqBA,YAArB,QAAyC,kBAAzC;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAEA,OAAO,IAAMC,0BAA0B,GAAGF,YAAY,CAClDC,UAAU,CAACE,qCADuC,EAElD,UAACC,OAAD;AAAA,SAAa,UAACC,OAAD,EAA4BC,OAA5B,EAAyDC,MAAzD;AAAA,WAA6EH,OAAO,CAAC;AAAEC,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,OAAO,EAAPA,OAAX;AAAoBC,MAAAA,MAAM,EAANA;AAApB,KAAD,CAApF;AAAA,GAAb;AAAA,CAFkD,CAA/C;AAKP,OAAO,IAAMC,yBAAyB,GAAGR,YAAY,CACjDC,UAAU,CAACQ,oCADsC,EAEjD,UAACL,OAAD;AAAA,SAAa,UAACM,WAAD;AAAA,WAAsCN,OAAO,CAACM,WAAD,CAA7C;AAAA,GAAb;AAAA,CAFiD,CAA9C;AAKP,OAAO,IAAMC,wBAAwB,GAAGX,YAAY,CAChDC,UAAU,CAACW,mCADqC,EAEhD,UAACR,OAAD;AAAA,SAAa,UAACS,GAAD;AAAA,WAAcT,OAAO,CAACS,GAAD,CAArB;AAAA,GAAb;AAAA,CAFgD,CAA7C;AAKP,OAAO,IAAMC,yBAAyB,GAAGd,YAAY,CACjDC,UAAU,CAACc,oCADsC,EAEjD,UAACX,OAAD;AAAA,SAAa,UAACY,KAAD;AAAA,WAAmBZ,OAAO,CAACY,KAAD,CAA1B;AAAA,GAAb;AAAA,CAFiD,CAA9C;AAKP,OAAO,IAAMC,wBAAwB,GAAGjB,YAAY,CAChDC,UAAU,CAACiB,mCADqC,EAEhD,UAACd,OAAD;AAAA,SAAa,UAACe,KAAD;AAAA,WAAgCf,OAAO,CAACe,KAAD,CAAvC;AAAA,GAAb;AAAA,CAFgD,CAA7C;AAKP,OAAO,IAAMC,uBAAuB,GAAGpB,YAAY,CAC/CC,UAAU,CAACoB,kCADoC,EAE/C,UAACjB,OAAD;AAAA,SAAa,UAACS,GAAD;AAAA,WAAcT,OAAO,CAACS,GAAD,CAArB;AAAA,GAAb;AAAA,CAF+C,CAA5C","sourcesContent":["import { IVideoTokenResponse } from './models';\nimport { ActionType, createAction } from 'typesafe-actions'\nimport * as eventTypes from './eventTypes'\n\nexport const videoPlayerStreamRequested = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_STREAM_REQUESTED,\n    (resolve) => (eventId: number | string , videoId: number | undefined, isLive: boolean) => resolve({ eventId, videoId, isLive })\n)\n\nexport const videoPlayerStreamReceived = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_STREAM_RECEIVED,\n    (resolve) => (videoStream: IVideoTokenResponse) => resolve(videoStream)\n)\n\nexport const videoPlayerStreamErrored = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_STREAM_ERRORED,\n    (resolve) => (err: any) => resolve(err)\n)\n\nexport const videoPlayerTokenRequested = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED,\n    (resolve) => (scope: string) => resolve(scope)\n)\n\nexport const videoPlayerTokenReceived = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED,\n    (resolve) => (token: IVideoTokenResponse) => resolve(token)\n)\n\nexport const videoPlayerTokenErrored = createAction(\n    eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_ERRORED,\n    (resolve) => (err: any) => resolve(err)\n)\nexport type VideoPlayerEventTypes = ActionType<\n  typeof videoPlayerStreamRequested | \n  typeof videoPlayerStreamReceived |\n  typeof videoPlayerStreamErrored |\n  typeof videoPlayerTokenRequested |\n  typeof videoPlayerTokenReceived |\n  typeof videoPlayerTokenErrored\n>\n  "]},"metadata":{},"sourceType":"module"}