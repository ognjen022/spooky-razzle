{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './Account.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LayoutDefault from '../../layouts/LayoutDefault/LayoutDefault';\nimport ResetPasswordForm from '../../components/ResetPasswordForm/ResetPasswordForm';\nimport PaymentDetailsForm from '../../components/PaymentDetailsForm/PaymentDetailsForm';\nimport AccountDetailsForm from '../../components/AccountDetailsForm/AccountDetailsForm';\nimport SubscriptionsDetails from '../../components/SubscriptionsDetails/SubscriptionsDetails';\nimport { selectInitials } from '../../services/userSecurity/profile/selectors';\nimport { useCardBrand, images } from 'react-card-brand';\n\nconst Account = () => {\n  const dispatch = useDispatch();\n  const {\n    getSvgProps\n  } = useCardBrand();\n  const {\n    0: showAddPaymentForm,\n    1: setShowAddPaymentForm\n  } = useState(false);\n  /* Moved to epic\n  const getData = async () => {\n    try {\n      // dispatch(subscriptionDetailsRequestedEvent())\n      const result = await getSubscriptionDetails()\n      dispatch(subscriptionDetailsReceivedEvent(result))\n    } catch (error) {\n      dispatch(subscriptionDetailsErroredEvent(error))\n    }\n  }\n  */\n\n  let initials = useSelector(state => selectInitials(state.userSecurity.profile));\n  let fullName = useSelector(state => {\n    var _state$userSecurity$p;\n\n    return ((_state$userSecurity$p = state.userSecurity.profile) === null || _state$userSecurity$p === void 0 ? void 0 : _state$userSecurity$p.name) || '';\n  });\n  let email = useSelector(state => {\n    var _state$userSecurity$p2;\n\n    return ((_state$userSecurity$p2 = state.userSecurity.profile) === null || _state$userSecurity$p2 === void 0 ? void 0 : _state$userSecurity$p2.email) || '';\n  });\n  let phone = useSelector(state => {\n    var _state$userSecurity$p3;\n\n    return ((_state$userSecurity$p3 = state.userSecurity.profile) === null || _state$userSecurity$p3 === void 0 ? void 0 : _state$userSecurity$p3.phone) || '';\n  });\n  let cardBrand = useSelector(state => {\n    var _state$userSecurity$p4;\n\n    return ((_state$userSecurity$p4 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p4 === void 0 ? void 0 : _state$userSecurity$p4.brand) || '';\n  });\n  let cardName = useSelector(state => {\n    var _state$userSecurity$p5;\n\n    return ((_state$userSecurity$p5 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p5 === void 0 ? void 0 : _state$userSecurity$p5.name) || '';\n  });\n  let cardLast4 = useSelector(state => {\n    var _state$userSecurity$p6;\n\n    return ((_state$userSecurity$p6 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p6 === void 0 ? void 0 : _state$userSecurity$p6.last4) || '';\n  });\n  let cardAddressLine1 = useSelector(state => {\n    var _state$userSecurity$p7;\n\n    return ((_state$userSecurity$p7 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p7 === void 0 ? void 0 : _state$userSecurity$p7.address_line1) || '';\n  });\n  let cardAddressLine2 = useSelector(state => {\n    var _state$userSecurity$p8;\n\n    return ((_state$userSecurity$p8 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p8 === void 0 ? void 0 : _state$userSecurity$p8.address_line2) || '';\n  });\n  let cardAddressCity = useSelector(state => {\n    var _state$userSecurity$p9;\n\n    return ((_state$userSecurity$p9 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p9 === void 0 ? void 0 : _state$userSecurity$p9.address_city) || '';\n  });\n  let cardPostCode = useSelector(state => {\n    var _state$userSecurity$p10;\n\n    return ((_state$userSecurity$p10 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p10 === void 0 ? void 0 : _state$userSecurity$p10.address_zip) || '';\n  });\n  let cardAddressCountry = useSelector(state => {\n    var _state$userSecurity$p11;\n\n    return ((_state$userSecurity$p11 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p11 === void 0 ? void 0 : _state$userSecurity$p11.address_country) || '';\n  });\n  const {\n    0: panelOne,\n    1: setPanelOne\n  } = useState(true);\n  const {\n    0: panelTwo,\n    1: setPanelTwo\n  } = useState(false);\n  const {\n    0: panelThree,\n    1: setPanelThree\n  } = useState(false);\n  const {\n    0: panelFour,\n    1: setPanelFour\n  } = useState(false);\n  const {\n    0: showEditForm,\n    1: setShowEditForm\n  } = useState(false);\n\n  const handlePanelClick = index => {\n    index === 1 ? setPanelOne(true) : setPanelOne(false);\n    index === 2 ? setPanelTwo(true) : setPanelTwo(false);\n    index === 3 ? setPanelThree(true) : setPanelThree(false);\n    index === 4 ? setPanelFour(true) : setPanelFour(false);\n  };\n\n  const toggleAddPaymentForm = () => setShowAddPaymentForm(!showAddPaymentForm);\n\n  return __jsx(LayoutDefault, null, __jsx(\"section\", null, __jsx(\"div\", {\n    className: `container ${styles['container']}`\n  }, __jsx(\"div\", {\n    className: styles['account']\n  }, __jsx(\"button\", {\n    className: `${styles['account__title']} ${panelOne ? styles['is-active'] : null}`,\n    onClick: () => handlePanelClick(1)\n  }, __jsx(\"span\", null, \"Security\"), __jsx(\"i\", {\n    className: styles['account__title-arrow']\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-chevron-down\"\n  })))), __jsx(\"div\", {\n    className: `${styles['account__content']} ${panelOne ? styles['is-active'] : null}`\n  }, __jsx(\"div\", {\n    className: styles['account__content-inner']\n  }, __jsx(\"div\", {\n    className: styles['account__name-container']\n  }, __jsx(\"div\", {\n    className: styles['profile-badge']\n  }, __jsx(\"span\", {\n    className: styles['profile-badge__initials']\n  }, initials)), __jsx(\"h3\", {\n    className: styles['account__name']\n  }, fullName)), __jsx(ResetPasswordForm, null))), __jsx(\"button\", {\n    className: `${styles['account__title']} ${panelTwo ? styles['is-active'] : null}`,\n    onClick: () => handlePanelClick(2)\n  }, __jsx(\"span\", null, \"Payment\"), __jsx(\"i\", {\n    className: styles['account__title-arrow']\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-chevron-down\"\n  })))), __jsx(\"div\", {\n    className: `${styles['account__content']} ${panelTwo ? styles['is-active'] : null}`\n  }, __jsx(\"div\", {\n    className: styles['account__content-inner']\n  }, __jsx(\"div\", {\n    className: styles['account__name-container']\n  }, __jsx(\"div\", {\n    className: styles['profile-badge']\n  }, __jsx(\"span\", {\n    className: styles['profile-badge__initials']\n  }, initials)), __jsx(\"h3\", {\n    className: styles['account__name']\n  }, fullName)), __jsx(\"div\", {\n    className: styles['account-details']\n  }, cardBrand && cardName && cardLast4 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles['account-details__title']\n  }, __jsx(\"h3\", null, \"Details\")), __jsx(\"div\", {\n    className: styles['account-details__content']\n  }, __jsx(\"p\", null, cardName, __jsx(\"br\", null), `**** **** **** ${cardLast4} `, __jsx(\"svg\", getSvgProps({\n    type: cardBrand.toLowerCase(),\n    images\n  }))), __jsx(\"p\", null, cardAddressLine1, __jsx(\"br\", null), cardAddressLine2, __jsx(\"br\", null), cardAddressCity, cardAddressCountry ? `, ${cardAddressCountry} ${cardPostCode}`.trim() : '', __jsx(\"br\", null)))) : 'No payment card associated to this account.', __jsx(\"button\", {\n    onClick: () => setShowEditForm(!showEditForm),\n    className: styles['account-details__edit-button']\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-edit\"\n  })), __jsx(\"span\", {\n    className: \"screen-reader-text\"\n  }, \"Edit\"))), showEditForm ? __jsx(PaymentDetailsForm, null) : '')), __jsx(\"button\", {\n    className: `${styles['account__title']} ${panelThree ? styles['is-active'] : null}`,\n    onClick: () => handlePanelClick(3)\n  }, __jsx(\"span\", null, \"Information\"), __jsx(\"i\", {\n    className: styles['account__title-arrow']\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-chevron-down\"\n  })))), __jsx(\"div\", {\n    className: `${styles['account__content']} ${panelThree ? styles['is-active'] : null}`\n  }, __jsx(\"div\", {\n    className: styles['account__content-inner']\n  }, __jsx(\"div\", {\n    className: styles['account__name-container']\n  }, __jsx(\"div\", {\n    className: styles['profile-badge']\n  }, __jsx(\"span\", {\n    className: styles['profile-badge__initials']\n  }, initials)), __jsx(\"h3\", {\n    className: styles['account__name']\n  }, fullName)), __jsx(\"div\", {\n    className: styles['account-details']\n  }, __jsx(\"div\", {\n    className: styles['account-details__title']\n  }, __jsx(\"h3\", null, \"Details\")), __jsx(\"div\", {\n    className: styles['account-details__content']\n  }, __jsx(\"p\", null, fullName, \" \", __jsx(\"br\", null), email, \" \", __jsx(\"br\", null), phone, \" \", __jsx(\"br\", null))), __jsx(\"button\", {\n    className: styles['account-details__edit-button']\n  }, __jsx(\"svg\", {\n    onClick: () => setShowEditForm(!showEditForm),\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-edit\"\n  })), __jsx(\"span\", {\n    className: \"screen-reader-text\"\n  }, \"Edit\"))), showEditForm ? __jsx(AccountDetailsForm, null) : '')), __jsx(\"button\", {\n    className: `${styles['account__title']} ${panelFour ? styles['is-active'] : null}`,\n    onClick: () => handlePanelClick(4)\n  }, __jsx(\"span\", null, \"Subscriptions\"), __jsx(\"i\", {\n    className: styles['account__title-arrow']\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-chevron-down\"\n  })))), __jsx(\"div\", {\n    className: `${styles['account__content']} ${panelFour ? styles['is-active'] : null}`\n  }, __jsx(\"div\", {\n    className: styles['account__content-inner']\n  }, __jsx(\"div\", {\n    className: styles['account__name-container']\n  }, __jsx(\"div\", {\n    className: styles['profile-badge']\n  }, __jsx(\"span\", {\n    className: styles['profile-badge__initials']\n  }, initials)), __jsx(\"h3\", {\n    className: styles['account__name']\n  }, fullName)), __jsx(\"div\", {\n    className: styles['account__subscriptions-details-container']\n  }, __jsx(\"button\", {\n    className: `${styles['account__subscriptions-details-tab-link']} ${styles['is-active']}`\n  }, \"Available\"), \" / \", __jsx(\"button\", {\n    className: styles['account__subscriptions-details-tab-link']\n  }, \"Expired\")), __jsx(SubscriptionsDetails, null)))))));\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/scenes/Account/Account.tsx"],"names":["React","useState","styles","useSelector","useDispatch","LayoutDefault","ResetPasswordForm","PaymentDetailsForm","AccountDetailsForm","SubscriptionsDetails","selectInitials","useCardBrand","images","Account","dispatch","getSvgProps","showAddPaymentForm","setShowAddPaymentForm","initials","state","userSecurity","profile","fullName","name","email","phone","cardBrand","cardInfo","brand","cardName","cardLast4","last4","cardAddressLine1","address_line1","cardAddressLine2","address_line2","cardAddressCity","address_city","cardPostCode","address_zip","cardAddressCountry","address_country","panelOne","setPanelOne","panelTwo","setPanelTwo","panelThree","setPanelThree","panelFour","setPanelFour","showEditForm","setShowEditForm","handlePanelClick","index","toggleAddPaymentForm","type","toLowerCase","trim"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport styles from './Account.module.scss'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../services/RootState'\n\nimport LayoutDefault from '../../layouts/LayoutDefault/LayoutDefault'\nimport ResetPasswordForm from '../../components/ResetPasswordForm/ResetPasswordForm'\nimport PaymentDetailsForm from '../../components/PaymentDetailsForm/PaymentDetailsForm'\nimport AccountDetailsForm from '../../components/AccountDetailsForm/AccountDetailsForm'\nimport SubscriptionsDetails from '../../components/SubscriptionsDetails/SubscriptionsDetails'\nimport { getSubscriptionDetails } from '../../services/payments/subscriptions/api/getSubscriptionsSubscriptionDetails'\nimport { subscriptionDetailsRequestedEvent } from '../../services/payments/subscriptions/events'\nimport { subscriptionDetailsReceivedEvent } from '../../services/payments/subscriptions/events'\nimport { subscriptionDetailsErroredEvent } from '../../services/payments/subscriptions/events'\nimport { selectInitials } from '../../services/userSecurity/profile/selectors'\nimport { useCardBrand, images } from 'react-card-brand'\n\ninterface IAccountProps {\n  active?: boolean;\n}\n\nconst Account: React.FC<IAccountProps> = () => {\n\n  const dispatch = useDispatch();\n  const { getSvgProps } = useCardBrand();\n  const [showAddPaymentForm, setShowAddPaymentForm] = useState(false);\n\n  /* Moved to epic\n  const getData = async () => {\n    try {\n      // dispatch(subscriptionDetailsRequestedEvent())\n      const result = await getSubscriptionDetails()\n      dispatch(subscriptionDetailsReceivedEvent(result))\n    } catch (error) {\n      dispatch(subscriptionDetailsErroredEvent(error))\n    }\n  }\n  */\n\n  let initials = useSelector<RootState, string>((state) => selectInitials(state.userSecurity.profile))\n  let fullName = useSelector<RootState, string>((state) => state.userSecurity.profile?.name || '')\n  let email = useSelector<RootState, string>((state) => state.userSecurity.profile?.email || '')\n  let phone = useSelector<RootState, string>((state) => state.userSecurity.profile?.phone || '')\n\n  let cardBrand = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.brand || '')\n  let cardName = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.name || '')\n  let cardLast4 = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.last4 || '')\n\n  let cardAddressLine1 = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_line1 || '')\n  let cardAddressLine2 = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_line2 || '')\n  let cardAddressCity = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_city || '')\n  let cardPostCode = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_zip || '')\n  let cardAddressCountry = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_country || '')\n\n  const [panelOne, setPanelOne] = useState(true);\n  const [panelTwo, setPanelTwo] = useState(false);\n  const [panelThree, setPanelThree] = useState(false);\n  const [panelFour, setPanelFour] = useState(false);\n\n  const [showEditForm, setShowEditForm] = useState(false);\n\n  const handlePanelClick = (index: number) => {\n    index === 1 ? setPanelOne(true) : setPanelOne(false)\n    index === 2 ? setPanelTwo(true) : setPanelTwo(false)\n    index === 3 ? setPanelThree(true) : setPanelThree(false)\n    index === 4 ? setPanelFour(true) : setPanelFour(false)\n  }\n\n  const toggleAddPaymentForm = () => setShowAddPaymentForm(!showAddPaymentForm)\n\n  return (\n    <LayoutDefault>\n      <section>\n        <div className={`container ${styles['container']}`}>\n          <div className={styles['account']}>\n\n            <button className={`${styles['account__title']} ${panelOne ? styles['is-active'] : null}`} onClick={() => handlePanelClick(1)}>\n              <span>Security</span>\n              <i className={styles['account__title-arrow']}>\n                <svg className=\"icon\" role=\"presentation\">\n                  <use xlinkHref=\"#icon-chevron-down\"></use>\n                </svg>\n              </i>\n            </button>\n            <div className={`${styles['account__content']} ${panelOne ? styles['is-active'] : null}`}>\n              <div className={styles['account__content-inner']}>\n                <div className={styles['account__name-container']}>\n                  <div className={styles['profile-badge']}>\n                    <span className={styles['profile-badge__initials']}>\n                      {initials}\n                    </span>\n                  </div>\n                  <h3 className={styles['account__name']}>{fullName}</h3>\n                </div>\n                <ResetPasswordForm />\n              </div>\n            </div>\n\n\n            <button className={`${styles['account__title']} ${panelTwo ? styles['is-active'] : null}`} onClick={() => handlePanelClick(2)}>\n              <span>Payment</span>\n              <i className={styles['account__title-arrow']}>\n                <svg className=\"icon\" role=\"presentation\">\n                  <use xlinkHref=\"#icon-chevron-down\"></use>\n                </svg>\n              </i>\n            </button>\n            <div className={`${styles['account__content']} ${panelTwo ? styles['is-active'] : null}`}>\n              <div className={styles['account__content-inner']}>\n                <div className={styles['account__name-container']}>\n                  <div className={styles['profile-badge']}>\n                    <span className={styles['profile-badge__initials']}>\n                      {initials}\n                    </span>\n                  </div>\n                  <h3 className={styles['account__name']}>{fullName}</h3>\n                </div>\n\n                <div className={styles['account-details']}>\n                  {cardBrand && cardName && cardLast4 ? (\n                    <>\n                      <div className={styles['account-details__title']}>\n                        <h3>Details</h3>\n                      </div>\n                      <div className={styles['account-details__content']}>\n                        <p>\n                          {cardName}\n                          <br />\n                          {`**** **** **** ${cardLast4} `}\n                          <svg {...getSvgProps({ type: cardBrand.toLowerCase(), images })} />\n                        </p>\n                        <p>\n                          {cardAddressLine1}\n                          <br />\n                          {cardAddressLine2}\n                          <br />\n                          {cardAddressCity}{cardAddressCountry ? `, ${cardAddressCountry} ${cardPostCode}`.trim() : ''}\n                          <br />\n\n                        </p>\n                      </div>\n                    </>\n                  ) : 'No payment card associated to this account.'}\n                  <button\n                    onClick={() => setShowEditForm(!showEditForm)}\n                    className={styles['account-details__edit-button']}\n                  >\n                    <svg className=\"icon\" role=\"presentation\">\n                      <use xlinkHref=\"#icon-edit\"></use>\n                    </svg>\n                    <span className=\"screen-reader-text\">Edit</span>\n                  </button>\n                </div>\n                {showEditForm ? <PaymentDetailsForm /> : ''}\n              </div>\n            </div>\n\n            <button className={`${styles['account__title']} ${panelThree ? styles['is-active'] : null}`} onClick={() => handlePanelClick(3)}>\n              <span>Information</span>\n              <i className={styles['account__title-arrow']}>\n                <svg className=\"icon\" role=\"presentation\">\n                  <use xlinkHref=\"#icon-chevron-down\"></use>\n                </svg>\n              </i>\n            </button>\n            <div className={`${styles['account__content']} ${panelThree ? styles['is-active'] : null}`}>\n              <div className={styles['account__content-inner']}>\n                <div className={styles['account__name-container']}>\n                  <div className={styles['profile-badge']}>\n                    <span className={styles['profile-badge__initials']}>\n                      {initials}\n                    </span>\n                  </div>\n                  <h3 className={styles['account__name']}>{fullName}</h3>\n                </div>\n\n                <div className={styles['account-details']}>\n                  <div className={styles['account-details__title']}>\n                    <h3>Details</h3>\n                  </div>\n                  <div className={styles['account-details__content']}>\n                    <p>\n                      {fullName} <br />\n                      {email} <br />\n                      {phone} <br />\n                    </p>\n                    {/* <p>\n                      21 Spooky Lane\n                      <br />\n                      Spooksville, 666123\n                      <br />\n                      New Zealand\n                    </p> */}\n                  </div>\n                  <button className={styles['account-details__edit-button']}>\n                    <svg onClick={() => setShowEditForm(!showEditForm)} className=\"icon\" role=\"presentation\">\n                      <use xlinkHref=\"#icon-edit\"></use>\n                    </svg>\n                    <span className=\"screen-reader-text\">Edit</span>\n                  </button>\n                </div>\n                {showEditForm ? <AccountDetailsForm /> : ''}\n              </div>\n            </div>\n\n            <button className={`${styles['account__title']} ${panelFour ? styles['is-active'] : null}`} onClick={() => handlePanelClick(4)}>\n              <span>Subscriptions</span>\n              <i className={styles['account__title-arrow']}>\n                <svg className=\"icon\" role=\"presentation\">\n                  <use xlinkHref=\"#icon-chevron-down\"></use>\n                </svg>\n              </i>\n            </button>\n            <div className={`${styles['account__content']} ${panelFour ? styles['is-active'] : null}`}>\n              <div className={styles['account__content-inner']}>\n                <div className={styles['account__name-container']}>\n                  <div className={styles['profile-badge']}>\n                    <span className={styles['profile-badge__initials']}>\n                      {initials}\n                    </span>\n                  </div>\n                  <h3 className={styles['account__name']}>{fullName}</h3>\n                </div>\n                <div className={styles['account__subscriptions-details-container']}>\n                  <button className={`${styles['account__subscriptions-details-tab-link']} ${styles['is-active']}`} >Available</button> / <button className={styles['account__subscriptions-details-tab-link']}>Expired</button>\n                </div>\n                <SubscriptionsDetails />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </section>\n    </LayoutDefault>\n  )\n}\n\nexport default Account\n"]},"metadata":{},"sourceType":"module"}