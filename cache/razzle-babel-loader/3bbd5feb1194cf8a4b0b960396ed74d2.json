{"ast":null,"code":"import _asyncToGenerator from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/regenerator\";\nimport { baseUrl } from '../../../shared/baseUrl';\nimport { getHeaders } from '../../../shared/getHeaders';\nexport var postUserSecurityUpdatePassword = function postUserSecurityUpdatePassword(request) {\n  return fetch(\"\".concat(baseUrl, \"/v1/usersecurity/updatepassword\"), {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify({\n      newPassword: request.confirmPassword\n    })\n  }).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var json, data, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return response.json();\n\n            case 2:\n              json = _context.sent;\n              data = json.data;\n              result = {\n                data: data,\n                statusCode: json.statusCode,\n                success: json.success,\n                is_success: json['is_success']\n              };\n              return _context.abrupt(\"return\", result);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/userSecurity/password/api/postUserSecurityUpdatePassword.ts"],"names":["baseUrl","getHeaders","postUserSecurityUpdatePassword","request","fetch","method","headers","body","JSON","stringify","newPassword","confirmPassword","then","response","json","data","result","statusCode","success","is_success"],"mappings":";;AACA,SAASA,OAAT,QAAwB,yBAAxB;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,OAAD,EAAgF;AAC5H,SAAOC,KAAK,WACPJ,OADO,sCACmC;AAC7CK,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAEL,UAAU,EAF0B;AAG7CM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,WAAW,EAAEP,OAAO,CAACQ;AAAvB,KAAf;AAHuC,GADnC,CAAL,CAMLC,IANK;AAAA,wEAMA,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYA,QAAQ,CAACC,IAAT,EADZ;;AAAA;AACDA,cAAAA,IADC;AAECC,cAAAA,IAFD,GAE+BD,IAAI,CAACC,IAFpC;AAGCC,cAAAA,MAHD,GAG8C;AACjDD,gBAAAA,IAAI,EAAJA,IADiD;AAEjDE,gBAAAA,UAAU,EAAEH,IAAI,CAACG,UAFgC;AAGjDC,gBAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHmC;AAIjDC,gBAAAA,UAAU,EAAEL,IAAI,CAAC,YAAD;AAJiC,eAH9C;AAAA,+CASEE,MATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANA;;AAAA;AAAA;AAAA;AAAA,MAAP;AAiBD,CAlBM","sourcesContent":["import { PasswordResetRequest, PasswordResetResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { getHeaders } from '../../../shared/getHeaders'\n\nexport const postUserSecurityUpdatePassword = (request: PasswordResetRequest): Promise<ApiResponse<PasswordResetResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/updatepassword`, {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify({ newPassword: request.confirmPassword })\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const data: PasswordResetResponse = json.data\n    const result: ApiResponse<PasswordResetResponse> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    }\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}