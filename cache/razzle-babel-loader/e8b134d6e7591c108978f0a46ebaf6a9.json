{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/with-typescript/src/layouts/VideoPageTemplate/VideoPageTemplate.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTag, getTagsFull } from '../../services/content/tags/selectors';\nimport VideoStreamerSingle from '../../components/VideoStreamer/VideoStreamerSingle';\nimport LineUpMulti from '../../components/LineUpMulti/LineUpMulti';\nimport { useParams } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport TagNoContent from '../../scenes/TagNoContent/TagNoContent';\n\nvar getTicker = function getTicker(mainTag) {\n  if (!mainTag || !mainTag.ticker || mainTag.ticker.length === 0) return undefined;\n  return mainTag.ticker[0];\n};\n\nvar VideoPageTemplate = function VideoPageTemplate() {\n  var _stream$videoStreams;\n\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, []);\n\n  var _ref = useParams(),\n      eventIdParam = _ref.eventIdParam;\n\n  var eventId = 0; //\n\n  try {\n    eventId = parseInt(eventIdParam);\n  } catch (_unused) {\n    console.log('Invalid eventId parameter ', eventIdParam);\n  }\n\n  var _useState = useState(false),\n      playing = _useState[0],\n      setPlaying = _useState[1];\n\n  var _useState2 = useState(false),\n      setShowModal = _useState2[1];\n\n  var uuidIndex = useSelector(function (state) {\n    return state.content.tags.uuidIndex || [];\n  });\n  var isLoggedIn = useSelector(function (state) {\n    return selectIsLoggedIn(state.userSecurity.token);\n  });\n  var dispatch = useDispatch();\n  var streams = useSelector(function (state) {\n    return state.content.tags.streams;\n  });\n\n  var streamOrUndefined = _.find(streams || [], function (stream) {\n    return stream.eventId === eventId;\n  });\n\n  var stream = undefined;\n\n  if (streamOrUndefined && streams && streams.length > 0) {\n    stream = streams[0];\n  }\n\n  var mainTag = useSelector(function (state) {\n    if (!streamOrUndefined || !stream) return undefined;\n    return selectTag(state, stream.browseTags[stream.browseTags.length - 1]);\n  });\n  var userId = useSelector(function (state) {\n    var _state$userSecurity$p;\n\n    return ((_state$userSecurity$p = state.userSecurity.profile) === null || _state$userSecurity$p === void 0 ? void 0 : _state$userSecurity$p.id) || undefined;\n  });\n\n  if (!streamOrUndefined || !stream) {\n    return __jsx(TagNoContent, {\n      tagName: \"Event \".concat(eventId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  } // No stream or liveStreams?\n\n\n  var hasVideoStream = stream && stream.videoStreams && ((_stream$videoStreams = stream.videoStreams) === null || _stream$videoStreams === void 0 ? void 0 : _stream$videoStreams.length) > 0;\n  var hasBroadcast = stream && moment(stream.startTime).isSameOrAfter(moment.now());\n  var autoPlay = hasVideoStream && hasBroadcast && isLoggedIn;\n  var lineUpTagsFull = stream ? getTagsFull(stream.lineUpTags, uuidIndex) : [];\n  /*TagManager.dataLayer({\n    dataLayer: {\n      userId,\n      userProject: 'Sideline Live',\n      page: `/play/${stream.eventId}`\n    },\n    dataLayerName: 'PageDataLayer'\n  })*/\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(React.Fragment, null, __jsx(VideoStreamerSingle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), mainTag && __jsx(LineUpMulti, {\n    mainTag: mainTag,\n    streams: [stream],\n    limit: 1,\n    filterTag: undefined,\n    uuidIndex: uuidIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default VideoPageTemplate;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/layouts/VideoPageTemplate/VideoPageTemplate.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","selectTag","getTagsFull","VideoStreamerSingle","LineUpMulti","useParams","selectIsLoggedIn","moment","_","TagNoContent","getTicker","mainTag","ticker","length","undefined","VideoPageTemplate","window","scrollTo","eventIdParam","eventId","parseInt","console","log","playing","setPlaying","setShowModal","uuidIndex","state","content","tags","isLoggedIn","userSecurity","token","dispatch","streams","streamOrUndefined","find","stream","browseTags","userId","profile","id","hasVideoStream","videoStreams","hasBroadcast","startTime","isSameOrAfter","now","autoPlay","lineUpTagsFull","lineUpTags"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { ITag, IStream, ITicker, ITagIndex } from '../../services/content/tags/models'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../services/RootState'\nimport { selectMainTag, selectTag, selectMainTagStreams, selectHasLoaded, getTagsFull } from '../../services/content/tags/selectors'\nimport Ticker from '../../components/Ticker/Ticker'\nimport VideoStreamerSingle from '../../components/VideoStreamer/VideoStreamerSingle'\nimport LineUpMulti from '../../components/LineUpMulti/LineUpMulti'\nimport { useParams } from 'react-router-dom'\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors'\nimport { goBack } from 'connected-react-router'\nimport moment from 'moment'\nimport * as _ from 'lodash'\nimport TagManager from 'react-gtm-module'\nimport TagNoContent from '../../scenes/TagNoContent/TagNoContent'\nimport EventSeoHead from '../../components/SeoHead/EventSeoHead'\n\nexport interface IVideoPageTemplateProps {\n  readonly mainTag: ITag\n}\n\nconst getTicker = (mainTag: ITag | undefined): ITicker | undefined => {\n  if (!mainTag || !mainTag.ticker || mainTag.ticker.length === 0) return undefined\n  return mainTag.ticker[0]\n}\n\nconst VideoPageTemplate: React.FC<IVideoPageTemplateProps> = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n  const { eventIdParam } = useParams() as any\n  let eventId: number = 0//\n  try {\n    eventId = parseInt(eventIdParam)\n  } catch {\n    console.log('Invalid eventId parameter ', eventIdParam)\n  }\n\n  const [playing, setPlaying] = useState(false)\n  const [, setShowModal] = useState(false)\n  const uuidIndex = useSelector<RootState, ITagIndex[]>(state => state.content.tags.uuidIndex || [])\n  const isLoggedIn = useSelector<RootState, boolean>(state => selectIsLoggedIn(state.userSecurity.token))\n  const dispatch = useDispatch()\n\n  const streams = useSelector<RootState, IStream[] | undefined>(state => state.content.tags.streams)\n\n  const streamOrUndefined: IStream | undefined = _.find(streams || [], (stream: IStream) => stream.eventId === eventId)\n  let stream: IStream | undefined = undefined\n  if (streamOrUndefined && streams && streams.length > 0) {\n    stream = streams[0]\n  }\n\n  const mainTag = useSelector<RootState, ITag | undefined>(state => {\n    if (!streamOrUndefined || !stream) return undefined\n    return selectTag(state, stream.browseTags[stream.browseTags.length - 1])\n  }\n  )\n  const userId = useSelector<RootState, string | undefined>((state) => state.userSecurity.profile?.id || undefined)\n\n  if (!streamOrUndefined || !stream) {\n    return (<TagNoContent tagName={`Event ${eventId}`} />)\n  }\n\n\n  // No stream or liveStreams?\n  let hasVideoStream = (stream && stream.videoStreams && stream.videoStreams?.length > 0)\n  let hasBroadcast = stream && moment(stream.startTime).isSameOrAfter(moment.now())\n  let autoPlay = hasVideoStream && hasBroadcast && isLoggedIn\n  const lineUpTagsFull: ITag[] = stream ? getTagsFull(stream.lineUpTags, uuidIndex) : []\n\n  /*TagManager.dataLayer({\n    dataLayer: {\n      userId,\n      userProject: 'Sideline Live',\n      page: `/play/${stream.eventId}`\n    },\n    dataLayerName: 'PageDataLayer'\n  })*/\n\n\n  return (<div>\n    {\n      <>\n\n        <VideoStreamerSingle />\n        {\n          mainTag &&\n          <LineUpMulti mainTag={mainTag} streams={[stream]} limit={1} filterTag={undefined} uuidIndex={uuidIndex} />\n        }\n\n      </>\n    }\n  </div >)\n}\n\nexport default VideoPageTemplate\n"]},"metadata":{},"sourceType":"module"}