{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/SaveButtons/SaveTagButton.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { selectSavedTagIds } from '../../services/content/tags/selectors';\nimport { tagsSaveTagEvent } from '../../services/content/tags/events';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport { push } from 'connected-react-router';\n\nvar SaveTagButton = function SaveTagButton(props) {\n  var dispatch = useDispatch();\n  var savedTagIds = useSelector(function (state) {\n    return selectSavedTagIds(state);\n  });\n  var isLoggedIn = useSelector(function (state) {\n    return selectIsLoggedIn(state.userSecurity.token);\n  });\n  var uniqueId = uuidv4();\n  var tag = props.tag;\n  var hasTagId = tag && tag.id;\n  var tagId = hasTagId ? tag.id : '';\n\n  var _useState = useState(savedTagIds.includes(hasTagId ? tagId : '')),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var onSave = function onSave() {\n    if (isLoggedIn) {\n      dispatch(tagsSaveTagEvent(tagId));\n    } else {\n      dispatch(push('/login-back'));\n    }\n  };\n\n  useEffect(function () {\n    setChecked(savedTagIds.includes(hasTagId ? tag.id : '')); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [savedTagIds]);\n  return __jsx(React.Fragment, null, hasTagId && __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"cbx_\".concat(tagId, \"_\").concat(uniqueId),\n    id: \"cbx_\".concat(tagId, \"_\").concat(uniqueId),\n    className: \"is-toggle\",\n    checked: checked,\n    onChange: onSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"cbx_\".concat(tagId, \"_\").concat(uniqueId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, checked ? 'Saved' : 'Save')));\n};\n\nexport default SaveTagButton;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/SaveButtons/SaveTagButton.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","v4","uuidv4","selectSavedTagIds","tagsSaveTagEvent","selectIsLoggedIn","push","SaveTagButton","props","dispatch","savedTagIds","state","isLoggedIn","userSecurity","token","uniqueId","tag","hasTagId","id","tagId","includes","checked","setChecked","onSave","className"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAGA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AAEA,SAASC,gBAAT,QAAiC,6CAAjC;AAEA,SAASC,IAAT,QAAqB,wBAArB;;AAOA,IAAMC,aAA4C,GAAG,SAA/CA,aAA+C,CAACC,KAAD,EAAW;AAE9D,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,WAAW,GAAGV,WAAW,CAAsB,UAAAW,KAAK;AAAA,WAAIR,iBAAiB,CAACQ,KAAD,CAArB;AAAA,GAA3B,CAA/B;AACA,MAAMC,UAAmB,GAAGZ,WAAW,CAAqB,UAAAW,KAAK;AAAA,WAAIN,gBAAgB,CAACM,KAAK,CAACE,YAAN,CAAmBC,KAApB,CAApB;AAAA,GAA1B,CAAvC;AACA,MAAMC,QAAQ,GAAGb,MAAM,EAAvB;AAEA,MAAMc,GAAS,GAAGR,KAAK,CAACQ,GAAxB;AACA,MAAMC,QAAQ,GAAGD,GAAG,IAAIA,GAAG,CAACE,EAA5B;AACA,MAAMC,KAAK,GAAGF,QAAQ,GAAGD,GAAG,CAACE,EAAP,GAAY,EAAlC;;AAT8D,kBAUhCpB,QAAQ,CAACY,WAAW,CAACU,QAAZ,CAAqBH,QAAQ,GAAGE,KAAH,GAAW,EAAxC,CAAD,CAVwB;AAAA,MAUvDE,OAVuD;AAAA,MAU9CC,UAV8C;;AAY9D,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIX,UAAJ,EAAgB;AACdH,MAAAA,QAAQ,CAACL,gBAAgB,CAACe,KAAD,CAAjB,CAAR;AACD,KAFD,MAEO;AACLV,MAAAA,QAAQ,CAACH,IAAI,CAAC,aAAD,CAAL,CAAR;AACD;AACF,GAND;;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,UAAU,CAACZ,WAAW,CAACU,QAAZ,CAAqBH,QAAQ,GAAGD,GAAG,CAACE,EAAP,GAAY,EAAzC,CAAD,CAAV,CADc,CAEd;AACD,GAHQ,EAGN,CAACR,WAAD,CAHM,CAAT;AAKA,SAAQ,4BAEJO,QAAQ,IACR;AAAK,IAAA,SAAS,EAAET,KAAK,CAACgB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,gBAASL,KAAT,cAAkBJ,QAAlB,CAA3B;AAAyD,IAAA,EAAE,gBAASI,KAAT,cAAkBJ,QAAlB,CAA3D;AAAyF,IAAA,SAAS,EAAC,WAAnG;AAA+G,IAAA,OAAO,EAAEM,OAAxH;AAAiI,IAAA,QAAQ,EAAEE,MAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,OAAO,gBAASJ,KAAT,cAAkBJ,QAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CM,OAAO,GAAG,OAAH,GAAa,MAAjE,CAFF,CAHI,CAAR;AASD,CAlCD;;AAoCA,eAAed,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { ITag } from '../../services/content/tags/models'\nimport { selectSavedTagIds } from '../../services/content/tags/selectors'\nimport { tagsSaveTagEvent } from '../../services/content/tags/events'\nimport { RootState } from '../../services/RootState'\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors'\nimport { RootEventTypes } from '../../services/RootEventTypes'\nimport { push } from 'connected-react-router'\n\ninterface ISaveTagButtonProps {\n  tag: ITag\n  className: string\n}\n\nconst SaveTagButton: React.FC<ISaveTagButtonProps> = (props) => {\n\n  const dispatch = useDispatch()\n  const savedTagIds = useSelector<RootState, string[]>(state => selectSavedTagIds(state))\n  const isLoggedIn: boolean = useSelector<RootState, boolean>(state => selectIsLoggedIn(state.userSecurity.token))\n  const uniqueId = uuidv4()\n\n  const tag: ITag = props.tag\n  const hasTagId = tag && tag.id\n  const tagId = hasTagId ? tag.id : ''\n  const [checked, setChecked] = useState(savedTagIds.includes(hasTagId ? tagId : ''))\n\n  const onSave = () => {\n    if (isLoggedIn) {\n      dispatch(tagsSaveTagEvent(tagId))\n    } else {\n      dispatch(push('/login-back'))\n    }\n  }\n\n  useEffect(() => {\n    setChecked(savedTagIds.includes(hasTagId ? tag.id : ''))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [savedTagIds]);\n\n  return (<>\n    {\n      hasTagId &&\n      <div className={props.className}>\n        <input type=\"checkbox\" name={`cbx_${tagId}_${uniqueId}`} id={`cbx_${tagId}_${uniqueId}`} className=\"is-toggle\" checked={checked} onChange={onSave} />\n        <label htmlFor={`cbx_${tagId}_${uniqueId}`}>{checked ? 'Saved' : 'Save'}</label>\n      </div>\n    }\n  </>)\n}\n\nexport default SaveTagButton"]},"metadata":{},"sourceType":"module"}