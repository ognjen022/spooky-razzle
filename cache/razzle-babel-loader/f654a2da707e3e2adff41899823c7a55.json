{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nimport { getHeaders } from '../../../shared/getHeaders';\nexport const postPurchaseEvent = (livestreamEventId, card) => {\n  return fetch(`${baseUrl}/v1/payments/purchaseevent/${livestreamEventId}`, {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify(card)\n  }).then(async response => {\n    let json = await response.json(); // console.log('postPurchaseEvent response', response)\n    // console.log('postPurchaseEvent json', json)\n\n    const data = json.data;\n    const result = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json.is_success\n    }; // console.log('postPurchaseEvent result', result)\n\n    return result;\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/payments/purchase/api/postPurchaseEvent.ts"],"names":["baseUrl","getHeaders","postPurchaseEvent","livestreamEventId","card","fetch","method","headers","body","JSON","stringify","then","response","json","data","result","statusCode","success","is_success"],"mappings":"AAAA,SAASA,OAAT,QAAwB,yBAAxB;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,iBAAD,EAA4BC,IAA5B,KAAqE;AACpG,SAAOC,KAAK,CACT,GAAEL,OAAQ,8BAA6BG,iBAAkB,EADhD,EACmD;AAC7DG,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAEN,UAAU,EAF0C;AAG7DO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHuD,GADnD,CAAL,CAMLO,IANK,CAMA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB,CADyB,CAEzB;AACA;;AACA,UAAMC,IAAS,GAAGD,IAAI,CAACC,IAAvB;AACA,UAAMC,MAAwB,GAAG;AAC/BD,MAAAA,IAD+B;AAE/BE,MAAAA,UAAU,EAAEH,IAAI,CAACG,UAFc;AAG/BC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHiB;AAI/BC,MAAAA,UAAU,EAAEL,IAAI,CAACK;AAJc,KAAjC,CALyB,CAWzB;;AACA,WAAOH,MAAP;AACD,GAnBM,CAAP;AAoBD,CArBM","sourcesContent":["import { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { getHeaders } from '../../../shared/getHeaders'\n\nexport const postPurchaseEvent = (livestreamEventId: string, card: any): Promise<ApiResponse<any>> => {\n  return fetch(\n    `${baseUrl}/v1/payments/purchaseevent/${livestreamEventId}`, {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify(card)\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    // console.log('postPurchaseEvent response', response)\n    // console.log('postPurchaseEvent json', json)\n    const data: any = json.data\n    const result: ApiResponse<any> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json.is_success\n    }\n    // console.log('postPurchaseEvent result', result)\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}