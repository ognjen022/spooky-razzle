{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/AccordionFilter/AccordionFilter.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './AccordionFilter.module.scss';\n\nvar AccordionFilter = function AccordionFilter(props) {\n  var _option$items;\n\n  var filters = props.filters,\n      option = props.option,\n      onSelect = props.onSelect;\n\n  var _useState = useState(false),\n      isMenuExpanded = _useState[0],\n      setIsMenuExpanded = _useState[1];\n\n  var _useState2 = useState(null),\n      selectedOption = _useState2[0],\n      setSelectedOption = _useState2[1];\n\n  var handleChildrenVisibility = function handleChildrenVisibility() {\n    setIsMenuExpanded(!isMenuExpanded);\n  };\n\n  var handleSelectedItem = function handleSelectedItem(item) {\n    setSelectedOption(item);\n    onSelect(item);\n    setIsMenuExpanded(false);\n  };\n\n  var displayBold = function displayBold() {\n    var result = false;\n    option.items.forEach(function (val) {\n      if (filters.includes(val.tagId)) result = true;\n    });\n    return result;\n  };\n\n  var displayLabel = function displayLabel() {\n    if (filters.includes(option.tagId)) return option.name;\n    var result = '';\n    var includesCount = 0;\n    option.items.forEach(function (val) {\n      if (filters.includes(val.tagId)) {\n        result = val.name;\n        includesCount += 1;\n      }\n    });\n    if (includesCount === 1) return result;\n    return option.name;\n  };\n\n  var isOpenClass = isMenuExpanded ? styles['accordion-filter__is-open'] : '';\n  var isValueSelected = selectedOption ? styles['accordion-filter__is-selected'] : '';\n  return __jsx(\"div\", {\n    className: \"\".concat(styles['accordion-filter']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    tabIndex: 0,\n    className: \"\".concat(styles['accordion-filter__header'], \" \").concat(isOpenClass, \" \").concat(isValueSelected, \"  \").concat(displayBold() && styles['accordion-filter-highlight']),\n    onClick: handleChildrenVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles['accordion-filter__padding'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, displayLabel())), __jsx(\"div\", {\n    className: styles['accordion-filter__items-group'],\n    style: {\n      display: isMenuExpanded ? 'block' : 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, ((_option$items = option.items) === null || _option$items === void 0 ? void 0 : _option$items.length) > 0 && option.items.map(function (item) {\n    return item.showInAccordion && __jsx(\"button\", {\n      key: uuidv4(),\n      className: styles['accordion-filter__item'],\n      onClick: function onClick() {\n        return handleSelectedItem(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: styles['accordion-filter__padding'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, item.name));\n  })));\n};\n\nexport default AccordionFilter;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/AccordionFilter/AccordionFilter.tsx"],"names":["React","useState","v4","uuidv4","styles","AccordionFilter","props","filters","option","onSelect","isMenuExpanded","setIsMenuExpanded","selectedOption","setSelectedOption","handleChildrenVisibility","handleSelectedItem","item","displayBold","result","items","forEach","val","includes","tagId","displayLabel","name","includesCount","isOpenClass","isValueSelected","display","length","map","showInAccordion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport styles from './AccordionFilter.module.scss'\n\nimport { RootState } from '../../services/RootState'\nimport { IContentState } from '../../services/content/IContentState'\nimport { ITag, BrowseOption, BrowseResult } from '../../services/content/tags/models'\n\ninterface IAccordionFilterProps {\n  option: BrowseOption\n  filters: string[]\n  onSelect: (item: BrowseResult) => void\n}\n\nconst AccordionFilter: React.FC<IAccordionFilterProps> = (props) => {\n  const { filters, option, onSelect } = props\n\n  const [isMenuExpanded, setIsMenuExpanded] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<BrowseResult | null>(null);\n\n  const handleChildrenVisibility = () => {\n    setIsMenuExpanded(!isMenuExpanded)\n  }\n\n  const handleSelectedItem = (item: BrowseResult) => {\n    setSelectedOption(item)\n    onSelect(item)\n    setIsMenuExpanded(false)\n  }\n\n\n  const displayBold = (): boolean => {\n    let result = false\n\n    option.items.forEach((val: BrowseResult) => {\n      if (filters.includes(val.tagId)) result = true\n    })\n\n    return result\n  }\n\n  const displayLabel = (): string => {\n\n    if (filters.includes(option.tagId)) return option.name\n\n    let result = ''\n    let includesCount = 0\n    option.items.forEach((val: BrowseResult) => {\n      if (filters.includes(val.tagId)) {\n        result = val.name\n        includesCount += 1\n      }\n    })\n\n    if (includesCount === 1) return result\n\n    return option.name\n  }\n\n  const isOpenClass = isMenuExpanded ? styles['accordion-filter__is-open'] : '';\n  const isValueSelected = selectedOption ? styles['accordion-filter__is-selected'] : '';\n\n  return (\n    <div className={`${styles['accordion-filter']}`} >\n      <button\n        tabIndex={0}\n        className={`${styles['accordion-filter__header']} ${isOpenClass} ${isValueSelected}  ${displayBold() && styles['accordion-filter-highlight']}`}\n        onClick={handleChildrenVisibility}\n      >\n        <div className={styles['accordion-filter__padding']}>\n          {\n            displayLabel()\n          }\n        </div>\n      </button>\n\n      <div className={styles['accordion-filter__items-group']} style={{ display: isMenuExpanded ? 'block' : 'none' }}>\n        {\n          option.items?.length > 0 && option.items.map(item => item.showInAccordion && (\n            <button\n              key={uuidv4()}\n              className={styles['accordion-filter__item']}\n              onClick={() => handleSelectedItem(item)}\n            >\n              <div className={styles['accordion-filter__padding']}>{item.name}</div>\n            </button>\n          ))\n        }\n      </div>\n    </div >\n  )\n}\n\nexport default AccordionFilter\n"]},"metadata":{},"sourceType":"module"}