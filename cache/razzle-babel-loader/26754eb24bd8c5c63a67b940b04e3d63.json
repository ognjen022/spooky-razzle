{"ast":null,"code":"export let VideoStreamStatus;\n\n(function (VideoStreamStatus) {\n  VideoStreamStatus[VideoStreamStatus[\"Purchased\"] = 0] = \"Purchased\";\n  VideoStreamStatus[VideoStreamStatus[\"NotPurchased\"] = 1] = \"NotPurchased\";\n  VideoStreamStatus[VideoStreamStatus[\"NotPurchasedNotLoggedIn\"] = 2] = \"NotPurchasedNotLoggedIn\";\n  VideoStreamStatus[VideoStreamStatus[\"Free\"] = 3] = \"Free\";\n  VideoStreamStatus[VideoStreamStatus[\"FreeNotLoggedIn\"] = 4] = \"FreeNotLoggedIn\";\n})(VideoStreamStatus || (VideoStreamStatus = {}));\n\nexport let StreamTypes;\n\n(function (StreamTypes) {\n  StreamTypes[\"TracTracStream\"] = \"TracTracStream\";\n  StreamTypes[\"MatchStream\"] = \"MatchStream\";\n})(StreamTypes || (StreamTypes = {}));","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/content/tags/models.ts"],"names":["VideoStreamStatus","StreamTypes"],"mappings":"AA8IA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB;;AAQZ,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["export interface ITagsState {\n  readonly tree: ITag[] | undefined\n  // readonly filteredTree: ITag[] | undefined\n  readonly browseAll: BrowseOption[],\n  readonly browseFiltered: BrowseOption[]\n  readonly filters: string[]\n  readonly streams: IStream[] | undefined\n  readonly pathIndex: ITagIndex[] | undefined\n  readonly uuidIndex: ITagIndex[] | undefined\n  readonly mainTag: string | undefined\n  readonly error: string | undefined\n  readonly errorDescription: string | undefined\n  readonly hasLoadedTags: boolean\n  readonly hasLoadedStreams: boolean\n  readonly savedEventIds: number[]\n  readonly savedTagIds: string[]\n  readonly filterSearchTerm: string\n  readonly refreshKey: string\n  readonly visitedTags: any[];\n}\n\nexport interface ITagIndex {\n  readonly index: string | undefined\n  readonly parentIndex: string | undefined\n  readonly tag: ITag\n}\n\nexport interface ITicker {\n  readonly tickerMessage: string | undefined\n  readonly tickerExpiryTime: Date | undefined\n  readonly tickerLink: string | undefined\n}\n\nexport interface ITag {\n  readonly id: string\n  name: string\n  description: string\n  readonly ticker: ITicker[] | undefined\n  readonly image: string | undefined\n  readonly templateName: string | undefined\n  readonly secondaryTag1: string | undefined\n  readonly secondaryTag2: string | undefined\n  readonly secondaryTag3: string | undefined\n  readonly secondaryTag4: string | undefined\n  readonly secondaryTag5: string | undefined\n  readonly secondaryTag6: string | undefined\n  readonly secondaryTag7: string | undefined\n  readonly secondaryTag8: string | undefined\n  readonly secondaryTag9: string | undefined\n  readonly secondaryTag10: string | undefined\n  readonly seoTitle: string | undefined\n  readonly metaDescription: string | undefined\n  readonly ogImage: string | undefined\n  readonly ogTitle: string | undefined\n  readonly ogDescription: string | undefined\n  readonly icon: string | undefined\n  readonly facebookLink: string | undefined\n  readonly pricing: number | undefined\n  readonly hideFromBrowse: boolean\n  readonly twitterLink: string | undefined\n  readonly instagramLink: string | undefined\n  readonly stripeProductId: string | undefined\n  children: ITag[] | undefined\n  parent: ITag | undefined\n  path: string | undefined\n  copyStatement: ICopyStatement[] | undefined\n  streamCount: number\n  freeToWatch?: boolean | undefined\n}\n\nexport interface ICopyStatement {\n  readonly copyStatementText: string | undefined\n  readonly copyStatementLink: ICopyStatementLink | undefined\n}\n\nexport interface ICopyStatementLink {\n  readonly name: string | undefined\n  readonly target: string | undefined\n  readonly type: string | undefined\n  readonly url: string | undefined\n}\n\nexport interface ITagsResponse {\n  readonly tree: ITag[] | undefined\n  readonly error: string | undefined\n  readonly errorDescription: string | undefined\n}\n\n\nexport interface IStreamsResponse {\n  readonly streams: IStream[] | undefined\n  readonly error: string | undefined\n  readonly errorDescription: string | undefined\n}\n\nexport interface BrowseOption {\n  name: string\n  path: string\n  items: BrowseResult[]\n  tagId: string\n  parentTagId: string\n  relatedTagIds: string[]\n}\n\nexport interface BrowseResult {\n  name: string\n  path: string\n  tagId: string\n  parentTagId: string\n  children: BrowseResult[]\n  relatedTagIds: string[]\n  showInAccordion: boolean // only show top level items in the Accordion, but everything else in browse results\n}\n\nexport interface IStream {\n  name: string\n  readonly description: string\n  readonly image: string\n  readonly directions: string\n  readonly eventId: number\n  readonly isFreeToWatch: boolean\n  readonly startTime: Date\n  readonly duration: number\n  readonly streamRestricted: boolean\n  browseTags: string[]\n  readonly lineUpTags: string[]\n  readonly teamA: string\n  readonly teamB: string\n  readonly ticker: string\n  readonly videoStreams: VideoStream[]\n}\n\nexport interface VideoStream {\n  readonly streamName: string\n  // readonly streamEmbed: string\n  readonly liveStreamEventId: string\n  readonly liveEventVideoId: number\n  readonly previewImage: string\n  readonly tractracSource: string\n  readonly streamType: StreamTypes\n}\n\nexport enum VideoStreamStatus {\n  Purchased,\n  NotPurchased,\n  NotPurchasedNotLoggedIn,\n  Free,\n  FreeNotLoggedIn\n}\n\nexport enum StreamTypes {\n  TracTracStream = 'TracTracStream',\n  MatchStream = 'MatchStream'\n}"]},"metadata":{},"sourceType":"module"}