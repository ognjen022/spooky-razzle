{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as eventTypes from './eventTypes';\nimport * as userSecurityEventTypes from '../../userSecurity/token/eventTypes';\nconst initialState = {\n  id: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  isSubmitting: false,\n  items: []\n};\nconst subscriptionsReducer = createReducer(initialState, {\n  [userSecurityEventTypes.USERSECURITY_TOKEN_REMOVED]: state => _objectSpread({}, initialState),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_REQUESTED]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    isSubmitting: true\n  }),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_RECEIVED]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    items: action.payload,\n    isSubmitting: false\n  }),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_ERRORED]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    items: [],\n    isSubmitting: false\n  }),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_REQUESTED]: state => _objectSpread(_objectSpread({}, state), {}, {\n    isSubmitting: true\n  }),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_RECEIVED]: state => _objectSpread(_objectSpread({}, state), {}, {\n    isSubmitting: false\n  }),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_ERRORED]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    isSubmitting: false\n  })\n});\nexport default subscriptionsReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/payments/subscriptions/subscriptionsReducer.ts"],"names":["createReducer","eventTypes","userSecurityEventTypes","initialState","id","undefined","error","errorDescription","isSubmitting","items","subscriptionsReducer","USERSECURITY_TOKEN_REMOVED","state","SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_REQUESTED","SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_RECEIVED","action","payload","SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_ERRORED","SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_REQUESTED","SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_RECEIVED","SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_ERRORED"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAAsD,kBAAtD;AAGA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAO,KAAKC,sBAAZ,MAAwC,qCAAxC;AAEA,MAAMC,YAAsC,GAAG;AAC7CC,EAAAA,EAAE,EAAEC,SADyC;AAE7CC,EAAAA,KAAK,EAAED,SAFsC;AAG7CE,EAAAA,gBAAgB,EAAEF,SAH2B;AAI7CG,EAAAA,YAAY,EAAE,KAJ+B;AAK7CC,EAAAA,KAAK,EAAE;AALsC,CAA/C;AASA,MAAMC,oBAAuD,GAAGV,aAAa,CAACG,YAAD,EAAe;AAC1F,GAACD,sBAAsB,CAACS,0BAAxB,GAAsDC,KAAD,sBAAiBT,YAAjB,CADqC;AAE1F,GAACF,UAAU,CAACY,4CAAZ,GAA4DD,KAAD,oCAAiBT,YAAjB;AAA+BK,IAAAA,YAAY,EAAE;AAA7C,IAF+B;AAG1F,GAACP,UAAU,CAACa,2CAAZ,GAA0D,CAACF,KAAD,EAAQG,MAAR,qCACnDH,KADmD;AAC5CH,IAAAA,KAAK,EAAEM,MAAM,CAACC,OAD8B;AACrBR,IAAAA,YAAY,EAAE;AADO,IAHgC;AAM1F,GAACP,UAAU,CAACgB,0CAAZ,GAAyD,CAACL,KAAD,EAAQG,MAAR,qCAElDH,KAFkD;AAGrDH,IAAAA,KAAK,EAAE,EAH8C;AAIrDD,IAAAA,YAAY,EAAE;AAJuC,IANiC;AAa1F,GAACP,UAAU,CAACiB,8CAAZ,GAA8DN,KAAD,oCAAgBA,KAAhB;AAAuBJ,IAAAA,YAAY,EAAC;AAApC,IAb6B;AAc1F,GAACP,UAAU,CAACkB,6CAAZ,GAA6DP,KAAD,oCAAgBA,KAAhB;AAAuBJ,IAAAA,YAAY,EAAC;AAApC,IAd8B;AAe1F,GAACP,UAAU,CAACmB,4CAAZ,GAA2D,CAACR,KAAD,EAAQG,MAAR,qCAEtDH,KAFsD;AAGzDJ,IAAAA,YAAY,EAAE;AAH2C;AAf+B,CAAf,CAA7E;AAsBA,eAAeE,oBAAf","sourcesContent":["import { createReducer, PayloadAction, Reducer } from '@reduxjs/toolkit'\nimport { SubscriptionDetailsState, PurchaseHistory } from './models'\n\nimport * as eventTypes from './eventTypes'\nimport * as userSecurityEventTypes from '../../userSecurity/token/eventTypes'\n\nconst initialState: SubscriptionDetailsState = {\n  id: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  isSubmitting: false,\n  items: []\n}\n\n\nconst subscriptionsReducer: Reducer<SubscriptionDetailsState> = createReducer(initialState, {\n  [userSecurityEventTypes.USERSECURITY_TOKEN_REMOVED]: (state) => ({ ...initialState }),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_REQUESTED]: (state) => ({ ...initialState, isSubmitting: true }),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_RECEIVED]: (state, action: PayloadAction<PurchaseHistory[]>) => (\n    { ...state, items: action.payload, isSubmitting: false }\n  ),\n  [eventTypes.SUBSCRIPTIONS_SUBSCRIPTION_DETAILS_ERRORED]: (state, action: PayloadAction<any>) => (\n    {\n      ...state,\n      items: [],\n      isSubmitting: false\n    }\n  ),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_REQUESTED]: (state) => ({...state, isSubmitting:true}),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_RECEIVED]: (state) => ({...state, isSubmitting:false}),\n  [eventTypes.SUBSCRIPTIONS_UNSUBSCRIPTION_DETAILS_ERRORED]: (state, action: PayloadAction<any>) => ({\n    \n    ...state,\n    isSubmitting: false\n  })\n})\n\nexport default subscriptionsReducer"]},"metadata":{},"sourceType":"module"}