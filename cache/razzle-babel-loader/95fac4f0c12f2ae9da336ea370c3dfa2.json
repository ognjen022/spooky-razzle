{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { tokenReceivedEvent } from '../../services/userSecurity/token/events';\n\nconst Auth0Callback = props => {\n  let dispatch = useDispatch();\n  useEffect(() => {\n    let hash = window.location.hash;\n\n    if (hash && hash.length > 0) {\n      const urlParams = new URLSearchParams('?' + window.location.hash.substring(1));\n      let accessToken = urlParams.get('access_token');\n\n      if (accessToken) {\n        const event = {\n          accessToken: urlParams.get('access_token') || undefined,\n          idToken: undefined,\n          scope: urlParams.get('scope') || undefined,\n          expiresIn: parseInt(urlParams.get('expires_in') || '0'),\n          expiry: undefined,\n          tokenType: urlParams.get('token_type') || undefined,\n          error: urlParams.get('access_token') ? '' : 'No token in redirect',\n          errorDescription: urlParams.get('access_token') ? '' : 'No token in redirect',\n          refreshToken: urlParams.get('refresh_token') || undefined,\n          redirectTo: undefined\n        };\n        dispatch(tokenReceivedEvent(event));\n      } // dispatch(push('/'));\n\n    }\n  }, [dispatch]);\n  return __jsx(React.Fragment, null);\n};\n\nexport default Auth0Callback;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/components/Auth0Callback/Auth0Callback.tsx"],"names":["React","useEffect","useDispatch","tokenReceivedEvent","Auth0Callback","props","dispatch","hash","window","location","length","urlParams","URLSearchParams","substring","accessToken","get","event","undefined","idToken","scope","expiresIn","parseInt","expiry","tokenType","error","errorDescription","refreshToken","redirectTo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,kBAAT,QAAmC,0CAAnC;;AAOA,MAAMC,aAA4C,GAAIC,KAAD,IAAW;AAE9D,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIM,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAA3B;;AAEA,QAAIA,IAAI,IAAIA,IAAI,CAACG,MAAL,GAAc,CAA1B,EAA6B;AAE3B,YAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,MAAMJ,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAqBM,SAArB,CAA+B,CAA/B,CAA1B,CAAlB;AACA,UAAIC,WAAW,GAAGH,SAAS,CAACI,GAAV,CAAc,cAAd,CAAlB;;AAEA,UAAID,WAAJ,EAAiB;AACf,cAAME,KAAoB,GAAG;AAC3BF,UAAAA,WAAW,EAAEH,SAAS,CAACI,GAAV,CAAc,cAAd,KAAiCE,SADnB;AAE3BC,UAAAA,OAAO,EAAED,SAFkB;AAG3BE,UAAAA,KAAK,EAAER,SAAS,CAACI,GAAV,CAAc,OAAd,KAA0BE,SAHN;AAI3BG,UAAAA,SAAS,EAAEC,QAAQ,CAACV,SAAS,CAACI,GAAV,CAAc,YAAd,KAA+B,GAAhC,CAJQ;AAK3BO,UAAAA,MAAM,EAAEL,SALmB;AAM3BM,UAAAA,SAAS,EAAEZ,SAAS,CAACI,GAAV,CAAc,YAAd,KAA+BE,SANf;AAO3BO,UAAAA,KAAK,EAAEb,SAAS,CAACI,GAAV,CAAc,cAAd,IAAgC,EAAhC,GAAqC,sBAPjB;AAQ3BU,UAAAA,gBAAgB,EAAEd,SAAS,CAACI,GAAV,CAAc,cAAd,IAAgC,EAAhC,GAAqC,sBAR5B;AAS3BW,UAAAA,YAAY,EAAEf,SAAS,CAACI,GAAV,CAAc,eAAd,KAAkCE,SATrB;AAU3BU,UAAAA,UAAU,EAAEV;AAVe,SAA7B;AAaAX,QAAAA,QAAQ,CAACH,kBAAkB,CAACa,KAAD,CAAnB,CAAR;AACD,OApB0B,CAsB3B;;AACD;AAEF,GA7BQ,EA6BN,CAACV,QAAD,CA7BM,CAAT;AA+BA,SACE,2BADF;AAID,CAvCD;;AAyCA,eAAeF,aAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { TokenResponse } from '../../services/userSecurity/token/models'\nimport { tokenReceivedEvent } from '../../services/userSecurity/token/events'\n\ninterface ICopyStatementProps {\n  text: string;\n  image?: string;\n}\n\nconst Auth0Callback: React.FC<ICopyStatementProps> = (props) => {\n\n  let dispatch = useDispatch()\n\n  useEffect(() => {\n\n    let hash = window.location.hash\n\n    if (hash && hash.length > 0) {\n\n      const urlParams = new URLSearchParams('?' + window.location.hash.substring(1))\n      let accessToken = urlParams.get('access_token')\n\n      if (accessToken) {\n        const event: TokenResponse = {\n          accessToken: urlParams.get('access_token') || undefined,\n          idToken: undefined,\n          scope: urlParams.get('scope') || undefined,\n          expiresIn: parseInt(urlParams.get('expires_in') || '0'),\n          expiry: undefined,\n          tokenType: urlParams.get('token_type') || undefined,\n          error: urlParams.get('access_token') ? '' : 'No token in redirect',\n          errorDescription: urlParams.get('access_token') ? '' : 'No token in redirect',\n          refreshToken: urlParams.get('refresh_token') || undefined,\n          redirectTo: undefined\n        };\n\n        dispatch(tokenReceivedEvent(event));\n      }\n\n      // dispatch(push('/'));\n    }\n\n  }, [dispatch]);\n\n  return (\n    <>\n    </>\n  )\n}\n\nexport default Auth0Callback\n"]},"metadata":{},"sourceType":"module"}