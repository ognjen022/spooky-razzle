{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './AccountDetailsForm.module.scss';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { accountDetailsRequestedEvent } from '../../services/userSecurity/accountDetails/events';\nimport { regexEmail } from '../../utils/utils';\nimport { selectFirstName, selectLastName } from '../../services/userSecurity/profile/selectors';\n\nconst AccountDetails = () => {\n  let dispatch = useDispatch();\n  let profile = useSelector(state => state.userSecurity.profile);\n  const {\n    0: changeButton,\n    1: setChangeButton\n  } = useState(false); // Submit form\n\n  const onSubmit = async payload => {\n    // console.log({ firstName: payload.firstName, lastName: payload.lastName, email: payload.email, phone: payload.phone })\n    await dispatch(accountDetailsRequestedEvent(payload.firstName, payload.lastName, payload.email, payload.phone));\n    setChangeButton(true);\n    setTimeout(() => {\n      setChangeButton(false);\n    }, 3000);\n  }; // Initial values form\n\n\n  const initialValues = {\n    firstName: selectFirstName(profile),\n    lastName: selectLastName(profile),\n    email: profile.email || '',\n    phone: profile.phone || ''\n  }; // Create form\n\n  const {\n    form,\n    handleSubmit\n  } = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  }); // Create form fields\n\n  const firstName = useField('firstName', form);\n  const lastName = useField('lastName', form);\n  const email = useField('email', form);\n  const phone = useField('phone', form); // const chatName = useField('chatname', form)\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: styles['account__form']\n  }, __jsx(\"div\", {\n    className: styles['account__form-group']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n    data: firstName,\n    label: \"firstName\",\n    type: \"text\",\n    required: true\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n    data: lastName,\n    label: \"lastName\",\n    type: \"text\",\n    required: true\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"Email Address\"), __jsx(Input, {\n    data: email,\n    label: \"email\",\n    type: \"text\",\n    required: true,\n    disabled: true\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"Phone Number\"), __jsx(Input, {\n    data: phone,\n    label: \"phone\",\n    type: \"number\",\n    required: true\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group-button']\n  }, __jsx(\"p\", {\n    className: `text-right ${styles['text-right']}`\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: changeButton ? 'secondary' : 'secondary',\n    color: changeButton ? 'ghost-green' : 'success',\n    label: changeButton ? 'Saved' : 'Save'\n  })))));\n};\n\nexport const validate = values => {\n  var _values$firstName, _values$firstName2, _values$firstName3, _values$firstName4, _values$lastName, _values$lastName2, _values$lastName3, _values$lastName4;\n\n  const errors = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    phone: undefined\n  }; // First Name validations\n\n  if (values.firstName && ((_values$firstName = values.firstName) === null || _values$firstName === void 0 ? void 0 : _values$firstName.length) === 1 && ((_values$firstName2 = values.firstName) === null || _values$firstName2 === void 0 ? void 0 : _values$firstName2.length) < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.firstName = 'Enter your First Name';\n  } else if (values.firstName && ((_values$firstName3 = values.firstName) === null || _values$firstName3 === void 0 ? void 0 : _values$firstName3.length) < 3) {\n    errors.firstName = 'First Name must have at least 3 characters';\n  } else if (values.firstName && ((_values$firstName4 = values.firstName) === null || _values$firstName4 === void 0 ? void 0 : _values$firstName4.length) > 50) {\n    errors.firstName = 'First Name must have less than 50 characters';\n  } // Last Name validations\n\n\n  if (values.lastName && ((_values$lastName = values.lastName) === null || _values$lastName === void 0 ? void 0 : _values$lastName.length) === 1 && ((_values$lastName2 = values.lastName) === null || _values$lastName2 === void 0 ? void 0 : _values$lastName2.length) < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.firstName = 'Enter your Last Name';\n  } else if (values.lastName && ((_values$lastName3 = values.lastName) === null || _values$lastName3 === void 0 ? void 0 : _values$lastName3.length) < 3) {\n    errors.firstName = 'Last Name must have at least 3 characters';\n  } else if (values.lastName && ((_values$lastName4 = values.lastName) === null || _values$lastName4 === void 0 ? void 0 : _values$lastName4.length) > 50) {\n    errors.firstName = 'Last Name must have less than 50 characters';\n  } // Email validations\n\n\n  if (!values.email) {\n    errors.email = 'Enter your email';\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email';\n  } // Phone validations\n  // if (!values.phone) {\n  //   errors.phone = 'Enter your phone'\n  // } else if (!regexEmail.test(values.email)) {\n  //   errors.email = 'Enter a valid email'\n  // }\n\n\n  return errors;\n};\nexport default AccountDetails;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/components/AccountDetailsForm/AccountDetailsForm.tsx"],"names":["React","useState","useForm","useField","useDispatch","useSelector","styles","Input","Button","accountDetailsRequestedEvent","regexEmail","selectFirstName","selectLastName","AccountDetails","dispatch","profile","state","userSecurity","changeButton","setChangeButton","onSubmit","payload","firstName","lastName","email","phone","setTimeout","initialValues","form","handleSubmit","validate","values","errors","undefined","length","test"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport styles from './AccountDetailsForm.module.scss'\n\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\n\nimport { accountDetailsRequestedEvent } from '../../services/userSecurity/accountDetails/events'\nimport { regexEmail } from '../../utils/utils'\nimport { RootState } from '../../services/RootState'\nimport { selectFirstName, selectLastName } from '../../services/userSecurity/profile/selectors'\n\nexport interface IAccountDetailsFormValues {\n  firstName: string | undefined\n  lastName: string | undefined\n  email: string | undefined\n  phone: string | undefined\n}\n\nconst AccountDetails = () => {\n  let dispatch = useDispatch()\n\n  let profile = useSelector<RootState, any>((state) => state.userSecurity.profile)\n\n  const [changeButton, setChangeButton] = useState(false)\n\n  // Submit form\n  const onSubmit = async (payload: any) => {\n    // console.log({ firstName: payload.firstName, lastName: payload.lastName, email: payload.email, phone: payload.phone })\n    await dispatch(accountDetailsRequestedEvent(payload.firstName, payload.lastName, payload.email, payload.phone))\n    setChangeButton(true)\n    setTimeout(() => {\n      setChangeButton(false);\n    }, 3000)\n  }\n\n  // Initial values form\n  const initialValues: Partial<IAccountDetailsFormValues> = {\n    firstName: selectFirstName(profile),\n    lastName: selectLastName(profile),\n    email: profile.email || '',\n    phone: profile.phone || ''\n  }\n\n  // Create form\n  const { form, handleSubmit } = useForm({ onSubmit, validate, initialValues })\n\n  // Create form fields\n  const firstName = useField('firstName', form)\n  const lastName = useField('lastName', form)\n  const email = useField('email', form)\n  const phone = useField('phone', form)\n  // const chatName = useField('chatname', form)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles['account__form']}>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>First Name</label>\n            <Input data={firstName} label=\"firstName\" type=\"text\" required />\n          </p>\n        </div>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>Last Name</label>\n            <Input data={lastName} label=\"lastName\" type=\"text\" required />\n          </p>\n        </div>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>Email Address</label>\n            <Input data={email} label=\"email\" type=\"text\" required disabled />\n          </p>\n        </div>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>Phone Number</label>\n            <Input data={phone} label=\"phone\" type=\"number\" required />\n          </p>\n        </div>\n        <div className={styles['account__form-group-button']}>\n          <p className={`text-right ${styles['text-right']}`}>\n            <Button\n              type=\"submit\"\n              variant={changeButton ? 'secondary' : 'secondary'}\n              color={changeButton ? 'ghost-green' : 'success'}\n              label={changeButton ? 'Saved' : 'Save'}\n            />\n          </p>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport const validate = (values: IAccountDetailsFormValues) => {\n  const errors: IAccountDetailsFormValues = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    phone: undefined\n  }\n  // First Name validations\n  if (values.firstName && values.firstName?.length === 1 && values.firstName?.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.firstName = 'Enter your First Name'\n  } else if (values.firstName && values.firstName?.length < 3) {\n    errors.firstName = 'First Name must have at least 3 characters'\n  } else if (values.firstName && values.firstName?.length > 50) {\n    errors.firstName = 'First Name must have less than 50 characters'\n  }\n\n  // Last Name validations\n  if (values.lastName && values.lastName?.length === 1 && values.lastName?.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.firstName = 'Enter your Last Name'\n  } else if (values.lastName && values.lastName?.length < 3) {\n    errors.firstName = 'Last Name must have at least 3 characters'\n  } else if (values.lastName && values.lastName?.length > 50) {\n    errors.firstName = 'Last Name must have less than 50 characters'\n  }\n\n  // Email validations\n  if (!values.email) {\n    errors.email = 'Enter your email'\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email'\n  }\n\n  // Phone validations\n  // if (!values.phone) {\n  //   errors.phone = 'Enter your phone'\n  // } else if (!regexEmail.test(values.email)) {\n  //   errors.email = 'Enter a valid email'\n  // }\n\n  return errors\n}\n\nexport default AccountDetails\n"]},"metadata":{},"sourceType":"module"}