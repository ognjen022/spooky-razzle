{"ast":null,"code":"var __jsx = React.createElement;\n// Because stripe Elements is a PIG\nimport React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport PaymentNew from './PaymentNew';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\n\nconst PaymentWrapper = props => {\n  var _configuration$stripe;\n\n  const isLoggedIn = useSelector(state => selectIsLoggedIn(state.userSecurity.token));\n  const configuration = useSelector(state => state.configuration);\n  const {\n    0: stripePromise,\n    1: setStripePromise\n  } = useState(loadStripe((_configuration$stripe = configuration === null || configuration === void 0 ? void 0 : configuration.stripe_key) !== null && _configuration$stripe !== void 0 ? _configuration$stripe : '')); // todo:\n\n  useEffect(() => {\n    var _configuration$stripe2;\n\n    setStripePromise(loadStripe((_configuration$stripe2 = configuration.stripe_key) !== null && _configuration$stripe2 !== void 0 ? _configuration$stripe2 : ''));\n  }, [configuration]);\n  useEffect(() => {\n    console.log('PaymentWrapper isLoggedIn', isLoggedIn);\n  }, [isLoggedIn]);\n  return __jsx(\"div\", {\n    onMouseDown: e => e.stopPropagation()\n  }, configuration.stripe_key && __jsx(Elements, {\n    stripe: stripePromise\n  }, __jsx(PaymentNew, {\n    tagInfo: props.tagInfo,\n    eventId: props.eventId,\n    isLoggedIn: isLoggedIn\n  })));\n};\n\nexport default PaymentWrapper;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/scenes/Payment/PaymentWrapper.tsx"],"names":["React","useEffect","useState","loadStripe","Elements","PaymentNew","useSelector","selectIsLoggedIn","PaymentWrapper","props","isLoggedIn","state","userSecurity","token","configuration","stripePromise","setStripePromise","stripe_key","console","log","e","stopPropagation","tagInfo","eventId"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,QADF,QAEO,yBAFP;AAIA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,6CAAjC;;AAQA,MAAMC,cAA8C,GAAIC,KAAD,IAAW;AAAA;;AAEhE,QAAMC,UAAU,GAAGJ,WAAW,CAAsBK,KAAD,IAAWJ,gBAAgB,CAACI,KAAK,CAACC,YAAN,CAAmBC,KAApB,CAAhD,CAA9B;AAEA,QAAMC,aAAa,GAAGR,WAAW,CAAiCK,KAAK,IAAIA,KAAK,CAACG,aAAhD,CAAjC;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCd,QAAQ,CAACC,UAAU,0BAACW,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEG,UAAhB,yEAA8B,EAA9B,CAAX,CAAlD,CALgE,CAKgC;;AAEhGhB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACde,IAAAA,gBAAgB,CAACb,UAAU,2BAACW,aAAa,CAACG,UAAf,2EAA6B,EAA7B,CAAX,CAAhB;AACD,GAFQ,EAEN,CAACH,aAAD,CAFM,CAAT;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCT,UAAzC;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,WAAW,EAAEU,CAAC,IAAIA,CAAC,CAACC,eAAF;AAAvB,KAEMP,aAAa,CAACG,UAAd,IACF,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF;AAAlB,KACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAEN,KAAK,CAACa,OADjB;AAEE,IAAA,OAAO,EAAEb,KAAK,CAACc,OAFjB;AAGE,IAAA,UAAU,EAAEb;AAHd,IADF,CAHJ,CADF;AAcD,CA5BD;;AA8BA,eAAeF,cAAf","sourcesContent":["// Because stripe Elements is a PIG\n\nimport React, { useEffect, useState } from 'react'\nimport { loadStripe } from '@stripe/stripe-js'\nimport {\n  Elements\n} from '@stripe/react-stripe-js'\n\nimport PaymentNew from './PaymentNew'\nimport { useSelector } from 'react-redux'\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors'\nimport { RootState } from '../../services/RootState'\nimport { IConfigurationState } from '../../services/config/models'\n\ninterface IPaymentWrapperProps {\n  readonly tagInfo: any | undefined,\n  readonly eventId: number | undefined\n}\nconst PaymentWrapper: React.FC<IPaymentWrapperProps> = (props) => {\n\n  const isLoggedIn = useSelector<RootState, boolean>((state) => selectIsLoggedIn(state.userSecurity.token))\n\n  const configuration = useSelector<RootState, IConfigurationState>(state => state.configuration)\n  const [stripePromise, setStripePromise] = useState(loadStripe(configuration?.stripe_key ?? '')) // todo:\n  \n  useEffect(() => {\n    setStripePromise(loadStripe(configuration.stripe_key ?? ''));\n  }, [configuration])\n  useEffect(() => {\n    console.log('PaymentWrapper isLoggedIn', isLoggedIn)\n  }, [isLoggedIn])\n\n  return (\n    <div onMouseDown={e => e.stopPropagation()}>\n      {\n          configuration.stripe_key &&\n        <Elements stripe={stripePromise}>\n          <PaymentNew\n            tagInfo={props.tagInfo}\n            eventId={props.eventId}\n            isLoggedIn={isLoggedIn}/>\n          {/* <Payment tagInfo={props.tagInfo} eventId={props.eventId} isLoggedIn={isLoggedIn} ></Payment> */}\n        </Elements>\n      }\n    </div>\n  )\n}\n\nexport default PaymentWrapper"]},"metadata":{},"sourceType":"module"}