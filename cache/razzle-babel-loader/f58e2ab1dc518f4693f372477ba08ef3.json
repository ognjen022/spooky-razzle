{"ast":null,"code":"import _defineProperty from \"/Users/ognjen/Desktop/spooky-live-ssr/ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Routes from './Routes';\nimport './styles/main.scss';\nimport Notifications from 'react-notification-system-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { configRequestedEvent } from './services/config/events';\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin, withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { createBrowserHistory, createMemoryHistory } from 'history';\nimport { selectShowModal } from './services/payments/purchase/selectors';\nimport { isMobile } from './utils/utils'; // react azure insight implemetation to highest level component\n\nexport var isServer = !(true && window.document && window.document.createElement);\nexport var browserHistory = isServer ? createMemoryHistory({\n  initialEntries: ['/']\n}) : createBrowserHistory({\n  basename: ''\n});\nvar reactPlugin = new ReactPlugin();\n\nfunction App() {\n  var notifications = useSelector(function (state) {\n    return state.notifications;\n  });\n  var instrumentationKey = useSelector(function (state) {\n    return state.configuration.instrumentation_key;\n  });\n  var isModalOpen = useSelector(function (state) {\n    return state.userSecurity.accountDetails.showForgotPassword || state.userSecurity.accountDetails.showLogin || state.userSecurity.accountDetails.showSignup || state.userSecurity.accountDetails.showWelcomePage || selectShowModal(state.payments.purchase);\n  });\n  var component = /*#__PURE__*/React.createRef();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(configRequestedEvent());\n  });\n  useEffect(function () {\n    if (!isMobile()) {\n      ;\n      component.current.parentElement.parentElement.parentElement.style.overflow = isModalOpen ? 'hidden' : 'auto';\n    }\n  }, [isModalOpen]);\n  useEffect(function () {\n    if (instrumentationKey !== undefined) {\n      var appInsights = new ApplicationInsights({\n        config: {\n          instrumentationKey: instrumentationKey,\n          extensions: [reactPlugin],\n          extensionConfig: _defineProperty({}, reactPlugin.identifier, {\n            history: browserHistory\n          })\n        }\n      });\n      appInsights.loadAppInsights();\n    }\n  }, [instrumentationKey]);\n  return __jsx(\"div\", {\n    ref: component\n  }, __jsx(Notifications, {\n    notifications: notifications\n  }), __jsx(Routes, null));\n}\n\nexport default withAITracking(reactPlugin, App);","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/App.tsx"],"names":["React","useEffect","Routes","Notifications","useDispatch","useSelector","configRequestedEvent","ApplicationInsights","ReactPlugin","withAITracking","createBrowserHistory","createMemoryHistory","selectShowModal","isMobile","isServer","window","document","createElement","browserHistory","initialEntries","basename","reactPlugin","App","notifications","state","instrumentationKey","configuration","instrumentation_key","isModalOpen","userSecurity","accountDetails","showForgotPassword","showLogin","showSignup","showWelcomePage","payments","purchase","component","createRef","dispatch","current","parentElement","style","overflow","undefined","appInsights","config","extensions","extensionConfig","identifier","history","loadAppInsights"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport Routes from './Routes'\nimport './styles/main.scss'\nimport Notifications from 'react-notification-system-redux'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from './services/RootState'\nimport { configRequestedEvent } from './services/config/events'\n\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web'\nimport { ReactPlugin, withAITracking } from '@microsoft/applicationinsights-react-js'\n\nimport { createBrowserHistory, createMemoryHistory } from 'history'\nimport { selectShowModal } from './services/payments/purchase/selectors'\nimport { isMobile } from './utils/utils'\n\n// react azure insight implemetation to highest level component\n\nexport const isServer = !(typeof window !== 'undefined' && window.document && window.document.createElement)\n\nexport const browserHistory = isServer\n  ? createMemoryHistory({\n      initialEntries: ['/']\n    })\n  : createBrowserHistory({ basename: '' })\n\nconst reactPlugin = new ReactPlugin()\n\nfunction App() {\n  let notifications = useSelector<RootState, any>(state => state.notifications)\n\n  let instrumentationKey = useSelector<RootState, string | undefined>(state => state.configuration.instrumentation_key)\n\n  const isModalOpen = useSelector<RootState, boolean>(\n    state =>\n      state.userSecurity.accountDetails.showForgotPassword ||\n      state.userSecurity.accountDetails.showLogin ||\n      state.userSecurity.accountDetails.showSignup ||\n      state.userSecurity.accountDetails.showWelcomePage ||\n      selectShowModal(state.payments.purchase)\n  )\n\n  const component = React.createRef<HTMLDivElement>()\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(configRequestedEvent())\n  })\n\n  useEffect(() => {\n    if (!isMobile()) {\n      ;(component.current as any).parentElement.parentElement.parentElement.style.overflow = isModalOpen ? 'hidden' : 'auto'\n    }\n  }, [isModalOpen])\n\n  useEffect(() => {\n    if (instrumentationKey !== undefined) {\n      const appInsights = new ApplicationInsights({\n        config: {\n          instrumentationKey: instrumentationKey,\n          extensions: [reactPlugin as any],\n          extensionConfig: {\n            [reactPlugin.identifier]: { history: browserHistory }\n          }\n        }\n      })\n      appInsights.loadAppInsights()\n    }\n  }, [instrumentationKey])\n  return (\n    <div ref={component}>\n      <Notifications notifications={notifications} />\n      <Routes />\n    </div>\n  )\n}\n\nexport default withAITracking(reactPlugin, App)\n"]},"metadata":{},"sourceType":"module"}