{"ast":null,"code":"import _asyncToGenerator from \"/Users/ognjen/Desktop/spooky.live-ssr/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/ognjen/Desktop/spooky.live-ssr/node_modules/@babel/runtime/regenerator\";\nimport { baseUrl } from '../../../shared/baseUrl';\nimport { getHeaders } from '../../../shared/getHeaders';\nexport var postUnsubscribe = function postUnsubscribe() {\n  return fetch(\"\".concat(baseUrl, \"/v1/intents/unsubscribe\"), {\n    method: 'POST',\n    headers: getHeaders()\n  }).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var json, data, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return response.json();\n\n            case 2:\n              json = _context.sent;\n              data = json.data;\n              result = {\n                data: data,\n                statusCode: json.statusCode,\n                success: json.success,\n                is_success: json.is_success\n              };\n              return _context.abrupt(\"return\", result);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/payments/subscriptions/api/postUnsubscribe.ts"],"names":["baseUrl","getHeaders","postUnsubscribe","fetch","method","headers","then","response","json","data","result","statusCode","success","is_success"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,yBAAxB;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAoC;AACjE,SAAOC,KAAK,WACPH,OADO,8BAC2B;AACrCI,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAEJ,UAAU;AAFkB,GAD3B,CAAL,CAKLK,IALK;AAAA,wEAKA,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYA,QAAQ,CAACC,IAAT,EADZ;;AAAA;AACDA,cAAAA,IADC;AAGCC,cAAAA,IAHD,GAGaD,IAAI,CAACC,IAHlB;AAICC,cAAAA,MAJD,GAI4B;AAC/BD,gBAAAA,IAAI,EAAJA,IAD+B;AAE/BE,gBAAAA,UAAU,EAAEH,IAAI,CAACG,UAFc;AAG/BC,gBAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHiB;AAI/BC,gBAAAA,UAAU,EAAEL,IAAI,CAACK;AAJc,eAJ5B;AAAA,+CAUEH,MAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALA;;AAAA;AAAA;AAAA;AAAA,MAAP;AAiBD,CAlBM","sourcesContent":["import { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { getHeaders } from '../../../shared/getHeaders'\n\nexport const postUnsubscribe = (): Promise<ApiResponse<string>> => {\n  return fetch(\n    `${baseUrl}/v1/intents/unsubscribe`, {\n    method: 'POST',\n    headers: getHeaders(),\n  }\n  ).then(async (response) => {\n    let json = await response.json();\n\n    const data: any = json.data\n    const result: ApiResponse<any> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json.is_success\n    }\n    return result;\n  })\n}"]},"metadata":{},"sourceType":"module"}