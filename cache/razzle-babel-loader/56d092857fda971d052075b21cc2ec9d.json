{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nimport { getHeadersNoAuth } from '../../../shared/getHeaders';\nexport const getStreams = () => {\n  return fetch(`${baseUrl}/v1/tags/getstreams`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }).then(async response => {\n    let json = await response.json();\n    const jsonData = json.data;\n    const data = {\n      streams: jsonData,\n      error: '',\n      errorDescription: ''\n    };\n    return {\n      success: json.success,\n      statusCode: json.statusCode,\n      data,\n      is_success: json.success\n    };\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/content/tags/api/getStreams.ts"],"names":["baseUrl","getHeadersNoAuth","getStreams","fetch","method","headers","then","response","json","jsonData","data","streams","error","errorDescription","success","statusCode","is_success"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAGA,OAAO,MAAMC,UAAU,GAAG,MAA8C;AACtE,SAAOC,KAAK,CACT,GAAEH,OAAQ,qBADD,EACuB;AACjCI,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAEJ,gBAAgB;AAFQ,GADvB,CAAL,CAKLK,IALK,CAKA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,UAAMC,QAAa,GAAGD,IAAI,CAACE,IAA3B;AACA,UAAMA,IAAsB,GAAG;AAC7BC,MAAAA,OAAO,EAAEF,QADoB;AAE7BG,MAAAA,KAAK,EAAE,EAFsB;AAG7BC,MAAAA,gBAAgB,EAAE;AAHW,KAA/B;AAKA,WAAO;AAAEC,MAAAA,OAAO,EAAEN,IAAI,CAACM,OAAhB;AAAyBC,MAAAA,UAAU,EAAEP,IAAI,CAACO,UAA1C;AAAsDL,MAAAA,IAAtD;AAA4DM,MAAAA,UAAU,EAAER,IAAI,CAACM;AAA7E,KAAP;AACD,GAdM,CAAP;AAeD,CAhBM","sourcesContent":["import { IStreamsResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { getHeadersNoAuth } from '../../../shared/getHeaders'\nimport { ApiResponse } from '../../../shared/ApiResponse'\n\nexport const getStreams = (): Promise<ApiResponse<IStreamsResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/tags/getstreams`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const jsonData: any = json.data\n    const data: IStreamsResponse = {\n      streams: jsonData,\n      error: '',\n      errorDescription: ''\n    }\n    return { success: json.success, statusCode: json.statusCode, data, is_success: json.success }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}