{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nexport const postUserSecurityChangePassword = request => {\n  return fetch(`${baseUrl}/v1/usersecurity/changepassword`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: request.email\n    })\n  }).then(async response => {\n    let json = await response.json();\n    const data = json.data;\n    const result = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    };\n    return result;\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/token/api/postUserSecurityChangePassword.ts"],"names":["baseUrl","postUserSecurityChangePassword","request","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","result","statusCode","success","is_success"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AAGA,OAAO,MAAMC,8BAA8B,GAAIC,OAAD,IAA0F;AACtI,SAAOC,KAAK,CACT,GAAEH,OAAQ,iCADD,EACmC;AAC7CI,IAAAA,MAAM,EAAE,MADqC;AAC7BC,IAAAA,OAAO,EAAE;AACvB,sBAAgB;AADO,KADoB;AAI7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAEP,OAAO,CAACO;AAAjB,KAAf;AAJuC,GADnC,CAAL,CAOLC,IAPK,CAOA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,UAAMC,IAAgC,GAAGD,IAAI,CAACC,IAA9C;AACA,UAAMC,MAA+C,GAAG;AACtDD,MAAAA,IADsD;AAEtDE,MAAAA,UAAU,EAAEH,IAAI,CAACG,UAFqC;AAGtDC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHwC;AAItDC,MAAAA,UAAU,EAAEL,IAAI,CAAC,YAAD;AAJsC,KAAxD;AAMA,WAAOE,MAAP;AACD,GAjBM,CAAP;AAkBD,CAnBM","sourcesContent":["import { TokenPasswordResetRequest, TokenPasswordResetResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\n\nexport const postUserSecurityChangePassword = (request: TokenPasswordResetRequest): Promise<ApiResponse<TokenPasswordResetResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/changepassword`, {\n    method: 'POST', headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email: request.email })\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const data: TokenPasswordResetResponse = json.data\n    const result: ApiResponse<TokenPasswordResetResponse> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    }\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}