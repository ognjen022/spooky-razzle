{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/with-typescript/src/components/SaveButtons/SaveStreamButton.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { selectsavedEventIds } from '../../services/content/tags/selectors';\nimport { tagsSaveStreamEvent } from '../../services/content/tags/events';\nimport { push } from 'connected-react-router';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport { isMobile } from '../../utils/utils';\n\nvar SaveStreamButton = function SaveStreamButton(props) {\n  var dispatch = useDispatch();\n  var savedEventIds = useSelector(function (state) {\n    return selectsavedEventIds(state);\n  });\n  var isLoggedIn = useSelector(function (state) {\n    return selectIsLoggedIn(state.userSecurity.token);\n  });\n  var uniqueId = uuidv4();\n  var stream = props.stream; // const hasLivestreamEventId = stream && stream.videoStreams && stream.videoStreams.length > 0 && stream.videoStreams[0].liveStreamEventId\n\n  var eventId = stream.eventId;\n\n  var _useState = useState(savedEventIds.includes(stream.eventId)),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var setText = function setText() {\n    var _props$suffix;\n\n    var prefix = 'Save';\n    var suffix = (_props$suffix = props.suffix) !== null && _props$suffix !== void 0 ? _props$suffix : 'to My Feed';\n\n    if (isMobile()) {\n      return checked ? \"\".concat(prefix, \"d\") : prefix;\n    }\n\n    return checked ? \"\".concat(prefix, \"d \").concat(suffix) : \"\".concat(prefix, \" \").concat(suffix);\n  };\n\n  var onSave = function onSave() {\n    if (isLoggedIn) {\n      dispatch(tagsSaveStreamEvent(eventId));\n    } else {\n      dispatch(push('/login-back'));\n    }\n  };\n\n  useEffect(function () {\n    setChecked(savedEventIds.includes(stream.eventId)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [savedEventIds]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: props.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"cbx_\".concat(eventId, \"_\").concat(uniqueId),\n    id: \"cbx_\".concat(eventId, \"_\").concat(uniqueId),\n    className: \"is-toggle\",\n    checked: checked,\n    onChange: onSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"cbx_\".concat(eventId, \"_\").concat(uniqueId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, setText())));\n};\n\nexport default SaveStreamButton;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/components/SaveButtons/SaveStreamButton.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","v4","uuidv4","selectsavedEventIds","tagsSaveStreamEvent","push","selectIsLoggedIn","isMobile","SaveStreamButton","props","dispatch","savedEventIds","state","isLoggedIn","userSecurity","token","uniqueId","stream","eventId","includes","checked","setChecked","setText","prefix","suffix","onSave","className"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAGA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,gBAAT,QAAiC,6CAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAOA,IAAMC,gBAAkD,GAAG,SAArDA,gBAAqD,CAACC,KAAD,EAAW;AAEpE,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,aAAa,GAAGX,WAAW,CAAsB,UAAAY,KAAK;AAAA,WAAIT,mBAAmB,CAACS,KAAD,CAAvB;AAAA,GAA3B,CAAjC;AACA,MAAMC,UAAmB,GAAGb,WAAW,CAAqB,UAAAY,KAAK;AAAA,WAAIN,gBAAgB,CAACM,KAAK,CAACE,YAAN,CAAmBC,KAApB,CAApB;AAAA,GAA1B,CAAvC;AAEA,MAAMC,QAAQ,GAAGd,MAAM,EAAvB;AAEA,MAAMe,MAAM,GAAGR,KAAK,CAACQ,MAArB,CARoE,CASpE;;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;;AAVoE,kBAWtCpB,QAAQ,CAACa,aAAa,CAACQ,QAAd,CAAuBF,MAAM,CAACC,OAA9B,CAAD,CAX8B;AAAA,MAW7DE,OAX6D;AAAA,MAWpDC,UAXoD;;AAapE,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAc;AAAA;;AAE5B,QAAIC,MAAM,GAAG,MAAb;AACA,QAAIC,MAAM,oBAAGf,KAAK,CAACe,MAAT,yDAAmB,YAA7B;;AACA,QAAIjB,QAAQ,EAAZ,EAAgB;AACd,aAAOa,OAAO,aAAMG,MAAN,SAAkBA,MAAhC;AACD;;AAED,WAAOH,OAAO,aAAMG,MAAN,eAAiBC,MAAjB,cAA+BD,MAA/B,cAAyCC,MAAzC,CAAd;AACD,GATD;;AAWA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIZ,UAAJ,EAAgB;AACdH,MAAAA,QAAQ,CAACN,mBAAmB,CAACc,OAAD,CAApB,CAAR;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACL,IAAI,CAAC,aAAD,CAAL,CAAR;AACD;AACF,GAND;;AAQAR,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,UAAU,CAACV,aAAa,CAACQ,QAAd,CAAuBF,MAAM,CAACC,OAA9B,CAAD,CAAV,CADc,CAEd;AACD,GAHQ,EAGN,CAACP,aAAD,CAHM,CAAT;AAKA,SAAQ,4BAEJ;AAAK,IAAA,SAAS,EAAEF,KAAK,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,gBAASR,OAAT,cAAoBF,QAApB,CAA3B;AAA2D,IAAA,EAAE,gBAASE,OAAT,cAAoBF,QAApB,CAA7D;AAA6F,IAAA,SAAS,EAAC,WAAvG;AAAmH,IAAA,OAAO,EAAEI,OAA5H;AAAqI,IAAA,QAAQ,EAAEK,MAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,OAAO,gBAASP,OAAT,cAAoBF,QAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CM,OAAO,EAAtD,CAFF,CAFI,CAAR;AAQD,CA7CD;;AA+CA,eAAed,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { IStream } from '../../services/content/tags/models'\nimport { selectsavedEventIds } from '../../services/content/tags/selectors'\nimport { tagsSaveStreamEvent } from '../../services/content/tags/events'\nimport { RootState } from '../../services/RootState'\nimport { push } from 'connected-react-router'\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors'\nimport { isMobile } from '../../utils/utils'\n\ninterface ISaveStreamButtonProps {\n  stream: IStream\n  className: string,\n  suffix?: string | undefined\n}\nconst SaveStreamButton: React.FC<ISaveStreamButtonProps> = (props) => {\n\n  const dispatch = useDispatch()\n  const savedEventIds = useSelector<RootState, number[]>(state => selectsavedEventIds(state))\n  const isLoggedIn: boolean = useSelector<RootState, boolean>(state => selectIsLoggedIn(state.userSecurity.token))\n\n  const uniqueId = uuidv4()\n\n  const stream = props.stream\n  // const hasLivestreamEventId = stream && stream.videoStreams && stream.videoStreams.length > 0 && stream.videoStreams[0].liveStreamEventId\n  const eventId = stream.eventId\n  const [checked, setChecked] = useState(savedEventIds.includes(stream.eventId))\n\n  const setText = (): string => {\n\n    let prefix = 'Save'\n    let suffix = props.suffix ?? 'to My Feed'\n    if (isMobile()) {\n      return checked ? `${prefix}d` : prefix;\n    }\n\n    return checked ? `${prefix}d ${suffix}` : `${prefix} ${suffix}`;\n  }\n\n  const onSave = () => {\n    if (isLoggedIn) {\n      dispatch(tagsSaveStreamEvent(eventId))\n    } else {\n      dispatch(push('/login-back'))\n    }\n  }\n\n  useEffect(() => {\n    setChecked(savedEventIds.includes(stream.eventId))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [savedEventIds]);\n\n  return (<>\n    {\n      <div className={props.className}>\n        <input type=\"checkbox\" name={`cbx_${eventId}_${uniqueId}`} id={`cbx_${eventId}_${uniqueId}`} className=\"is-toggle\" checked={checked} onChange={onSave} />\n        <label htmlFor={`cbx_${eventId}_${uniqueId}`}>{setText()}</label>\n      </div>\n    }\n  </>)\n}\n\nexport default SaveStreamButton"]},"metadata":{},"sourceType":"module"}