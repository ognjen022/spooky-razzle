{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nimport { getHeadersNoAuth } from '../../../shared/getHeaders';\nexport const getNews = () => {\n  return fetch(`${baseUrl}/v1/tags/getnewsmetadata`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }).then(async response => {\n    let json = await response.json();\n    const newsMetaData = json.data;\n    const data = {\n      newsMetaData: newsMetaData,\n      error: '',\n      errorDescription: ''\n    };\n    return {\n      success: json.success,\n      statusCode: newsMetaData == null ? 400 : json.statusCode,\n      data,\n      is_success: json.success\n    };\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/content/news/api/getNews.ts"],"names":["baseUrl","getHeadersNoAuth","getNews","fetch","method","headers","then","response","json","newsMetaData","data","error","errorDescription","success","statusCode","is_success"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAmD;AACxE,SAAOC,KAAK,CACT,GAAEH,OAAQ,0BADD,EAC4B;AACtCI,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,OAAO,EAAEJ,gBAAgB;AAFa,GAD5B,CAAL,CAKLK,IALK,CAKA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,UAAMC,YAA4B,GAAGD,IAAI,CAACE,IAA1C;AACA,UAAMA,IAA2B,GAAG;AAClCD,MAAAA,YAAY,EAAEA,YADoB;AAElCE,MAAAA,KAAK,EAAE,EAF2B;AAGlCC,MAAAA,gBAAgB,EAAE;AAHgB,KAApC;AAKA,WAAO;AACLC,MAAAA,OAAO,EAAEL,IAAI,CAACK,OADT;AAELC,MAAAA,UAAU,EAAEL,YAAY,IAAI,IAAhB,GAAuB,GAAvB,GAA6BD,IAAI,CAACM,UAFzC;AAGLJ,MAAAA,IAHK;AAILK,MAAAA,UAAU,EAAEP,IAAI,CAACK;AAJZ,KAAP;AAMD,GAnBM,CAAP;AAoBD,CArBM","sourcesContent":["import { INewsMetaDataResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { getHeadersNoAuth } from '../../../shared/getHeaders'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { INewsArticle } from '../models'\n\nexport const getNews = (): Promise<ApiResponse<INewsMetaDataResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/tags/getnewsmetadata`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const newsMetaData: INewsArticle[] = json.data\n    const data: INewsMetaDataResponse = {\n      newsMetaData: newsMetaData,\n      error: '',\n      errorDescription: ''\n    }\n    return {\n      success: json.success,\n      statusCode: newsMetaData == null ? 400 : json.statusCode,\n      data,\n      is_success: json.success\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}