{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport styles from '../SignUp/SignUp.module.scss';\nimport { regexEmail, regexStrongPassword } from '../../utils/utils';\nimport { tokenRequestedEvent } from '../../services/userSecurity/token/events';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { selectSignInError, selectSignInIsSubmitting } from '../../services/userSecurity/token/selectors';\nimport { accountToggleForgotPasswordEvent, accountToggleLoginEvent, accountToggleSignupEvent } from '../../services/userSecurity/accountDetails/events';\nexport const validate = values => {\n  const errors = {\n    email: undefined,\n    password: undefined\n  }; // Email validations\n\n  if (!values.email) {\n    errors.email = 'Enter your email';\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email';\n  } // Password validations\n\n\n  if (!values.password) {\n    errors.password = 'Enter your password';\n  } else if (values.password && values.password.length < 8) {\n    errors.password = 'Hint: password must be at least 8 characters';\n  } else if (!regexStrongPassword.test(values.password)) {\n    errors.password = 'Hint: password must inlude a letter, a number and a special character';\n  } else if (values.password && values.password.length > 128) {\n    errors.password = 'Hint: password must be less than 128 characters';\n  }\n\n  return errors;\n};\n\nconst Login = () => {\n  let dispatch = useDispatch();\n  let errorText = useSelector(state => selectSignInError(state.userSecurity.token));\n  let isSubmitting = useSelector(state => selectSignInIsSubmitting(state.userSecurity.token));\n  let userId = useSelector(state => state.userSecurity.profile.id);\n  const showLoginModal = useSelector(state => state.userSecurity.accountDetails.showLogin); // Submit form\n\n  const onSubmit = async payload => {\n    await dispatch(tokenRequestedEvent({\n      username: payload.email,\n      password: payload.password,\n      redirectTo: undefined\n    }));\n  };\n\n  const onForgotPassword = () => {\n    dispatch(accountToggleForgotPasswordEvent());\n    dispatch(accountToggleLoginEvent());\n  };\n\n  const onSignup = () => {\n    dispatch(accountToggleSignupEvent());\n    dispatch(accountToggleLoginEvent());\n  }; // Initial values form\n\n\n  const initialValues = {\n    email: undefined,\n    password: undefined\n  }; // Create form\n\n  const {\n    form,\n    handleSubmit\n  } = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  }); // Create form fields\n\n  const email = useField('email', form);\n  const password = useField('password', form); // const loginWithGoogle = () => {\n  //   (window as any).location.href = getAuth0Redirect(SocialProvider.Google);\n  // }\n  // const loginWithFacebook = () => {\n  //   (window as any).location.href = getAuth0Redirect(SocialProvider.Facebook);\n  // }\n\n  useEffect(() => {\n    if (!showLoginModal) {\n      form.reset({\n        email: undefined,\n        password: undefined\n      });\n      form.resetFieldState('email');\n      form.resetFieldState('password');\n    }\n  }, [showLoginModal]);\n  return __jsx(\"div\", {\n    className: styles['signup-new'],\n    onMouseDown: e => e.stopPropagation()\n  }, __jsx(\"div\", {\n    className: styles['signup-new__content']\n  }, __jsx(\"div\", {\n    className: styles['signup-new__form-header']\n  }, __jsx(\"h2\", null, \"Log In\")), __jsx(\"form\", {\n    className: styles['signup-new__form-container'],\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: styles['signup-new__form']\n  }, __jsx(\"p\", {\n    className: errorText && errorText.length > 0 ? styles['signup-new__form-invalid-input'] : ''\n  }, __jsx(Input, {\n    data: email,\n    placeholder: \"Email\",\n    \"aria-label\": \"Email\",\n    label: \"email\",\n    type: \"email\",\n    required: true\n  })), __jsx(\"p\", {\n    className: errorText && errorText.length > 0 ? styles['signup-new__form-invalid-input'] : ''\n  }, __jsx(Input, {\n    data: password,\n    label: \"password\",\n    placeholder: \"Password\",\n    \"aria-label\": \"Password\",\n    type: \"password\",\n    required: true\n  })), __jsx(\"div\", {\n    className: styles['signup-new__action']\n  }, __jsx(\"p\", null, errorText && errorText.length > 0 && __jsx(\"span\", {\n    role: \"alert\"\n  }, errorText.toLowerCase() === 'invalid_grant' ? 'Incorrect username or password, please try again.' : errorText)), __jsx(\"p\", {\n    className: `text-right`\n  }, __jsx(Link, {\n    to: '#',\n    onClick: onForgotPassword\n  }, \"Forgot password?\")), __jsx(\"p\", null, __jsx(Button, {\n    variant: \"secondary\",\n    color: \"success\",\n    type: \"submit\",\n    isLoading: isSubmitting\n  }, \"Log In\")), __jsx(\"div\", {\n    className: styles['signup-new__tos-links']\n  }, __jsx(\"p\", null, \"By creating an account, you are agreeing to our \", __jsx(Link, {\n    to: \"/terms-of-service\"\n  }, \"Terms\"), \" and \", __jsx(Link, {\n    to: \"/privacy-policy\"\n  }, \"Privacy Policy\"), \".\"))))), __jsx(\"div\", {\n    className: styles['signup-new__form-footer']\n  }, __jsx(\"p\", {\n    className: `text-center`\n  }, __jsx(Link, {\n    to: '#',\n    onClick: onSignup\n  }, \"Not yet a member? \", __jsx(\"span\", {\n    className: `text-underline`\n  }, \"Sign up\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/scenes/Login/Login.tsx"],"names":["React","useEffect","Link","useDispatch","useSelector","useForm","useField","styles","regexEmail","regexStrongPassword","tokenRequestedEvent","Input","Button","selectSignInError","selectSignInIsSubmitting","accountToggleForgotPasswordEvent","accountToggleLoginEvent","accountToggleSignupEvent","validate","values","errors","email","undefined","password","test","length","Login","dispatch","errorText","state","userSecurity","token","isSubmitting","userId","profile","id","showLoginModal","accountDetails","showLogin","onSubmit","payload","username","redirectTo","onForgotPassword","onSignup","initialValues","form","handleSubmit","reset","resetFieldState","e","stopPropagation","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport styles from '../SignUp/SignUp.module.scss'\n\nimport { RootState } from '../../services/RootState'\n\nimport { regexEmail, regexStrongPassword } from '../../utils/utils'\nimport { tokenRequestedEvent } from '../../services/userSecurity/token/events'\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\nimport { selectSignInError, selectSignInIsSubmitting } from '../../services/userSecurity/token/selectors'\nimport { accountToggleForgotPasswordEvent, accountToggleLoginEvent, accountToggleSignupEvent } from '../../services/userSecurity/accountDetails/events'\n\ninterface ILoginFormValues {\n  email: string | undefined\n  password: string | undefined\n}\n\nexport const validate = (values: ILoginFormValues) => {\n  const errors: ILoginFormValues = {\n    email: undefined,\n    password: undefined\n  }\n\n  // Email validations\n  if (!values.email) {\n    errors.email = 'Enter your email'\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email'\n  }\n\n  // Password validations\n  if (!values.password) {\n    errors.password = 'Enter your password'\n  } else if (values.password && values.password.length < 8) {\n    errors.password = 'Hint: password must be at least 8 characters'\n  } else if (!regexStrongPassword.test(values.password)) {\n    errors.password = 'Hint: password must inlude a letter, a number and a special character'\n  } else if (values.password && values.password.length > 128) {\n    errors.password = 'Hint: password must be less than 128 characters'\n  }\n\n  return errors\n}\n\nconst Login = () => {\n  let dispatch = useDispatch()\n\n  let errorText = useSelector<RootState, string>(state => selectSignInError(state.userSecurity.token))\n  let isSubmitting = useSelector<RootState, boolean>(state => selectSignInIsSubmitting(state.userSecurity.token))\n  let userId = useSelector<RootState, string | null>(state => state.userSecurity.profile.id);\n\n  const showLoginModal  = useSelector<RootState, boolean>(state => state.userSecurity.accountDetails.showLogin);\n  // Submit form\n  const onSubmit = async (payload: any) => {\n    await dispatch(tokenRequestedEvent({ username: payload.email, password: payload.password, redirectTo: undefined }));\n  }\n\n  const onForgotPassword = () => {\n    dispatch(accountToggleForgotPasswordEvent());\n    dispatch(accountToggleLoginEvent())\n  }\n  const onSignup = () => {\n    dispatch(accountToggleSignupEvent())\n    dispatch(accountToggleLoginEvent())\n  }\n\n  // Initial values form\n  const initialValues: Partial<ILoginFormValues> = {\n    email: undefined,\n    password: undefined\n  }\n\n  // Create form\n  const { form, handleSubmit } = useForm({ onSubmit, validate, initialValues })\n\n  // Create form fields\n  const email = useField('email', form)\n  const password = useField('password', form)\n\n  // const loginWithGoogle = () => {\n  //   (window as any).location.href = getAuth0Redirect(SocialProvider.Google);\n  // }\n\n  // const loginWithFacebook = () => {\n  //   (window as any).location.href = getAuth0Redirect(SocialProvider.Facebook);\n  // }\n\n  useEffect(() => {\n    if (!showLoginModal) {\n      form.reset({\n        email: undefined,\n        password : undefined\n      })\n      form.resetFieldState('email');\n      form.resetFieldState('password');\n    }\n  }, [\n    showLoginModal\n  ])\n  return (\n    <div className={styles['signup-new']} onMouseDown={e => e.stopPropagation()}>\n            \n      <div className={styles['signup-new__content']}>\n        <div className={styles['signup-new__form-header']}>\n          <h2>Log In</h2>\n        </div>\n        \n        <form className={styles['signup-new__form-container']} onSubmit={handleSubmit}>\n          <div className={styles['signup-new__form']}>\n            <p className={errorText && errorText.length > 0 ? styles['signup-new__form-invalid-input'] : ''}>\n              <Input data={email} placeholder=\"Email\" aria-label=\"Email\" label=\"email\" type=\"email\" required />\n            </p>\n            <p className={errorText && errorText.length > 0 ? styles['signup-new__form-invalid-input'] : ''}>\n              <Input data={password} label=\"password\" placeholder=\"Password\" aria-label=\"Password\" type=\"password\" required />\n            </p>\n            <div className={styles['signup-new__action']}>\n              <p>\n                {\n                  errorText && errorText.length > 0 &&\n                  <span role=\"alert\">\n                    {errorText.toLowerCase() === 'invalid_grant' ? 'Incorrect username or password, please try again.' : errorText}\n                  </span>\n                }\n              </p>\n              <p className={`text-right`}>\n                <Link to={'#'} onClick={onForgotPassword}>Forgot password?</Link>\n              </p>\n              <p>\n                <Button variant=\"secondary\" color=\"success\" type=\"submit\" isLoading={isSubmitting}>\n                  Log In\n                </Button>\n              </p>\t\n              <div className={styles['signup-new__tos-links']}>\n              \t<p>By creating an account, you are agreeing to our <Link to=\"/terms-of-service\">Terms</Link> and <Link to=\"/privacy-policy\">Privacy Policy</Link>.</p>\n              </div>\n            </div>\n          </div>\n        </form>\n\n        <div className={styles['signup-new__form-footer']}>\n          <p className={`text-center`}>\n            <Link to={'#'} onClick={onSignup}>\n              Not yet a member? <span className={`text-underline`}>Sign up</span>\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}