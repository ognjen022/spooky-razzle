{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Contact.module.scss';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Textarea from '../../components/Textarea/Textarea';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactUsIsSending } from '../../services/contact/selectors';\nimport { contactUsRequestedEvent } from '../../services/contact/events';\nimport { regexEmail } from '../../utils/utils';\nimport { useField, useForm } from 'react-final-form-hooks';\nexport const validate = values => {\n  const errors = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    message: undefined\n  }; // Email validations\n\n  if (!values.email) {\n    errors.email = 'Enter your email';\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email';\n  } // Password validations\n\n\n  if (!values.message) {\n    errors.message = 'Enter your message';\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  let dispatch = useDispatch();\n  let isSending = useSelector(state => selectContactUsIsSending(state.contact));\n\n  const onSubmit = async payload => {\n    await dispatch(contactUsRequestedEvent(payload.firstName, payload.lastName, payload.email, payload.message));\n    setTimeout(() => {\n      form.reset();\n      form.resetFieldState('firstName');\n      form.resetFieldState('lastName');\n      form.resetFieldState('email');\n      form.resetFieldState('message');\n    }, 500);\n  }; // Initial values form\n\n\n  const initialValues = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    message: undefined\n  }; // Create form\n\n  const {\n    form,\n    handleSubmit\n  } = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  });\n  const firstName = useField('firstName', form);\n  const lastName = useField('lastName', form);\n  const email = useField('email', form);\n  const message = useField('message', form);\n  return __jsx(\"div\", {\n    className: 'container'\n  }, __jsx(\"div\", {\n    className: styles['contact-container']\n  }, __jsx(\"div\", {\n    className: styles['contact']\n  }, __jsx(\"h1\", null, \"Get in touch.\"), __jsx(\"p\", null, \"Send us an email at info@sideline.live, find us on \", __jsx(\"a\", {\n    className: styles['contact__link'],\n    href: \"https://www.facebook.com/sidelinelivenz\",\n    target: \"_blank\",\n    rel: \"noopener\"\n  }, \"Facebook\"), \" and \", __jsx(\"a\", {\n    className: styles['contact__link'],\n    href: \"https://www.instagram.com/sideline.live\",\n    target: \"_blank\",\n    rel: \"noopener\"\n  }, \"Instagram\"), \", or send us a message using the form to the right.\"), __jsx(\"p\", null, \"If you\\u2019re a school or a club, we\\u2019d especially love to hear from you! Send us a note and we\\u2019ll get in touch to let you know how we can work together.\"), __jsx(\"p\", null, \"If you need help with anything on the site, click the little message icon at the bottom of the page to talk to our support team, or check out our frequently asked questions \", __jsx(Link, {\n    className: styles['contact__link'],\n    to: '/faq'\n  }, \"here\"), \".\"), __jsx(\"p\", null, \"We look forward to hearing from you.\")), __jsx(\"form\", {\n    className: styles['contact-form'],\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: styles['contact-form__input-column']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n    data: firstName,\n    type: \"text\"\n  })), __jsx(\"p\", null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n    data: lastName,\n    type: \"text\"\n  })), __jsx(\"p\", null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n    data: email,\n    type: \"text\"\n  }))), __jsx(\"div\", {\n    className: styles['contact-form__message']\n  }, __jsx(\"p\", null, __jsx(\"label\", null, \"Message\"), __jsx(Textarea, {\n    data: message,\n    cols: 15,\n    rows: 15\n  })), __jsx(\"div\", {\n    className: styles['contact-form__button-container']\n  }, __jsx(Button, {\n    className: styles['contact-form__button'],\n    type: \"submit\",\n    variant: \"secondary\",\n    isLoading: isSending,\n    color: \"success\",\n    label: \"Send Message\"\n  }))))));\n};\n\nexport default withRouter(Contact);","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/scenes/Contact/Contact.tsx"],"names":["React","Link","styles","Input","Button","Textarea","withRouter","useSelector","useDispatch","selectContactUsIsSending","contactUsRequestedEvent","regexEmail","useField","useForm","validate","values","errors","firstName","undefined","lastName","email","message","test","Contact","dispatch","isSending","state","contact","onSubmit","payload","setTimeout","form","reset","resetFieldState","initialValues","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './Contact.module.scss'\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\nimport Textarea from '../../components/Textarea/Textarea'\nimport { withRouter } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../services/RootState'\nimport { selectContactUsIsSending, selectContactUsError } from '../../services/contact/selectors'\nimport { contactUsRequestedEvent } from '../../services/contact/events'\nimport { regexEmail } from '../../utils/utils'\nimport { useField, useForm } from 'react-final-form-hooks'\n\ninterface IContactValues {\n  firstName: string | undefined\n  lastName: string | undefined\n  email: string | undefined\n  message: string | undefined\n}\n\ninterface ContactProps {\n\n}\n\n\nexport const validate = (values: IContactValues) => {\n  const errors: IContactValues = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    message: undefined\n  }\n\n  // Email validations\n  if (!values.email) {\n    errors.email = 'Enter your email'\n  } else if (!regexEmail.test(values.email)) {\n    errors.email = 'Enter a valid email'\n  }\n\n  // Password validations\n  if (!values.message) {\n    errors.message = 'Enter your message'\n  }\n  return errors\n}\n\n\nconst Contact = () => {\n\n  let dispatch = useDispatch()\n\n  let isSending = useSelector<RootState, boolean>(state => selectContactUsIsSending(state.contact))\n\n  const onSubmit = async (payload: any) => {\n    await dispatch(contactUsRequestedEvent(payload.firstName, payload.lastName, payload.email, payload.message));\n    setTimeout(() => {\n      form.reset();\n      form.resetFieldState('firstName');\n      form.resetFieldState('lastName');\n      form.resetFieldState('email');\n      form.resetFieldState('message');\n    }, 500)\n  }\n\n  // Initial values form\n  const initialValues: Partial<IContactValues> = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    message: undefined\n  }\n\n  // Create form\n  const { form, handleSubmit } = useForm({ onSubmit, validate, initialValues })\n\n  const firstName = useField('firstName', form)\n  const lastName = useField('lastName', form)\n  const email = useField('email', form)\n  const message = useField('message', form)\n\n  return (\n    <div className={'container'}>\n\n      <div className={styles['contact-container']}>\n        <div className={styles['contact']}>\n          <h1>Get in touch.</h1>\n          <p>Send us an email at info@sideline.live, find us on <a className={styles['contact__link']} href=\"https://www.facebook.com/sidelinelivenz\" target=\"_blank\" rel=\"noopener\">Facebook</a> and <a className={styles['contact__link']} href=\"https://www.instagram.com/sideline.live\" target=\"_blank\" rel=\"noopener\">Instagram</a>, or send us a message using the form to the right.</p>\n          <p>If you’re a school or a club, we’d especially love to hear from you! Send us a note and we’ll get in touch to let you know how we can work together.</p>\n          <p>If you need help with anything on the site, click the little message icon at the bottom of the page to talk to our support team, or check out our frequently asked questions <Link className={styles['contact__link']} to={'/faq'}>here</Link>.</p>\n          <p>We look forward to hearing from you.</p>\n        </div>\n\n        <form className={styles['contact-form']} onSubmit={handleSubmit} >\n          <div className={styles['contact-form__input-column']}>\n            <p>\n              <label>First Name</label>\n              <Input data={firstName} type=\"text\" />\n            </p>\n            <p>\n              <label>Last Name</label>\n              <Input data={lastName} type=\"text\" />\n            </p>\n            <p>\n              <label>Email</label>\n              <Input data={email} type=\"text\" />\n            </p>\n          </div>\n\n          <div className={styles['contact-form__message']}>\n            <p>\n              <label>Message</label>\n              <Textarea data={message} cols={15} rows={15} />\n            </p>\n            <div className={styles['contact-form__button-container']}>\n              <Button className={styles['contact-form__button']} type=\"submit\" variant=\"secondary\" isLoading={isSending} color=\"success\" label=\"Send Message\" />\n            </div>\n          </div>\n        </form>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default withRouter(Contact)"]},"metadata":{},"sourceType":"module"}