{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/with-typescript/src/scenes/Payment/PaymentNew.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { useForm, useField } from \"react-final-form-hooks\";\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport * as eventTypes from \"../../services/payments/paymentDetails/eventTypes\";\nimport styles from \"./Payment.module.scss\";\nimport PromoCode from \"../../components/PromoCode/PromoCode\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { purchaseTagRequestedEvent, purchaseWatchItAllRequestedEvent, showPurchaseModalToggledEvent, purchaseGamePassRequestedEvent, promoRequestedEvent } from \"../../services/payments/purchase/events\";\nimport { PurchaseOption } from \"../../services/payments/purchase/models\";\nimport { push } from \"connected-react-router\";\nimport { selectGamePassPriceFormatted, selectWatchItAllPriceFormatted, selectSeasonPassPriceFormatted } from \"../../services/payments/products/selectors\";\nimport { isGamePass, isSeasonPass, selectPromoCode } from \"../../services/payments/purchase/selectors\";\nimport moment from \"moment\";\nimport Product, { productColor } from \"../../components/Product/Product\";\nimport { Link } from \"react-router-dom\";\nimport { selectTag } from \"../../services/content/tags/selectors\";\nimport { StreamTypes } from \"../../services/content/tags/models\";\nconst ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      fontFamily: \"Modern Era, sans-serif\",\n      fontSize: \"13px\",\n      backgroundColor: \"transparent\",\n      color: \"#F5F5F5\",\n      lineHeight: \"auto\"\n    },\n    invalid: {\n      color: \"#e82e06\"\n    }\n  }\n};\n\nconst validate = values => {\n  const errors = {\n    promoCode: undefined,\n    cardName: undefined,\n    cardNumber: undefined,\n    ccv: undefined,\n    expiry: undefined\n  };\n  return errors;\n};\n\nconst PaymentNew = props => {\n  const elements = useElements();\n  const stripe = useStripe();\n  const {\n    0: nameOnCard\n  } = useState(\"\");\n  const {\n    0: postal\n  } = useState(\"\");\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(\"\");\n  const {\n    1: setPaymentMethod\n  } = useState(null); // Initial values form\n\n  const initialValues = {\n    promoCode: undefined,\n    cardName: undefined,\n    cardNumber: undefined,\n    ccv: undefined,\n    expiry: undefined\n  };\n\n  const onSubmit = async payload => {};\n\n  const {\n    form\n    /*, handleSubmit, submitting */\n\n  } = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  });\n  const watchItAllPriceFormatted = useSelector(state => {\n    var _state$payments;\n\n    return selectWatchItAllPriceFormatted((_state$payments = state.payments) === null || _state$payments === void 0 ? void 0 : _state$payments.products, state.configuration);\n  });\n  const gamePassPriceFormatted = useSelector(state => {\n    var _state$payments2;\n\n    return selectGamePassPriceFormatted((_state$payments2 = state.payments) === null || _state$payments2 === void 0 ? void 0 : _state$payments2.products, state.configuration);\n  });\n  const seasonPassPriceFormatted = useSelector(state => selectSeasonPassPriceFormatted(state));\n  const gamePassSelected = useSelector(state => isGamePass(state.payments.purchase));\n  const seasonPassSelected = useSelector(state => isSeasonPass(state.payments.purchase));\n  const name = useSelector(state => {\n    var _state$userSecurity, _state$userSecurity$p;\n\n    return ((_state$userSecurity = state.userSecurity) === null || _state$userSecurity === void 0 ? void 0 : (_state$userSecurity$p = _state$userSecurity.profile) === null || _state$userSecurity$p === void 0 ? void 0 : _state$userSecurity$p.name) || \"\";\n  });\n  const isSaving = useSelector(state => state.payments.purchase.isSaving);\n  const promo = useSelector(state => selectPromoCode(state.payments.purchase));\n  const promoCode = useField(\"promoCode\", form);\n  const tag = useSelector(state => selectTag(state, state.payments.purchase.tagId));\n\n  promoCode.input.onBlur = e => {\n    const price = getPresetPrice().replace(/^[$*]/g, \"\");\n    dispatch(promoRequestedEvent(promoCode.input.value, price));\n  };\n\n  const streams = useSelector(state => state.content.tags.streams);\n\n  const stream = _.find(streams || [], stream => stream.eventId === props.eventId);\n\n  const {\n    0: total,\n    1: setTotal\n  } = useState(\"\");\n  const {\n    0: computeTrial,\n    1: calculateTrial\n  } = useState(\"\");\n  const {\n    0: purchaseOption,\n    1: setPurchaseOption\n  } = useState(PurchaseOption.WatchItAll);\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\\u00A0\");\n  const dispatch = useDispatch();\n\n  const continueFree = () => {\n    dispatch(showPurchaseModalToggledEvent(undefined, undefined, undefined));\n    push(\"/browse\");\n  };\n\n  const getPresetPrice = () => {\n    if (gamePassSelected) return gamePassPriceFormatted;else if (seasonPassSelected) return seasonPassPriceFormatted;else return watchItAllPriceFormatted;\n  };\n\n  useEffect(() => {\n    setTotal(getPresetPrice());\n\n    if (gamePassSelected) {\n      const videoStream = stream === null || stream === void 0 ? void 0 : stream.videoStreams.filter(stream => stream.streamType === StreamTypes.MatchStream)[0].streamName;\n      setPurchaseOption(PurchaseOption.GamePass);\n      setDescription(videoStream !== null && videoStream !== void 0 ? videoStream : \"\\u00A0\");\n    } else if (seasonPassSelected) {\n      var _tag$name;\n\n      setPurchaseOption(PurchaseOption.SeasonPass);\n      setDescription((_tag$name = tag === null || tag === void 0 ? void 0 : tag.name) !== null && _tag$name !== void 0 ? _tag$name : \"*Season Passes may vary in price\");\n    } else {\n      setPurchaseOption(PurchaseOption.WatchItAll);\n    }\n\n    const daysAfter = moment(new Date()).add(30, \"days\");\n    calculateTrial(`${daysAfter.format(\"DD.MM.YYYY\")}`);\n  }, []);\n  useEffect(() => {\n    var _promo$nextPayment;\n\n    const daysAfter = moment(new Date()).add(30, \"days\");\n    calculateTrial((_promo$nextPayment = promo === null || promo === void 0 ? void 0 : promo.nextPayment) !== null && _promo$nextPayment !== void 0 ? _promo$nextPayment : `${daysAfter.format(\"DD.MM.YYYY\")}`);\n\n    if (promo === null || promo === void 0 ? void 0 : promo.priceAfter) {\n      var _promo$priceAfter;\n\n      setTotal(`$${(parseFloat((_promo$priceAfter = promo === null || promo === void 0 ? void 0 : promo.priceAfter) !== null && _promo$priceAfter !== void 0 ? _promo$priceAfter : \"0\") / 100).toFixed(2)}`);\n    } else {\n      setTotal(getPresetPrice());\n    }\n  }, [promo]);\n\n  const handleSubmit2 = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const cardElement = elements.getElement(CardNumberElement);\n\n    try {\n      const token = await stripe.createToken(cardElement);\n      dispatch({\n        type: [eventTypes.PAYMENTS_PAYMENT_DETAILS_RECEIVED],\n        payload: token\n      });\n    } catch (error) {\n      dispatch({\n        type: [eventTypes.PAYMENTS_PAYMENT_DETAILS_ERRORED],\n        payload: error\n      });\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n      billing_details: {\n        name,\n        address: {\n          postal_code: postal\n        }\n      }\n    });\n\n    if (payload.error) {\n      console.log(\"Payment.tsx [error]\", payload.error);\n      setErrorMessage(payload.error.message);\n      setPaymentMethod(null);\n    } else {\n      setPaymentMethod(payload.paymentMethod);\n\n      switch (purchaseOption) {\n        case PurchaseOption.WatchItAll:\n          dispatch(purchaseWatchItAllRequestedEvent(promoCode.input.value, payload));\n          break;\n\n        case PurchaseOption.SeasonPass:\n          // console.log(payload);\n          dispatch(purchaseTagRequestedEvent(payload));\n          break;\n\n        case PurchaseOption.GamePass:\n          dispatch(purchaseGamePassRequestedEvent(payload));\n          break;\n      }\n\n      setErrorMessage(\"\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles[\"payment-new\"],\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles[\"payment-new__content\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles[\"payment-new__pricing-details\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles[\"payment-new__header\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"Plan details\"), purchaseOption === PurchaseOption.GamePass && __jsx(Product, {\n    description: description,\n    features: [\"Watch a events live\", \"Watch unlimited on demand\", \"Watch on any device\"],\n    onModal: true,\n    color: productColor.green,\n    showPurchaseButton: false,\n    title: \"Game Pass\",\n    price: `${gamePassPriceFormatted}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), purchaseOption === PurchaseOption.SeasonPass && __jsx(Product, {\n    description: description,\n    features: [\"Watch any event live from your selected season\", \"Watch unlimited on demand\", \"Watch on any device\"],\n    onModal: true,\n    color: productColor.green,\n    showPurchaseButton: false,\n    title: \"Season Pass\",\n    price: `${seasonPassPriceFormatted}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }), purchaseOption === PurchaseOption.WatchItAll && __jsx(Product, {\n    description: \"Monthly Subscription\",\n    features: [\"Watch all events live\", \"Includes all competitions\", \"No fixed term contracts\", \"Watch unlimited on demand\", \"Watch on any device\"],\n    onModal: true,\n    color: productColor.green,\n    showPurchaseButton: false,\n    title: \"Watch It All\",\n    price: `${watchItAllPriceFormatted} / Month`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles[\"payment-new__payment-details\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles[\"payment-new__header\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, \"Payment details\"), __jsx(\"form\", {\n    onSubmit: handleSubmit2,\n    className: styles[\"payment-new__form\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    data: nameOnCard,\n    placeholder: \"Name on card\",\n    label: \"cardName\",\n    type: \"text\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: styles[\"payment-new__form-group\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, __jsx(CardNumberElement, {\n    id: \"cardNumber\",\n    className: styles[\"payment-new__input\"]\n    /*onBlur={() => console.log('CardCvcElement blur')}\n                        onChange={() => console.log('CardCvcElement change')}\n                        onFocus={() => console.log('CardCvcElement focus')}\n                        onReady={() => console.log('CardCvcElement ready')}*/\n    ,\n    options: _objectSpread(_objectSpread({}, ELEMENT_OPTIONS), {}, {\n      placeholder: \"Credit card number \"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, __jsx(CardExpiryElement, {\n    id: \"expiry\",\n    className: styles[\"payment-new__input\"]\n    /*onBlur={() => console.log('CardExpiryElement blur')}\n                        onChange={() => console.log('CardExpiryElement change')}\n                        onFocus={() => console.log('CardExpiryElement focus')}\n                        onReady={() => console.log('CardExpiryElement ready')}*/\n    ,\n    options: _objectSpread(_objectSpread({}, ELEMENT_OPTIONS), {}, {\n      placeholder: \"Expiry date\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, __jsx(CardCvcElement, {\n    id: \"cvc\",\n    className: styles[\"payment-new__input\"]\n    /*onBlur={() => console.log('CardCvcElement blur')}\n                        onChange={() => console.log('CardCvcElement change')}\n                        onFocus={() => console.log('CardCvcElement focus')}\n                        onReady={() => console.log('CardCvcElement ready')}*/\n    ,\n    options: _objectSpread(_objectSpread({}, ELEMENT_OPTIONS), {}, {\n      placeholder: \"CVV number\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 19\n    }\n  }))), purchaseOption === PurchaseOption.WatchItAll && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, __jsx(PromoCode, {\n    data: promoCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  })), (purchaseOption === PurchaseOption.SeasonPass || purchaseOption === PurchaseOption.GamePass) && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    placeholder: \"Promo code\",\n    disabled: true,\n    label: \"promoCode\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: styles[\"payment-new__total\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, \"Total\"), __jsx(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, total), purchaseOption === PurchaseOption.WatchItAll && __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }, \"Next Payment Date\"), __jsx(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, computeTrial))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"secondary\",\n    color: \"success\",\n    label: \"Purchase Plan\",\n    isLoading: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: styles[\"payment-new__tos-links\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, \"By creating an account, you are agreeing to our\", \" \", __jsx(Link, {\n    to: \"/terms-of-service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, \"Terms\"), \" and\", \" \", __jsx(Link, {\n    to: \"/privacy-policy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"Privacy Policy\"), \".\"))))));\n};\n\nexport default PaymentNew;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/scenes/Payment/PaymentNew.tsx"],"names":["React","useEffect","useState","_","useForm","useField","CardNumberElement","CardCvcElement","CardExpiryElement","useElements","useStripe","eventTypes","styles","PromoCode","Input","Button","useDispatch","useSelector","purchaseTagRequestedEvent","purchaseWatchItAllRequestedEvent","showPurchaseModalToggledEvent","purchaseGamePassRequestedEvent","promoRequestedEvent","PurchaseOption","push","selectGamePassPriceFormatted","selectWatchItAllPriceFormatted","selectSeasonPassPriceFormatted","isGamePass","isSeasonPass","selectPromoCode","moment","Product","productColor","Link","selectTag","StreamTypes","ELEMENT_OPTIONS","style","base","fontFamily","fontSize","backgroundColor","color","lineHeight","invalid","validate","values","errors","promoCode","undefined","cardName","cardNumber","ccv","expiry","PaymentNew","props","elements","stripe","nameOnCard","postal","errorMessage","setErrorMessage","setPaymentMethod","initialValues","onSubmit","payload","form","watchItAllPriceFormatted","state","payments","products","configuration","gamePassPriceFormatted","seasonPassPriceFormatted","gamePassSelected","purchase","seasonPassSelected","name","userSecurity","profile","isSaving","promo","tag","tagId","input","onBlur","e","price","getPresetPrice","replace","dispatch","value","streams","content","tags","stream","find","eventId","total","setTotal","computeTrial","calculateTrial","purchaseOption","setPurchaseOption","WatchItAll","description","setDescription","continueFree","videoStream","videoStreams","filter","streamType","MatchStream","streamName","GamePass","SeasonPass","daysAfter","Date","add","format","nextPayment","priceAfter","parseFloat","toFixed","handleSubmit2","event","preventDefault","cardElement","getElement","token","createToken","type","PAYMENTS_PAYMENT_DETAILS_RECEIVED","error","PAYMENTS_PAYMENT_DETAILS_ERRORED","createPaymentMethod","card","billing_details","address","postal_code","console","log","message","paymentMethod","stopPropagation","green","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { useForm, useField } from \"react-final-form-hooks\";\nimport { StripeCardElementOptions } from \"@stripe/stripe-js\";\nimport {\n  CardNumberElement,\n  CardCvcElement,\n  CardExpiryElement,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\n\nimport * as eventTypes from \"../../services/payments/paymentDetails/eventTypes\";\n\nimport styles from \"./Payment.module.scss\";\n\nimport PromoCode from \"../../components/PromoCode/PromoCode\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../services/RootState\";\nimport {\n  purchaseTagRequestedEvent,\n  purchaseWatchItAllRequestedEvent,\n  showPurchaseModalToggledEvent,\n  purchaseGamePassRequestedEvent,\n  promoRequestedEvent,\n} from \"../../services/payments/purchase/events\";\nimport {\n  PromoInformation,\n  PurchaseOption,\n} from \"../../services/payments/purchase/models\";\nimport { push } from \"connected-react-router\";\nimport {\n  selectGamePassPriceFormatted,\n  selectWatchItAllPriceFormatted,\n  selectSeasonPassPriceFormatted,\n} from \"../../services/payments/products/selectors\";\n\nimport {\n  isGamePass,\n  isSeasonPass,\n  selectPromoCode,\n} from \"../../services/payments/purchase/selectors\";\n\nimport moment from \"moment\";\nimport Product, { productColor } from \"../../components/Product/Product\";\nimport { Link } from \"react-router-dom\";\nimport { selectTag } from \"../../services/content/tags/selectors\";\nimport { IStream, ITag, StreamTypes } from \"../../services/content/tags/models\";\nimport { debug } from \"console\";\n\ninterface IPaymentNewFormValues {\n  promoCode: string | undefined;\n  cardName: string | undefined;\n  cardNumber: string | undefined;\n  ccv: string | undefined;\n  expiry: string | undefined;\n}\n\ninterface IPaymentNewProps {\n  readonly tagInfo: any | undefined;\n  readonly eventId: number | undefined;\n  readonly isLoggedIn: boolean;\n}\n\nconst ELEMENT_OPTIONS: StripeCardElementOptions = {\n  style: {\n    base: {\n      fontFamily: \"Modern Era, sans-serif\",\n      fontSize: \"13px\",\n      backgroundColor: \"transparent\",\n      color: \"#F5F5F5\",\n      lineHeight: \"auto\",\n    },\n    invalid: {\n      color: \"#e82e06\",\n    },\n  },\n};\n\nconst validate = (values: IPaymentNewFormValues) => {\n  const errors: IPaymentNewFormValues = {\n    promoCode: undefined,\n    cardName: undefined,\n    cardNumber: undefined,\n    ccv: undefined,\n    expiry: undefined,\n  };\n\n  return errors;\n};\nconst PaymentNew: React.FC<IPaymentNewProps> = (props) => {\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const [nameOnCard] = useState(\"\");\n  const [postal] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [, setPaymentMethod] = useState(null);\n  // Initial values form\n  const initialValues: Partial<IPaymentNewFormValues> = {\n    promoCode: undefined,\n    cardName: undefined,\n    cardNumber: undefined,\n    ccv: undefined,\n    expiry: undefined,\n  };\n  const onSubmit = async (payload: any) => {};\n  const { form /*, handleSubmit, submitting */ } = useForm({\n    onSubmit,\n    validate,\n    initialValues,\n  });\n\n  const watchItAllPriceFormatted = useSelector<RootState, string>((state) =>\n    selectWatchItAllPriceFormatted(\n      state.payments?.products,\n      state.configuration\n    )\n  );\n  const gamePassPriceFormatted = useSelector<RootState, string>((state) =>\n    selectGamePassPriceFormatted(state.payments?.products, state.configuration)\n  );\n  const seasonPassPriceFormatted = useSelector<RootState, string>((state) =>\n    selectSeasonPassPriceFormatted(state)\n  );\n\n  const gamePassSelected = useSelector<RootState, boolean>((state) =>\n    isGamePass(state.payments.purchase)\n  );\n  const seasonPassSelected = useSelector<RootState, boolean>((state) =>\n    isSeasonPass(state.payments.purchase)\n  );\n  const name = useSelector<RootState, string>(\n    (state) => state.userSecurity?.profile?.name || \"\"\n  );\n  const isSaving = useSelector<RootState, boolean>(\n    (state) => state.payments.purchase.isSaving\n  );\n  const promo = useSelector<RootState, PromoInformation | undefined>((state) =>\n    selectPromoCode(state.payments.purchase)\n  );\n  const promoCode = useField(\"promoCode\", form);\n  const tag = useSelector<RootState, ITag | undefined>((state) =>\n    selectTag(state, state.payments.purchase.tagId)\n  );\n\n  promoCode.input.onBlur = (e) => {\n    const price = getPresetPrice().replace(/^[$*]/g, \"\");\n    dispatch(promoRequestedEvent(promoCode.input.value, price));\n  };\n  const streams = useSelector<RootState, IStream[] | undefined>(\n    (state) => state.content.tags.streams\n  );\n  const stream: IStream | undefined = _.find(\n    streams || [],\n    (stream: IStream) => stream.eventId === props.eventId\n  );\n\n  const [total, setTotal] = useState(\"\");\n  const [computeTrial, calculateTrial] = useState(\"\");\n  const [purchaseOption, setPurchaseOption] = useState<PurchaseOption>(\n    PurchaseOption.WatchItAll\n  );\n  const [description, setDescription] = useState(\"\\u00A0\");\n  const dispatch = useDispatch();\n\n  const continueFree = () => {\n    dispatch(showPurchaseModalToggledEvent(undefined, undefined, undefined));\n    push(\"/browse\");\n  };\n\n  const getPresetPrice = () => {\n    if (gamePassSelected) return gamePassPriceFormatted;\n    else if (seasonPassSelected) return seasonPassPriceFormatted;\n    else return watchItAllPriceFormatted;\n  };\n  useEffect(() => {\n    setTotal(getPresetPrice());\n    if (gamePassSelected) {\n      const videoStream = stream?.videoStreams.filter(\n        (stream) => stream.streamType === StreamTypes.MatchStream\n      )[0].streamName;\n      setPurchaseOption(PurchaseOption.GamePass);\n      setDescription(videoStream ?? \"\\u00A0\");\n    } else if (seasonPassSelected) {\n      setPurchaseOption(PurchaseOption.SeasonPass);\n      setDescription(tag?.name ?? \"*Season Passes may vary in price\");\n    } else {\n      setPurchaseOption(PurchaseOption.WatchItAll);\n    }\n\n    const daysAfter = moment(new Date()).add(30, \"days\");\n    calculateTrial(`${daysAfter.format(\"DD.MM.YYYY\")}`);\n  }, []);\n\n  useEffect(() => {\n    const daysAfter = moment(new Date()).add(30, \"days\");\n    calculateTrial(promo?.nextPayment ?? `${daysAfter.format(\"DD.MM.YYYY\")}`);\n\n    if (promo?.priceAfter) {\n      setTotal(`$${(parseFloat(promo?.priceAfter ?? \"0\") / 100).toFixed(2)}`);\n    } else {\n      setTotal(getPresetPrice());\n    }\n  }, [promo]);\n  const handleSubmit2 = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const cardElement = elements.getElement(CardNumberElement);\n\n    try {\n      const token = await stripe.createToken(cardElement as any);\n      dispatch({\n        type: [eventTypes.PAYMENTS_PAYMENT_DETAILS_RECEIVED],\n        payload: token,\n      });\n    } catch (error) {\n      dispatch({\n        type: [eventTypes.PAYMENTS_PAYMENT_DETAILS_ERRORED],\n        payload: error,\n      });\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement as any,\n      billing_details: {\n        name,\n        address: {\n          postal_code: postal,\n        },\n      },\n    });\n\n    if (payload.error) {\n      console.log(\"Payment.tsx [error]\", payload.error);\n      setErrorMessage(payload.error.message as any);\n      setPaymentMethod(null);\n    } else {\n      setPaymentMethod(payload.paymentMethod as any);\n\n      switch (purchaseOption) {\n        case PurchaseOption.WatchItAll:\n          dispatch(\n            purchaseWatchItAllRequestedEvent(promoCode.input.value, payload)\n          );\n          break;\n        case PurchaseOption.SeasonPass:\n          // console.log(payload);\n          dispatch(purchaseTagRequestedEvent(payload));\n          break;\n        case PurchaseOption.GamePass:\n          dispatch(purchaseGamePassRequestedEvent(payload));\n          break;\n      }\n      setErrorMessage(\"\");\n    }\n  };\n  return (\n    <div className={styles[\"payment-new\"]} onClick={(e) => e.stopPropagation()}>\n      <div className={styles[\"payment-new__content\"]}>\n        <div className={styles[\"payment-new__pricing-details\"]}>\n          <p className={styles[\"payment-new__header\"]}>Plan details</p>\n          {purchaseOption === PurchaseOption.GamePass && (\n            <Product\n              description={description}\n              features={[\n                \"Watch a events live\",\n                \"Watch unlimited on demand\",\n                \"Watch on any device\",\n              ]}\n              onModal={true}\n              color={productColor.green}\n              showPurchaseButton={false}\n              title={\"Game Pass\"}\n              price={`${gamePassPriceFormatted}`}\n            />\n          )}\n          {purchaseOption === PurchaseOption.SeasonPass && (\n            <Product\n              description={description}\n              features={[\n                \"Watch any event live from your selected season\",\n                \"Watch unlimited on demand\",\n                \"Watch on any device\",\n              ]}\n              onModal={true}\n              color={productColor.green}\n              showPurchaseButton={false}\n              title={\"Season Pass\"}\n              price={`${seasonPassPriceFormatted}`}\n            />\n          )}\n          {purchaseOption === PurchaseOption.WatchItAll && (\n            <Product\n              description={\"Monthly Subscription\"}\n              features={[\n                \"Watch all events live\",\n                \"Includes all competitions\",\n                \"No fixed term contracts\",\n                \"Watch unlimited on demand\",\n                \"Watch on any device\",\n              ]}\n              onModal={true}\n              color={productColor.green}\n              showPurchaseButton={false}\n              title={\"Watch It All\"}\n              price={`${watchItAllPriceFormatted} / Month`}\n            />\n          )}\n        </div>\n        <div className={styles[\"payment-new__payment-details\"]}>\n          <p className={styles[\"payment-new__header\"]}>Payment details</p>\n          <form\n            onSubmit={handleSubmit2}\n            className={styles[\"payment-new__form\"]}\n          >\n            <p>\n              <Input\n                data={nameOnCard}\n                placeholder=\"Name on card\"\n                label=\"cardName\"\n                type=\"text\"\n                required\n              />\n            </p>\n            {\n              <div className={styles[\"payment-new__form-group\"]}>\n                <p>\n                  <CardNumberElement\n                    id=\"cardNumber\"\n                    className={styles[\"payment-new__input\"]}\n                    /*onBlur={() => console.log('CardCvcElement blur')}\n                                        onChange={() => console.log('CardCvcElement change')}\n                                        onFocus={() => console.log('CardCvcElement focus')}\n                                        onReady={() => console.log('CardCvcElement ready')}*/\n                    options={{\n                      ...ELEMENT_OPTIONS,\n                      placeholder: \"Credit card number \",\n                    }}\n                  />\n                </p>\n                <p>\n                  <CardExpiryElement\n                    id=\"expiry\"\n                    className={styles[\"payment-new__input\"]}\n                    /*onBlur={() => console.log('CardExpiryElement blur')}\n                                        onChange={() => console.log('CardExpiryElement change')}\n                                        onFocus={() => console.log('CardExpiryElement focus')}\n                                        onReady={() => console.log('CardExpiryElement ready')}*/\n                    options={{ ...ELEMENT_OPTIONS, placeholder: \"Expiry date\" }}\n                  />\n                </p>\n                <p>\n                  <CardCvcElement\n                    id=\"cvc\"\n                    className={styles[\"payment-new__input\"]}\n                    /*onBlur={() => console.log('CardCvcElement blur')}\n                                        onChange={() => console.log('CardCvcElement change')}\n                                        onFocus={() => console.log('CardCvcElement focus')}\n                                        onReady={() => console.log('CardCvcElement ready')}*/\n                    options={{ ...ELEMENT_OPTIONS, placeholder: \"CVV number\" }}\n                  />\n                </p>\n              </div>\n            }\n            {purchaseOption === PurchaseOption.WatchItAll && (\n              <p>\n                <PromoCode data={promoCode} />\n                {/* <Input placeholder=\"Promo code\"  data={promoCode}  label=\"promoCode\" type=\"text\" /> */}\n              </p>\n            )}\n            {(purchaseOption === PurchaseOption.SeasonPass ||\n              purchaseOption === PurchaseOption.GamePass) && (\n              <p>\n                <Input\n                  placeholder=\"Promo code\"\n                  disabled={true}\n                  label=\"promoCode\"\n                  type=\"text\"\n                />\n              </p>\n            )}\n            <div className={styles[\"payment-new__total\"]}>\n              <div>Total</div>\n              <div className=\"text-right\">{total}</div>\n              {purchaseOption === PurchaseOption.WatchItAll && (\n                <>\n                  <div>Next Payment Date</div>\n                  <div className=\"text-right\">{computeTrial}</div>\n                </>\n              )}\n            </div>\n            <p>\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                color=\"success\"\n                label=\"Purchase Plan\"\n                isLoading={isSaving}\n              />\n            </p>\n\n            <div className={styles[\"payment-new__tos-links\"]}>\n              <p>\n                By creating an account, you are agreeing to our{\" \"}\n                <Link to=\"/terms-of-service\">Terms</Link> and{\" \"}\n                <Link to=\"/privacy-policy\">Privacy Policy</Link>.\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* {!isSaving && (\n        <Button\n          className={styles['payment-new__continue-free']}\n          variant=\"secondary\"\n          color=\"ghost-green\"\n          onClick={continueFree}\n          label=\"Continue for Free\"\n        ></Button>\n      )} */}\n    </div>\n  );\n};\n\nexport default PaymentNew;\n"]},"metadata":{},"sourceType":"module"}