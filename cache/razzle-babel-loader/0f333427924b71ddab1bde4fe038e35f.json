{"ast":null,"code":"import _defineProperty from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _createReducer;\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport moment from 'moment';\nimport * as eventTypes from './eventTypes';\nimport { deleteTokens } from '../../shared/tokenLocalStorage';\nvar initialState = {\n  signIn: {\n    accessToken: undefined,\n    expiresIn: 0,\n    expiry: undefined,\n    idToken: undefined,\n    scope: undefined,\n    tokenType: undefined,\n    error: undefined,\n    errorDescription: undefined,\n    isSubmitting: false\n  },\n  forgotPassword: {\n    email: undefined,\n    error: undefined,\n    errorDescription: undefined,\n    isSubmitting: false\n  }\n};\nvar tokenReducer = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED, function () {\n  var signIn = initialState.signIn;\n  var forgotPassword = initialState.forgotPassword;\n  var result = {\n    signIn: _objectSpread({}, signIn),\n    forgotPassword: _objectSpread(_objectSpread({}, forgotPassword), {}, {\n      isSubmitting: true\n    })\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED, function (state, event) {\n  var signIn = initialState.signIn;\n  var result = {\n    signIn: _objectSpread({}, signIn),\n    forgotPassword: _objectSpread(_objectSpread({}, event.payload), {}, {\n      error: 'Email sent.',\n      isSubmitting: false,\n      email: state.forgotPassword.email\n    })\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED, function (state, event) {\n  var signIn = initialState.signIn;\n  var result = {\n    signIn: _objectSpread({}, signIn),\n    forgotPassword: _objectSpread(_objectSpread({}, event.payload), {}, {\n      isSubmitting: false,\n      email: state.forgotPassword.email\n    })\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_REQUESTED, function () {\n  var signIn = initialState.signIn;\n  var forgotPassword = initialState.forgotPassword;\n  var result = {\n    signIn: _objectSpread(_objectSpread({}, signIn), {}, {\n      isSubmitting: true\n    }),\n    forgotPassword: _objectSpread({}, forgotPassword)\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_RECEIVED, function (state, event) {\n  var expiry = moment().add(event.payload['expires_in'], 's').toDate();\n  var forgotPassword = initialState.forgotPassword;\n  var result = {\n    signIn: _objectSpread(_objectSpread({}, event.payload), {}, {\n      expiry: expiry,\n      isSubmitting: false\n    }),\n    forgotPassword: _objectSpread({}, forgotPassword)\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_ERRORED, function (state, event) {\n  var forgotPassword = initialState.forgotPassword; // console.log('USERSECURITY_TOKEN_ERRORED event', event)\n\n  var result = {\n    signIn: _objectSpread(_objectSpread({}, event.payload), {}, {\n      expiry: undefined,\n      isSubmitting: false\n    }),\n    forgotPassword: _objectSpread({}, forgotPassword)\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_REFRESH_REQUESTED, function () {\n  var signIn = initialState.signIn;\n  var forgotPassword = initialState.forgotPassword;\n  var result = {\n    signIn: _objectSpread({}, signIn),\n    forgotPassword: _objectSpread({}, forgotPassword)\n  };\n  return result;\n}), _defineProperty(_createReducer, eventTypes.USERSECURITY_TOKEN_REMOVED, function () {\n  // TODO: move to epic\n  deleteTokens();\n\n  var result = _objectSpread({}, initialState);\n\n  return result;\n}), _defineProperty(_createReducer, 'TOKEN_PERSIST', function TOKEN_PERSIST(state) {\n  return _objectSpread({}, state);\n}), _createReducer));\nexport default tokenReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/userSecurity/token/tokenReducer.ts"],"names":["createReducer","moment","eventTypes","deleteTokens","initialState","signIn","accessToken","undefined","expiresIn","expiry","idToken","scope","tokenType","error","errorDescription","isSubmitting","forgotPassword","email","tokenReducer","USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED","result","USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED","state","event","payload","USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED","USERSECURITY_TOKEN_REQUESTED","USERSECURITY_TOKEN_RECEIVED","add","toDate","USERSECURITY_TOKEN_ERRORED","USERSECURITY_TOKEN_REFRESH_REQUESTED","USERSECURITY_TOKEN_REMOVED"],"mappings":"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","sourcesContent":["import { createReducer, Reducer, PayloadAction } from '@reduxjs/toolkit'\nimport { TokenState, TokenResponse, TokenPasswordResetResponse } from './models'\nimport moment from 'moment'\n\nimport * as eventTypes from './eventTypes'\nimport { deleteTokens } from '../../shared/tokenLocalStorage'\n\nconst initialState: TokenState = {\n  signIn: {\n    accessToken: undefined,\n    expiresIn: 0,\n    expiry: undefined,\n    idToken: undefined,\n    scope: undefined,\n    tokenType: undefined,\n    error: undefined,\n    errorDescription: undefined,\n    isSubmitting: false\n  },\n  forgotPassword: {\n    email: undefined,\n    error: undefined,\n    errorDescription: undefined,\n    isSubmitting: false\n  }\n}\n\nconst tokenReducer: Reducer<TokenState> = createReducer(initialState, {\n  // Reset Password Event Handlers\n  [eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED]: () => {\n    let signIn = initialState.signIn\n    let forgotPassword = initialState.forgotPassword\n    let result = {\n      signIn: { ...signIn },\n      forgotPassword: { ...forgotPassword, isSubmitting: true }\n    }\n    return result\n  },\n  [eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED]: (state, event: PayloadAction<TokenPasswordResetResponse>) => {\n    let signIn = initialState.signIn\n    let result = {\n      signIn: { ...signIn },\n      forgotPassword: {\n        ...event.payload,\n        error: 'Email sent.',\n        isSubmitting: false,\n        email: state.forgotPassword.email\n      }\n    }\n    return result\n  },\n  [eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED]: (state, event: PayloadAction<any>) => {\n    let signIn = initialState.signIn\n    let result = {\n      signIn: { ...signIn },\n      forgotPassword: {\n        ...event.payload,\n        isSubmitting: false,\n        email: state.forgotPassword.email\n      }\n    }\n    return result\n\n  },\n\n  // SignIn Event Handlers\n  [eventTypes.USERSECURITY_TOKEN_REQUESTED]: () => {\n    let signIn = initialState.signIn\n    let forgotPassword = initialState.forgotPassword\n    let result = {\n      signIn: { ...signIn, isSubmitting: true },\n      forgotPassword: { ...forgotPassword }\n    }\n    return result\n  },\n  [eventTypes.USERSECURITY_TOKEN_RECEIVED]: (state, event: PayloadAction<TokenResponse>) => {\n    const expiry: Date = moment().add(event.payload['expires_in'], 's').toDate()\n    \n    let forgotPassword = initialState.forgotPassword\n    const result = {\n      signIn: {\n        ...event.payload,\n        expiry,\n        isSubmitting: false\n      },\n      forgotPassword: { ...forgotPassword }\n    }\n    return result\n  },\n  [eventTypes.USERSECURITY_TOKEN_ERRORED]: (state, event: PayloadAction<TokenResponse>) => {\n    let forgotPassword = initialState.forgotPassword\n    // console.log('USERSECURITY_TOKEN_ERRORED event', event)\n    const result = {\n      signIn: {\n        ...event.payload,\n        expiry: undefined,\n        isSubmitting: false\n      },\n      forgotPassword: { ...forgotPassword }\n    }\n    return result\n  },\n  [eventTypes.USERSECURITY_TOKEN_REFRESH_REQUESTED]: () => {\n    let signIn = initialState.signIn\n    let forgotPassword = initialState.forgotPassword\n    let result = {\n      signIn: { ...signIn },\n      forgotPassword: { ...forgotPassword }\n    }\n    return result\n  },\n  // SignOut Event Handlers \n  [eventTypes.USERSECURITY_TOKEN_REMOVED]: () => {\n\n    // TODO: move to epic\n    deleteTokens()\n\n    let result = { ...initialState }\n    return result\n  },\n  ['TOKEN_PERSIST']: (state) => ({...state})\n})\n\nexport default tokenReducer\n"]},"metadata":{},"sourceType":"module"}