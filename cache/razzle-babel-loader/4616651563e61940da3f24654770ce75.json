{"ast":null,"code":"import { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { tokenPasswordResetRequestedEvent, tokenPasswordResetReceivedEvent, tokenPasswordResetErroredEvent } from '../events';\nimport { postUserSecurityChangePassword } from '../api/postUserSecurityChangePassword';\n\nvar tokenPasswordResetRequestedEpic = function tokenPasswordResetRequestedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(tokenPasswordResetRequestedEvent)), exhaustMap(function (event) {\n    return from(postUserSecurityChangePassword({\n      email: event.payload.email\n    })).pipe(exhaustMap(function (apiResponse) {\n      return of(apiResponse.statusCode === 200 ? tokenPasswordResetReceivedEvent(apiResponse.data) : tokenPasswordResetErroredEvent(apiResponse.data));\n    }), catchError(function () {\n      return of(tokenPasswordResetErroredEvent({\n        error: 'Network error',\n        errorDescription: 'Check your internet connection'\n      }));\n    }));\n  }));\n};\n\nexport default [tokenPasswordResetRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/token/epics/tokenPasswordResetRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","tokenPasswordResetRequestedEvent","tokenPasswordResetReceivedEvent","tokenPasswordResetErroredEvent","postUserSecurityChangePassword","tokenPasswordResetRequestedEpic","action$","store","pipe","event","email","payload","apiResponse","statusCode","data","error","errorDescription"],"mappings":"AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA0BC,gCAA1B,EAA4DC,+BAA5D,EAA6FC,8BAA7F,QAAmI,WAAnI;AAEA,SAASC,8BAAT,QAA+C,uCAA/C;;AAEA,IAAMC,+BAAkF,GAAG,SAArFA,+BAAqF,CAACC,OAAD,EAAUC,KAAV;AAAA,SACzFD,OAAO,CAACE,IAAR,CACEV,MAAM,CAACE,UAAU,CAACC,gCAAD,CAAX,CADR,EAEEJ,UAAU,CAAC,UAAAY,KAAK;AAAA,WACdd,IAAI,CAACS,8BAA8B,CAAC;AAAEM,MAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcD;AAAvB,KAAD,CAA/B,CAAJ,CAAqEF,IAArE,CACEX,UAAU,CAAC,UAAAe,WAAW;AAAA,aACpBhB,EAAE,CAACgB,WAAW,CAACC,UAAZ,KAA2B,GAA3B,GAAkCX,+BAA+B,CAACU,WAAW,CAACE,IAAb,CAAjE,GAAuFX,8BAA8B,CAACS,WAAW,CAACE,IAAb,CAAtH,CADkB;AAAA,KAAZ,CADZ,EAIEf,UAAU,CAAC;AAAA,aAAMH,EAAE,CAACO,8BAA8B,CAAC;AACjDY,QAAAA,KAAK,EAAE,eAD0C;AAEjDC,QAAAA,gBAAgB,EAAE;AAF+B,OAAD,CAA/B,CAAR;AAAA,KAAD,CAJZ,CADc;AAAA,GAAN,CAFZ,CADyF;AAAA,CAA3F;;AAgBA,eAAe,CAACX,+BAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { TokenEventTypes, tokenPasswordResetRequestedEvent, tokenPasswordResetReceivedEvent, tokenPasswordResetErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { postUserSecurityChangePassword } from '../api/postUserSecurityChangePassword'\n\nconst tokenPasswordResetRequestedEpic: Epic<TokenEventTypes, TokenEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(tokenPasswordResetRequestedEvent)),\n    exhaustMap(event =>\n      from(postUserSecurityChangePassword({ email: event.payload.email })).pipe(\n        exhaustMap(apiResponse =>\n          of(apiResponse.statusCode === 200 ? (tokenPasswordResetReceivedEvent(apiResponse.data)) : tokenPasswordResetErroredEvent(apiResponse.data))\n        ),\n        catchError(() => of(tokenPasswordResetErroredEvent({\n          error: 'Network error',\n          errorDescription: 'Check your internet connection'\n        })))\n      )\n    )\n  )\n\nexport default [tokenPasswordResetRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}