{"ast":null,"code":"import { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { signupRequestedEvent, signupReceivedEvent, signupErroredEvent } from '../events';\nimport { postUserSecuritySignup } from '../api/postUserSecuritySignup';\nimport { tokenRequestedEvent } from '../../token/events';\n\nconst signupRequestedEpic = (action$, store) => action$.pipe(filter(isActionOf(signupRequestedEvent)), exhaustMap(event => from(postUserSecuritySignup(event.payload.firstname, event.payload.lastname, event.payload.email, event.payload.password, event.payload.join)).pipe(exhaustMap(apiResponse => {\n  if (apiResponse.statusCode === 200) {\n    return of(signupReceivedEvent(apiResponse.data), tokenRequestedEvent({\n      username: event.payload.email,\n      password: event.payload.password,\n      redirectTo: ''\n    }));\n  }\n\n  return of(signupErroredEvent(apiResponse.data));\n}), catchError(() => of(signupErroredEvent({\n  id: undefined,\n  error: 'Network error',\n  errorDescription: 'Check your network connection'\n}))))));\n\nexport default [signupRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/signup/epics/signupRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","signupRequestedEvent","signupReceivedEvent","signupErroredEvent","postUserSecuritySignup","tokenRequestedEvent","signupRequestedEpic","action$","store","pipe","event","payload","firstname","lastname","email","password","join","apiResponse","statusCode","data","username","redirectTo","id","undefined","error","errorDescription"],"mappings":"AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA2BC,oBAA3B,EAAiDC,mBAAjD,EAAsEC,kBAAtE,QAAgG,WAAhG;AAEA,SAASC,sBAAT,QAAuC,+BAAvC;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAEA,MAAMC,mBAA8C,GAAG,CAACC,OAAD,EAAUC,KAAV,KACrDD,OAAO,CAACE,IAAR,CACEX,MAAM,CAACE,UAAU,CAACC,oBAAD,CAAX,CADR,EAEEJ,UAAU,CAAEa,KAAD,IACTf,IAAI,CAACS,sBAAsB,CAACM,KAAK,CAACC,OAAN,CAAcC,SAAf,EAA0BF,KAAK,CAACC,OAAN,CAAcE,QAAxC,EAAkDH,KAAK,CAACC,OAAN,CAAcG,KAAhE,EAAuEJ,KAAK,CAACC,OAAN,CAAcI,QAArF,EAA+FL,KAAK,CAACC,OAAN,CAAcK,IAA7G,CAAvB,CAAJ,CAA+IP,IAA/I,CACEZ,UAAU,CAACoB,WAAW,IAAI;AACxB,MAAIA,WAAW,CAACC,UAAZ,KAA2B,GAA/B,EAAoC;AAClC,WAAOtB,EAAE,CACPM,mBAAmB,CAACe,WAAW,CAACE,IAAb,CADZ,EAEPd,mBAAmB,CAAC;AAClBe,MAAAA,QAAQ,EAAEV,KAAK,CAACC,OAAN,CAAcG,KADN;AAElBC,MAAAA,QAAQ,EAAEL,KAAK,CAACC,OAAN,CAAcI,QAFN;AAGlBM,MAAAA,UAAU,EAAE;AAHM,KAAD,CAFZ,CAAT;AAQD;;AACD,SAAOzB,EAAE,CAACO,kBAAkB,CAACc,WAAW,CAACE,IAAb,CAAnB,CAAT;AACD,CAZS,CADZ,EAcEpB,UAAU,CAAC,MAAMH,EAAE,CAACO,kBAAkB,CAAC;AACrCmB,EAAAA,EAAE,EAAEC,SADiC;AAErCC,EAAAA,KAAK,EAAE,eAF8B;AAGrCC,EAAAA,gBAAgB,EAAE;AAHmB,CAAD,CAAnB,CAAT,CAdZ,CADQ,CAFZ,CADF;;AA2BA,eAAe,CAACnB,mBAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { SignupEventTypes, signupRequestedEvent, signupReceivedEvent, signupErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { postUserSecuritySignup } from '../api/postUserSecuritySignup'\nimport { tokenRequestedEvent } from '../../token/events'\n\nconst signupRequestedEpic: Epic<any, any, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(signupRequestedEvent)),\n    exhaustMap((event) =>\n      from(postUserSecuritySignup(event.payload.firstname, event.payload.lastname, event.payload.email, event.payload.password, event.payload.join)).pipe(\n        exhaustMap(apiResponse => {\n          if (apiResponse.statusCode === 200) {\n            return of(\n              signupReceivedEvent(apiResponse.data),\n              tokenRequestedEvent({\n                username: event.payload.email,\n                password: event.payload.password,\n                redirectTo: ''\n              })\n            )\n          }\n          return of(signupErroredEvent(apiResponse.data))\n        }),\n        catchError(() => of(signupErroredEvent({\n          id: undefined,\n          error: 'Network error',\n          errorDescription: 'Check your network connection'\n        })))\n      )\n    )\n  )\n\nexport default [signupRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}