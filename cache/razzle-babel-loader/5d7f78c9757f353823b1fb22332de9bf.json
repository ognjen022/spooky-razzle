{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes';\nexport const showPurchaseModalToggledEvent = (tagInfo, tagId, eventId) => ({\n  type: eventTypes.PAYMENTS_PURCHASE_SHOWMODAL_TOGGLED,\n  payload: {\n    value: {\n      tagInfo,\n      tagId,\n      eventId\n    }\n  }\n});\nexport const purchaseWatchItAllRequestedEvent = (promoCode, cardToken) => ({\n  type: eventTypes.PAYMENTS_PURCHASE_WATCHITALL_REQUESTED,\n  payload: {\n    value: {\n      promoCode: promoCode,\n      cardToken: cardToken\n    }\n  }\n});\nexport const purchaseGamePassRequestedEvent = cardToken => ({\n  type: eventTypes.PAYMENTS_PURCHASE_GAMEPASS_REQUESTED,\n  payload: {\n    value: cardToken\n  }\n});\nexport const purchaseTagRequestedEvent = cardToken => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_REQUESTED,\n  payload: {\n    value: cardToken\n  }\n});\nexport const purchaseTagReceivedEvent = tagPath => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_RECEIVED,\n  payload: {\n    value: tagPath\n  }\n});\nexport const purchaseTagErroredEvent = error => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_ERRORED,\n  payload: {\n    value: error\n  }\n});\nexport const promoRequestedEvent = createAction(eventTypes.PAYMENTS_PURCHASE_PROMOCODE_REQUESTED, resolve => (promoCode, productPrice) => resolve({\n  promoCode,\n  productPrice\n}));\nexport const promoReceivedEvent = createAction(eventTypes.PAYMENTS_PURCHASE_PROMOCODE_RECEIVED, resolve => promoInformation => resolve(promoInformation));\nexport const promoErroedEvent = createAction(eventTypes.PAYMENTS_PURCHASE_PROMOCODE_ERRORED, resolve => error => resolve(error));","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/payments/purchase/events.ts"],"names":["createAction","eventTypes","showPurchaseModalToggledEvent","tagInfo","tagId","eventId","type","PAYMENTS_PURCHASE_SHOWMODAL_TOGGLED","payload","value","purchaseWatchItAllRequestedEvent","promoCode","cardToken","PAYMENTS_PURCHASE_WATCHITALL_REQUESTED","purchaseGamePassRequestedEvent","PAYMENTS_PURCHASE_GAMEPASS_REQUESTED","purchaseTagRequestedEvent","PAYMENTS_PURCHASE_TAG_REQUESTED","purchaseTagReceivedEvent","tagPath","PAYMENTS_PURCHASE_TAG_RECEIVED","purchaseTagErroredEvent","error","PAYMENTS_PURCHASE_TAG_ERRORED","promoRequestedEvent","PAYMENTS_PURCHASE_PROMOCODE_REQUESTED","resolve","productPrice","promoReceivedEvent","PAYMENTS_PURCHASE_PROMOCODE_RECEIVED","promoInformation","promoErroedEvent","PAYMENTS_PURCHASE_PROMOCODE_ERRORED"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAIA,OAAO,MAAMC,6BAA6B,GAAG,CAACC,OAAD,EAA2BC,KAA3B,EAAsDC,OAAtD,MAAmG;AAC9IC,EAAAA,IAAI,EAAEL,UAAU,CAACM,mCAD6H;AAE9IC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AACLN,MAAAA,OADK;AAELC,MAAAA,KAFK;AAGLC,MAAAA;AAHK;AADA;AAFqI,CAAnG,CAAtC;AAWP,OAAO,MAAMK,gCAAgC,GAAG,CAACC,SAAD,EAAoBC,SAApB,MAAoD;AAClGN,EAAAA,IAAI,EAAEL,UAAU,CAACY,sCADiF;AAElGL,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AACLE,MAAAA,SAAS,EAAEA,SADN;AAELC,MAAAA,SAAS,EAAEA;AAFN;AADA;AAFyF,CAApD,CAAzC;AAUP,OAAO,MAAME,8BAA8B,GAAIF,SAAD,KAAiC;AAC7EN,EAAAA,IAAI,EAAEL,UAAU,CAACc,oCAD4D;AAE7EP,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEG;AADA;AAFoE,CAAjC,CAAvC;AAOP,OAAO,MAAMI,yBAAyB,GAAIJ,SAAD,KAAiC;AACxEN,EAAAA,IAAI,EAAEL,UAAU,CAACgB,+BADuD;AAExET,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEG;AADA;AAF+D,CAAjC,CAAlC;AAOP,OAAO,MAAMM,wBAAwB,GAAIC,OAAD,KAAqC;AAC3Eb,EAAAA,IAAI,EAAEL,UAAU,CAACmB,8BAD0D;AAE3EZ,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEU;AADA;AAFkE,CAArC,CAAjC;AAOP,OAAO,MAAME,uBAAuB,GAAIC,KAAD,KAA6B;AAClEhB,EAAAA,IAAI,EAAEL,UAAU,CAACsB,6BADiD;AAElEf,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEa;AADA;AAFyD,CAA7B,CAAhC;AAOP,OAAO,MAAME,mBAAmB,GAAGxB,YAAY,CAC7CC,UAAU,CAACwB,qCADkC,EAE5CC,OAAD,IAAa,CAACf,SAAD,EAAoBgB,YAApB,KAA0CD,OAAO,CAAC;AAC7Df,EAAAA,SAD6D;AAE7DgB,EAAAA;AAF6D,CAAD,CAFjB,CAAxC;AAQP,OAAO,MAAMC,kBAAkB,GAAG5B,YAAY,CAC5CC,UAAU,CAAC4B,oCADiC,EAE3CH,OAAD,IAAcI,gBAAD,IAAwCJ,OAAO,CAACI,gBAAD,CAFhB,CAAvC;AAMP,OAAO,MAAMC,gBAAgB,GAAG/B,YAAY,CAC1CC,UAAU,CAAC+B,mCAD+B,EAEzCN,OAAD,IAAcJ,KAAD,IAAgBI,OAAO,CAACJ,KAAD,CAFM,CAArC","sourcesContent":["import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes'\nimport { Event } from '../../eventGroups'\nimport { PromoInformation } from './models'\n\nexport const showPurchaseModalToggledEvent = (tagInfo: any | undefined, tagId: string | undefined, eventId: number | undefined): Event<any> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_SHOWMODAL_TOGGLED,\n  payload: {\n    value: {\n      tagInfo,\n      tagId,\n      eventId\n    }\n  }\n})\n\nexport const purchaseWatchItAllRequestedEvent = (promoCode: string, cardToken: any): Event<any> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_WATCHITALL_REQUESTED,\n  payload: {\n    value: {\n      promoCode: promoCode,\n      cardToken: cardToken\n    }\n  }\n})\n\nexport const purchaseGamePassRequestedEvent = (cardToken: any): Event<any> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_GAMEPASS_REQUESTED,\n  payload: {\n    value: cardToken\n  }\n})\n\nexport const purchaseTagRequestedEvent = (cardToken: any): Event<any> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_REQUESTED,\n  payload: {\n    value: cardToken\n  }\n})\n\nexport const purchaseTagReceivedEvent = (tagPath: string): Event<string> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_RECEIVED,\n  payload: {\n    value: tagPath\n  }\n})\n\nexport const purchaseTagErroredEvent = (error: any): Event<any> => ({\n  type: eventTypes.PAYMENTS_PURCHASE_TAG_ERRORED,\n  payload: {\n    value: error\n  }\n})\n\nexport const promoRequestedEvent = createAction(\n  eventTypes.PAYMENTS_PURCHASE_PROMOCODE_REQUESTED,\n  (resolve) => (promoCode: string, productPrice: any) => resolve({\n    promoCode,\n    productPrice\n  })\n);\n\nexport const promoReceivedEvent = createAction(\n  eventTypes.PAYMENTS_PURCHASE_PROMOCODE_RECEIVED,\n  (resolve) => (promoInformation: PromoInformation) => resolve(promoInformation)\n);\n\n\nexport const promoErroedEvent = createAction(\n  eventTypes.PAYMENTS_PURCHASE_PROMOCODE_ERRORED,\n  (resolve) => (error: any) => resolve(error)\n);\n\n\n"]},"metadata":{},"sourceType":"module"}