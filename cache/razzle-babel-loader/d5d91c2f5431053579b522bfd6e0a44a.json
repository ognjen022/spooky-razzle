{"ast":null,"code":"import { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { paymentDetailsRequestedEvent, paymentDetailsReceivedEvent, paymentDetailsErroredEvent } from '../events';\nimport { getPaymentsPaymentDetails } from '../api/getPaymentsPaymentDetails';\nimport { profileRequestedEvent } from '../../../userSecurity/profile/events';\nimport Notifications from 'react-notification-system-redux';\n\nvar getSuccessNotification = function getSuccessNotification() {\n  return Notifications.success({\n    title: 'Saved',\n    message: 'Your payment details have been updated',\n    position: 'tc',\n    autoDismiss: 10,\n    action: {\n      label: 'Close',\n      callback: function callback() {\n        return console.log('Notification closed');\n      }\n    }\n  });\n};\n\nvar getErrorNotification = function getErrorNotification() {\n  return Notifications.error({\n    title: 'Error',\n    message: 'Your payment details have not been updated',\n    position: 'tc',\n    autoDismiss: 10,\n    action: {\n      label: 'Close',\n      callback: function callback() {\n        return console.log('Notification closed');\n      }\n    }\n  });\n};\n\nvar paymentDetailsRequestedEpic = function paymentDetailsRequestedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(paymentDetailsRequestedEvent)), exhaustMap(function (event) {\n    return from(getPaymentsPaymentDetails({\n      name: event.payload.name,\n      card: event.payload.card,\n      ccv: event.payload.ccv,\n      expiryMonth: event.payload.expiryMonth,\n      expiryYear: event.payload.expiryYear,\n      address1: event.payload.address1,\n      address2: event.payload.address2,\n      city: event.payload.city,\n      postCode: event.payload.postCode,\n      country: event.payload.country\n    })).pipe(exhaustMap(function (apiResponse) {\n      console.log('[paymentDetailsRequestedEpic apiResponse]', apiResponse);\n      return apiResponse.statusCode ? of(paymentDetailsReceivedEvent(apiResponse.data), profileRequestedEvent(), getSuccessNotification()) : of(paymentDetailsErroredEvent(apiResponse.data), getErrorNotification());\n    }), catchError(function () {\n      return of(paymentDetailsErroredEvent({\n        id: undefined,\n        error: 'Network error',\n        errorDescription: 'Check your internet connection',\n        token: undefined\n      }));\n    }));\n  }));\n};\n\nexport default [paymentDetailsRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/payments/paymentDetails/epics/paymentDetailsRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","paymentDetailsRequestedEvent","paymentDetailsReceivedEvent","paymentDetailsErroredEvent","getPaymentsPaymentDetails","profileRequestedEvent","Notifications","getSuccessNotification","success","title","message","position","autoDismiss","action","label","callback","console","log","getErrorNotification","error","paymentDetailsRequestedEpic","action$","store","pipe","event","name","payload","card","ccv","expiryMonth","expiryYear","address1","address2","city","postCode","country","apiResponse","statusCode","data","id","undefined","errorDescription","token"],"mappings":"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","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { paymentDetailsRequestedEvent, paymentDetailsReceivedEvent, paymentDetailsErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { getPaymentsPaymentDetails } from '../api/getPaymentsPaymentDetails'\nimport { profileRequestedEvent } from '../../../userSecurity/profile/events'\nimport Notifications from 'react-notification-system-redux'\n\n\nconst getSuccessNotification = () => {\n  return Notifications.success(\n    {\n      title: 'Saved',\n      message: 'Your payment details have been updated',\n      position: 'tc',\n      autoDismiss: 10,\n      action: {\n        label: 'Close',\n        callback: () => console.log('Notification closed')\n      }\n    }\n  )\n}\n\nconst getErrorNotification = () => {\n  return Notifications.error(\n    {\n      title: 'Error',\n      message: 'Your payment details have not been updated',\n      position: 'tc',\n      autoDismiss: 10,\n      action: {\n        label: 'Close',\n        callback: () => console.log('Notification closed')\n      }\n    }\n  )\n}\n\nconst paymentDetailsRequestedEpic: Epic<any, any, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(paymentDetailsRequestedEvent)),\n    exhaustMap(event =>\n      from(getPaymentsPaymentDetails({\n        name: event.payload.name,\n        card: event.payload.card,\n        ccv: event.payload.ccv,\n        expiryMonth: event.payload.expiryMonth,\n        expiryYear: event.payload.expiryYear,\n        address1: event.payload.address1,\n        address2: event.payload.address2,\n        city: event.payload.city,\n        postCode: event.payload.postCode,\n        country: event.payload.country,\n      })).pipe(\n        exhaustMap(apiResponse => {\n          console.log('[paymentDetailsRequestedEpic apiResponse]', apiResponse)\n          return apiResponse.statusCode\n            ? of(\n              paymentDetailsReceivedEvent(apiResponse.data),\n              profileRequestedEvent(),\n              getSuccessNotification()\n            ) : of(\n              paymentDetailsErroredEvent(apiResponse.data),\n              getErrorNotification()\n            )\n        }),\n        catchError(() => of(paymentDetailsErroredEvent({\n          id: undefined,\n          error: 'Network error',\n          errorDescription: 'Check your internet connection',\n          token: undefined\n        })))\n      )\n    )\n  )\n\nexport default [paymentDetailsRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}