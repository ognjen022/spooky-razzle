{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nimport { getHeadersNoAuth } from '../../../shared/getHeaders';\nexport const getArticle = articleName => {\n  return fetch(`${baseUrl}/v1/tags/getarticle/${articleName}`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }).then(async response => {\n    let json = await response.json();\n    const articleData = json.data;\n    const data = {\n      newsArticle: articleData,\n      error: '',\n      errorDescription: ''\n    };\n    return {\n      success: json.success,\n      statusCode: articleData == null ? 400 : json.statusCode,\n      data,\n      is_success: json.success\n    };\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/content/news/api/getArticle.ts"],"names":["baseUrl","getHeadersNoAuth","getArticle","articleName","fetch","method","headers","then","response","json","articleData","data","newsArticle","error","errorDescription","success","statusCode","is_success"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAIA,OAAO,MAAMC,UAAU,GAAIC,WAAD,IAAqE;AAC7F,SAAOC,KAAK,CACT,GAAEJ,OAAQ,uBAAsBG,WAAY,EADnC,EACsC;AAChDE,IAAAA,MAAM,EAAE,KADwC;AAEhDC,IAAAA,OAAO,EAAEL,gBAAgB;AAFuB,GADtC,CAAL,CAKLM,IALK,CAKA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,UAAMC,WAAyB,GAAGD,IAAI,CAACE,IAAvC;AACA,UAAMA,IAA0B,GAAG;AACjCC,MAAAA,WAAW,EAAEF,WADoB;AAEjCG,MAAAA,KAAK,EAAE,EAF0B;AAGjCC,MAAAA,gBAAgB,EAAE;AAHe,KAAnC;AAKA,WAAO;AACLC,MAAAA,OAAO,EAAEN,IAAI,CAACM,OADT;AAELC,MAAAA,UAAU,EAAEN,WAAW,IAAI,IAAf,GAAsB,GAAtB,GAA4BD,IAAI,CAACO,UAFxC;AAGLL,MAAAA,IAHK;AAILM,MAAAA,UAAU,EAAER,IAAI,CAACM;AAJZ,KAAP;AAMD,GAnBM,CAAP;AAoBD,CArBM","sourcesContent":["import { INewsArticleResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { getHeadersNoAuth } from '../../../shared/getHeaders'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { INewsArticle } from '../models'\n\nexport const getArticle = (articleName: string): Promise<ApiResponse<INewsArticleResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/tags/getarticle/${articleName}`, {\n    method: 'GET',\n    headers: getHeadersNoAuth()\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const articleData: INewsArticle = json.data\n    const data: INewsArticleResponse = {\n      newsArticle: articleData,\n      error: '',\n      errorDescription: ''\n    }\n    return {\n      success: json.success,\n      statusCode: articleData == null ? 400 : json.statusCode,\n      data,\n      is_success: json.success\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}