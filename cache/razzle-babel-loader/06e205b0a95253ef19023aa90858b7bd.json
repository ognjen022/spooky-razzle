{"ast":null,"code":"import { of } from 'rxjs';\nimport { mergeMap, filter } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport Notifications from 'react-notification-system-redux';\nimport { networkErroredEvent } from '../networkErroredEvent';\n\nconst networkErroredEpic = action$ => action$.pipe(filter(isActionOf(networkErroredEvent)), mergeMap(() => of(Notifications.error({\n  // uid: 'once-please', // you can specify your own uid if required\n  title: 'Network Error',\n  message: 'Something went wrong. Please check your network connection.',\n  position: 'tr',\n  autoDismiss: 10,\n  action: {\n    label: 'Close',\n    callback: () => console.log('Notification closed')\n  }\n}))));\n\nexport default [networkErroredEpic];\n/* \n\n{\n  // uid: 'once-please', // you can specify your own uid if required\n  title: 'Hey, it\\'s good to see you!',\n  message: 'Now you can see how easy it is to use notifications in React!',\n  position: 'tr',\n  autoDismiss: 0,\n  action: {\n    label: 'Click me!!',\n    callback: () => alert('clicked!')\n  }\n}\n\n*/","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/shared/epics/networkErroredEpic.ts"],"names":["of","mergeMap","filter","isActionOf","Notifications","networkErroredEvent","networkErroredEpic","action$","pipe","error","title","message","position","autoDismiss","action","label","callback","console","log"],"mappings":"AACA,SAASA,EAAT,QAAmB,MAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,gBAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,mBAAT,QAAoC,wBAApC;;AAEA,MAAMC,kBAA6C,GAAIC,OAAD,IACpDA,OAAO,CAACC,IAAR,CACEN,MAAM,CAACC,UAAU,CAACE,mBAAD,CAAX,CADR,EAEEJ,QAAQ,CAAC,MAAMD,EAAE,CAACI,aAAa,CAACK,KAAd,CAChB;AACE;AACAC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,OAAO,EAAE,6DAHX;AAIEC,EAAAA,QAAQ,EAAE,IAJZ;AAKEC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAFV;AANV,CADgB,CAAD,CAAT,CAFV,CADF;;AAkBA,eAAe,CAAEZ,kBAAF,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Epic } from 'redux-observable'\nimport { of } from 'rxjs'\nimport { mergeMap, filter } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { RootState } from '../../RootState'\nimport Notifications from 'react-notification-system-redux'\nimport { networkErroredEvent } from '../networkErroredEvent'\n\nconst networkErroredEpic: Epic<any, any, RootState> = (action$) =>\n  action$.pipe(\n    filter(isActionOf(networkErroredEvent)),\n    mergeMap(() => of(Notifications.error(\n      {\n        // uid: 'once-please', // you can specify your own uid if required\n        title: 'Network Error',\n        message: 'Something went wrong. Please check your network connection.',\n        position: 'tr',\n        autoDismiss: 10,\n        action: {\n          label: 'Close',\n          callback: () => console.log('Notification closed')\n        }\n      }\n    )))\n  )\n\nexport default [ networkErroredEpic ]\n\n/* \n\n{\n  // uid: 'once-please', // you can specify your own uid if required\n  title: 'Hey, it\\'s good to see you!',\n  message: 'Now you can see how easy it is to use notifications in React!',\n  position: 'tr',\n  autoDismiss: 0,\n  action: {\n    label: 'Click me!!',\n    callback: () => alert('clicked!')\n  }\n}\n\n*/"]},"metadata":{},"sourceType":"module"}