{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes';\n// Sign in Events\nexport var tokenRequestedEvent = createAction(eventTypes.USERSECURITY_TOKEN_REQUESTED, function (resolve) {\n  return function (request) {\n    return resolve(request);\n  };\n});\nexport var tokenReceivedEvent = createAction(eventTypes.USERSECURITY_TOKEN_RECEIVED, function (resolve) {\n  return function (data) {\n    return resolve(data);\n  };\n});\nexport var tokenErroredEvent = createAction(eventTypes.USERSECURITY_TOKEN_ERRORED, function (resolve) {\n  return function (error) {\n    return resolve(error);\n  };\n}); // Reset Password Events\n\nexport var tokenPasswordResetRequestedEvent = createAction(eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED, function (resolve) {\n  return function (request) {\n    return resolve(request);\n  };\n});\nexport var tokenPasswordResetReceivedEvent = createAction(eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED, function (resolve) {\n  return function (data) {\n    return resolve(data);\n  };\n});\nexport var tokenPasswordResetErroredEvent = createAction(eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED, function (resolve) {\n  return function (error) {\n    return resolve(error);\n  };\n}); // Signout Events\n\nexport var tokenRemovedEvent = createAction(eventTypes.USERSECURITY_TOKEN_REMOVED);\nexport var tokenRefreshTokenRequestedEvent = createAction(eventTypes.USERSECURITY_TOKEN_REFRESH_REQUESTED);","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/userSecurity/token/events.ts"],"names":["createAction","eventTypes","tokenRequestedEvent","USERSECURITY_TOKEN_REQUESTED","resolve","request","tokenReceivedEvent","USERSECURITY_TOKEN_RECEIVED","data","tokenErroredEvent","USERSECURITY_TOKEN_ERRORED","error","tokenPasswordResetRequestedEvent","USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED","tokenPasswordResetReceivedEvent","USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED","tokenPasswordResetErroredEvent","USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED","tokenRemovedEvent","USERSECURITY_TOKEN_REMOVED","tokenRefreshTokenRequestedEvent","USERSECURITY_TOKEN_REFRESH_REQUESTED"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAIA;AACA,OAAO,IAAMC,mBAAmB,GAAGF,YAAY,CAC7CC,UAAU,CAACE,4BADkC,EAE7C,UAACC,OAAD;AAAA,SAAa,UAACC,OAAD;AAAA,WAA2BD,OAAO,CAACC,OAAD,CAAlC;AAAA,GAAb;AAAA,CAF6C,CAAxC;AAIP,OAAO,IAAMC,kBAAkB,GAAGN,YAAY,CAACC,UAAU,CAACM,2BAAZ,EAAyC,UAACH,OAAD;AAAA,SAAa,UAACI,IAAD;AAAA,WAClGJ,OAAO,CAACI,IAAD,CAD2F;AAAA,GAAb;AAAA,CAAzC,CAAvC;AAGP,OAAO,IAAMC,iBAAiB,GAAGT,YAAY,CAACC,UAAU,CAACS,0BAAZ,EAAwC,UAACN,OAAD;AAAA,SAAa,UAACO,KAAD;AAAA,WAA0BP,OAAO,CAACO,KAAD,CAAjC;AAAA,GAAb;AAAA,CAAxC,CAAtC,C,CAEP;;AACA,OAAO,IAAMC,gCAAgC,GAAGZ,YAAY,CAC1DC,UAAU,CAACY,4CAD+C,EAE1D,UAACT,OAAD;AAAA,SAAa,UAACC,OAAD;AAAA,WAAwCD,OAAO,CAACC,OAAD,CAA/C;AAAA,GAAb;AAAA,CAF0D,CAArD;AAKP,OAAO,IAAMS,+BAA+B,GAAGd,YAAY,CAACC,UAAU,CAACc,2CAAZ,EAAyD,UAACX,OAAD;AAAA,SAAa,UAACI,IAAD;AAAA,WAC/HJ,OAAO,CAACI,IAAD,CADwH;AAAA,GAAb;AAAA,CAAzD,CAApD;AAIP,OAAO,IAAMQ,8BAA8B,GAAGhB,YAAY,CAACC,UAAU,CAACgB,0CAAZ,EAAwD,UAACb,OAAD;AAAA,SAAa,UAACO,KAAD;AAAA,WAAuCP,OAAO,CAACO,KAAD,CAA9C;AAAA,GAAb;AAAA,CAAxD,CAAnD,C,CAEP;;AACA,OAAO,IAAMO,iBAAiB,GAAGlB,YAAY,CAACC,UAAU,CAACkB,0BAAZ,CAAtC;AAEP,OAAO,IAAMC,+BAA+B,GAAGpB,YAAY,CAACC,UAAU,CAACoB,oCAAZ,CAApD","sourcesContent":["import { createAction } from 'typesafe-actions'\nimport * as eventTypes from './eventTypes'\nimport { TokenResponse, TokenPasswordResetRequest, TokenPasswordResetResponse, TokenRequest } from './models'\nimport { ActionType } from 'typesafe-actions'\n\n// Sign in Events\nexport const tokenRequestedEvent = createAction(\n  eventTypes.USERSECURITY_TOKEN_REQUESTED,\n  (resolve) => (request: TokenRequest) => resolve(request)\n)\nexport const tokenReceivedEvent = createAction(eventTypes.USERSECURITY_TOKEN_RECEIVED, (resolve) => (data: TokenResponse) =>\n  resolve(data)\n)\nexport const tokenErroredEvent = createAction(eventTypes.USERSECURITY_TOKEN_ERRORED, (resolve) => (error: TokenResponse) => resolve(error))\n\n// Reset Password Events\nexport const tokenPasswordResetRequestedEvent = createAction(\n  eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_REQUESTED,\n  (resolve) => (request: TokenPasswordResetRequest) => resolve(request)\n)\n\nexport const tokenPasswordResetReceivedEvent = createAction(eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_RECEIVED, (resolve) => (data: TokenPasswordResetResponse) =>\n  resolve(data)\n)\n\nexport const tokenPasswordResetErroredEvent = createAction(eventTypes.USERSECURITY_TOKEN_FORGOT_PASSWORD_ERRORED, (resolve) => (error: TokenPasswordResetResponse) => resolve(error))\n\n// Signout Events\nexport const tokenRemovedEvent = createAction(eventTypes.USERSECURITY_TOKEN_REMOVED)\n\nexport const tokenRefreshTokenRequestedEvent = createAction(eventTypes.USERSECURITY_TOKEN_REFRESH_REQUESTED)\n\nexport type TokenEventTypes = ActionType<\n  typeof tokenRequestedEvent\n  | typeof tokenReceivedEvent\n  | typeof tokenErroredEvent\n  | typeof tokenPasswordResetRequestedEvent\n  | typeof tokenPasswordResetReceivedEvent\n  | typeof tokenPasswordResetErroredEvent\n  | typeof tokenRemovedEvent\n  | typeof tokenRefreshTokenRequestedEvent\n>\n"]},"metadata":{},"sourceType":"module"}