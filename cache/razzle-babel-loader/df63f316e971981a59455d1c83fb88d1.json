{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport DOMPurify from 'dompurify';\nimport styles from './InlinePost.module.scss';\n\nconst InlinePostGroup = props => {\n  const {\n    data\n  } = props;\n  const {\n    0: active,\n    1: setActive\n  } = useState(undefined);\n\n  const isActive = index => {\n    return index === active ? styles['is-active'] : '';\n  };\n\n  return __jsx(React.Fragment, null, data.map((item, index) => __jsx(\"div\", {\n    className: styles['inline-post-new']\n  }, __jsx(\"div\", {\n    className: styles['inline-post-new__header'],\n    onClick: () => setActive(index)\n  }, __jsx(\"p\", null, item.question), __jsx(\"button\", {\n    className: `${styles['inline-post-new__button']} ${isActive(index)}`,\n    onClick: () => setActive(index)\n  }, __jsx(\"svg\", {\n    className: `${styles['inline-post-new__icon']} icon`,\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-close\"\n  })), __jsx(\"span\", {\n    className: \"screen-reader-text\"\n  }, \"Toggle\"))), __jsx(\"div\", {\n    className: `${styles['inline-post-new__content']} ${isActive(index)}`\n  }, __jsx(\"p\", {\n    className: styles['inline-post-new__content-inner']\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: DOMPurify.sanitize(item.answer)\n    }\n  }))))));\n};\n\nexport default InlinePostGroup;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/components/InlinePost/InlinePostGroup.tsx"],"names":["React","useState","DOMPurify","styles","InlinePostGroup","props","data","active","setActive","undefined","isActive","index","map","item","question","__html","sanitize","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAYA,MAAMC,eAAgD,GAAIC,KAAD,IAAkC;AAEzF,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM;AAAA,OAACE,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAqBQ,SAArB,CAApC;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC5B,WAAOA,KAAK,KAAKJ,MAAV,GAAmBJ,MAAM,CAAC,WAAD,CAAzB,GAAyC,EAAhD;AACC,GAFD;;AAGA,SACE,4BACAG,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOF,KAAP,KACX;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC,iBAAD;AAAtB,KACQ;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,yBAAD,CAAtB;AAAmD,IAAA,OAAO,EAAE,MAAMK,SAAS,CAACG,KAAD;AAA3E,KACJ,iBAAIE,IAAI,CAACC,QAAT,CADI,EAEP;AAAQ,IAAA,SAAS,EAAG,GAAEX,MAAM,CAAC,yBAAD,CAA4B,IAAGO,QAAQ,CAACC,KAAD,CAAQ,EAA3E;AAA8E,IAAA,OAAO,EAAE,MAAKH,SAAS,CAACG,KAAD;AAArG,KACE;AAAK,IAAA,SAAS,EAAG,GAAER,MAAM,CAAC,uBAAD,CAA0B,OAAnD;AAA2D,IAAA,IAAI,EAAC;AAAhE,KACD;AAAK,IAAA,SAAS,EAAC;AAAf,IADC,CADF,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,cAJF,CAFO,CADR,EAUE;AAAK,IAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,0BAAD,CAA6B,IAAGO,QAAQ,CAACC,KAAD,CAAQ;AAAzE,KACC;AAAG,IAAA,SAAS,EAAER,MAAM,CAAC,gCAAD;AAApB,KAEC;AAAK,IAAA,uBAAuB,EAAE;AAAEY,MAAAA,MAAM,EAAEb,SAAS,CAACc,QAAV,CAAmBH,IAAI,CAACI,MAAxB;AAAV;AAA9B,IAFD,CADD,CAVF,CADE,CADA,CADF;AAwBD,CA/BD;;AAiCA,eAAeb,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport DOMPurify from 'dompurify'\n\nimport styles from './InlinePost.module.scss'\n\ninterface IInlinePostGroupProps {\n  data: any[]\n}\n\ninterface IPost {\n  active?: boolean;\n  title: string;\n  children: React.ReactNode;\n}\n\nconst InlinePostGroup: React.FC<IInlinePostGroupProps> = (props: IInlinePostGroupProps) => {\n\n  const { data } = props;\n  const [active, setActive] = useState<number | undefined>(undefined);\n  const isActive = (index) => {\n\t return index === active ? styles['is-active'] : '';\n  }\n  return (\n    <>\n\t  {data.map((item, index) => \n\t\t<div className={styles['inline-post-new']}>\n          <div className={styles['inline-post-new__header']} onClick={() => setActive(index)}>\n\t\t    <p>{item.question}</p>\n\t\t\t<button className={`${styles['inline-post-new__button']} ${isActive(index)}`} onClick={()=> setActive(index)}>\n\t\t\t  <svg className={`${styles['inline-post-new__icon']} icon`} role=\"presentation\">\n\t\t\t\t<use xlinkHref=\"#icon-close\"></use>\n\t\t\t  </svg>\n\t\t\t  <span className=\"screen-reader-text\">Toggle</span>\n\t\t\t</button>\n\t\t  </div>\n\t\t  <div className={`${styles['inline-post-new__content']} ${isActive(index)}`}>\n\t\t\t  <p className={styles['inline-post-new__content-inner']}>\n\t\t\t\t\n\t\t\t  \t<div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(item.answer) }} />\n\t\t\t  </p>\n\t\t  </div>\n\t\t</div>\n\t\t)}\t\n\t</>\n  )\n\n}\n\nexport default InlinePostGroup\n"]},"metadata":{},"sourceType":"module"}