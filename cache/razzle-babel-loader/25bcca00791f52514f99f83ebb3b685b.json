{"ast":null,"code":"import _objectSpread from \"/Users/ognjen/Desktop/spooky.live-ssr/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { tokenRequestedEvent, tokenReceivedEvent, tokenErroredEvent } from '../events';\nimport { postUserSecurityLogin } from '../api/postUserSecurityLogin';\n\nvar tokenRequestedEpic = function tokenRequestedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(tokenRequestedEvent)), exhaustMap(function (event) {\n    return from(postUserSecurityLogin(event.payload.username, event.payload.password)).pipe(exhaustMap(function (apiResponse) {\n      return of(apiResponse.statusCode === 200 ? tokenReceivedEvent(_objectSpread(_objectSpread({}, apiResponse.data), {}, {\n        redirectTo: event.payload.redirectTo\n      })) : tokenErroredEvent(apiResponse.data));\n    }), catchError(function (error) {\n      // console.log('tokenRequestedEpic error', error)\n      return of(tokenErroredEvent({\n        accessToken: undefined,\n        expiresIn: 0,\n        expiry: undefined,\n        idToken: undefined,\n        scope: undefined,\n        tokenType: undefined,\n        error: 'Network error',\n        errorDescription: 'Check your internet connection',\n        refreshToken: undefined,\n        redirectTo: undefined\n      }));\n    }));\n  }));\n};\n\nexport default [tokenRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/userSecurity/token/epics/tokenRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","tokenRequestedEvent","tokenReceivedEvent","tokenErroredEvent","postUserSecurityLogin","tokenRequestedEpic","action$","store","pipe","event","payload","username","password","apiResponse","statusCode","data","redirectTo","error","accessToken","undefined","expiresIn","expiry","idToken","scope","tokenType","errorDescription","refreshToken"],"mappings":";AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,iBAAnE,QAA4F,WAA5F;AAEA,SAASC,qBAAT,QAAsC,8BAAtC;;AAEA,IAAMC,kBAAqE,GAAG,SAAxEA,kBAAwE,CAACC,OAAD,EAAUC,KAAV;AAAA,SAC5ED,OAAO,CAACE,IAAR,CACEV,MAAM,CAACE,UAAU,CAACC,mBAAD,CAAX,CADR,EAEEJ,UAAU,CAAC,UAAAY,KAAK;AAAA,WACdd,IAAI,CAACS,qBAAqB,CAACK,KAAK,CAACC,OAAN,CAAcC,QAAf,EAAyBF,KAAK,CAACC,OAAN,CAAcE,QAAvC,CAAtB,CAAJ,CAA4EJ,IAA5E,CACEX,UAAU,CAAC,UAAAgB,WAAW;AAAA,aACpBjB,EAAE,CAACiB,WAAW,CAACC,UAAZ,KAA2B,GAA3B,GAAiCZ,kBAAkB,iCAAMW,WAAW,CAACE,IAAlB;AAAwBC,QAAAA,UAAU,EAAEP,KAAK,CAACC,OAAN,CAAcM;AAAlD,SAAnD,GAAqHb,iBAAiB,CAACU,WAAW,CAACE,IAAb,CAAvI,CADkB;AAAA,KAAZ,CADZ,EAIEhB,UAAU,CAAC,UAAAkB,KAAK,EAAI;AAClB;AACA,aAAOrB,EAAE,CAACO,iBAAiB,CAAC;AAC1Be,QAAAA,WAAW,EAAEC,SADa;AAE1BC,QAAAA,SAAS,EAAE,CAFe;AAG1BC,QAAAA,MAAM,EAAEF,SAHkB;AAI1BG,QAAAA,OAAO,EAAEH,SAJiB;AAK1BI,QAAAA,KAAK,EAAEJ,SALmB;AAM1BK,QAAAA,SAAS,EAAEL,SANe;AAO1BF,QAAAA,KAAK,EAAE,eAPmB;AAQ1BQ,QAAAA,gBAAgB,EAAE,gCARQ;AAS1BC,QAAAA,YAAY,EAAEP,SATY;AAU1BH,QAAAA,UAAU,EAAEG;AAVc,OAAD,CAAlB,CAAT;AAYD,KAdS,CAJZ,CADc;AAAA,GAAN,CAFZ,CAD4E;AAAA,CAA9E;;AA4BA,eAAe,CAACd,kBAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { TokenEventTypes, tokenRequestedEvent, tokenReceivedEvent, tokenErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { postUserSecurityLogin } from '../api/postUserSecurityLogin'\n\nconst tokenRequestedEpic: Epic<TokenEventTypes, TokenEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(tokenRequestedEvent)),\n    exhaustMap(event =>\n      from(postUserSecurityLogin(event.payload.username, event.payload.password)).pipe(\n        exhaustMap(apiResponse =>\n          of(apiResponse.statusCode === 200 ? tokenReceivedEvent({ ...apiResponse.data, redirectTo: event.payload.redirectTo }) : tokenErroredEvent(apiResponse.data))\n        ),\n        catchError(error => {\n          // console.log('tokenRequestedEpic error', error)\n          return of(tokenErroredEvent({\n            accessToken: undefined,\n            expiresIn: 0,\n            expiry: undefined,\n            idToken: undefined,\n            scope: undefined,\n            tokenType: undefined,\n            error: 'Network error',\n            errorDescription: 'Check your internet connection',\n            refreshToken: undefined,\n            redirectTo: undefined,\n          }))\n        }\n        )\n      )\n    )\n  )\n\nexport default [tokenRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}