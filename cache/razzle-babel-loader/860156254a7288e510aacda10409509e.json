{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/AccordionFilter/AccordionFilter.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './AccordionFilter.module.scss';\n\nconst AccordionFilter = props => {\n  var _option$items;\n\n  const {\n    filters,\n    option,\n    onSelect\n  } = props;\n  const {\n    0: isMenuExpanded,\n    1: setIsMenuExpanded\n  } = useState(false);\n  const {\n    0: selectedOption,\n    1: setSelectedOption\n  } = useState(null);\n\n  const handleChildrenVisibility = () => {\n    setIsMenuExpanded(!isMenuExpanded);\n  };\n\n  const handleSelectedItem = item => {\n    setSelectedOption(item);\n    onSelect(item);\n    setIsMenuExpanded(false);\n  };\n\n  const displayBold = () => {\n    let result = false;\n    option.items.forEach(val => {\n      if (filters.includes(val.tagId)) result = true;\n    });\n    return result;\n  };\n\n  const displayLabel = () => {\n    if (filters.includes(option.tagId)) return option.name;\n    let result = '';\n    let includesCount = 0;\n    option.items.forEach(val => {\n      if (filters.includes(val.tagId)) {\n        result = val.name;\n        includesCount += 1;\n      }\n    });\n    if (includesCount === 1) return result;\n    return option.name;\n  };\n\n  const isOpenClass = isMenuExpanded ? styles['accordion-filter__is-open'] : '';\n  const isValueSelected = selectedOption ? styles['accordion-filter__is-selected'] : '';\n  return __jsx(\"div\", {\n    className: `${styles['accordion-filter']}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    tabIndex: 0,\n    className: `${styles['accordion-filter__header']} ${isOpenClass} ${isValueSelected}  ${displayBold() && styles['accordion-filter-highlight']}`,\n    onClick: handleChildrenVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles['accordion-filter__padding'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, displayLabel())), __jsx(\"div\", {\n    className: styles['accordion-filter__items-group'],\n    style: {\n      display: isMenuExpanded ? 'block' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, ((_option$items = option.items) === null || _option$items === void 0 ? void 0 : _option$items.length) > 0 && option.items.map(item => item.showInAccordion && __jsx(\"button\", {\n    key: uuidv4(),\n    className: styles['accordion-filter__item'],\n    onClick: () => handleSelectedItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles['accordion-filter__padding'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, item.name)))));\n};\n\nexport default AccordionFilter;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/AccordionFilter/AccordionFilter.tsx"],"names":["React","useState","v4","uuidv4","styles","AccordionFilter","props","filters","option","onSelect","isMenuExpanded","setIsMenuExpanded","selectedOption","setSelectedOption","handleChildrenVisibility","handleSelectedItem","item","displayBold","result","items","forEach","val","includes","tagId","displayLabel","name","includesCount","isOpenClass","isValueSelected","display","length","map","showInAccordion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport styles from './AccordionFilter.module.scss'\n\nimport { RootState } from '../../services/RootState'\nimport { IContentState } from '../../services/content/IContentState'\nimport { ITag, BrowseOption, BrowseResult } from '../../services/content/tags/models'\n\ninterface IAccordionFilterProps {\n  option: BrowseOption\n  filters: string[]\n  onSelect: (item: BrowseResult) => void\n}\n\nconst AccordionFilter: React.FC<IAccordionFilterProps> = (props) => {\n  const { filters, option, onSelect } = props\n\n  const [isMenuExpanded, setIsMenuExpanded] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<BrowseResult | null>(null);\n\n  const handleChildrenVisibility = () => {\n    setIsMenuExpanded(!isMenuExpanded)\n  }\n\n  const handleSelectedItem = (item: BrowseResult) => {\n    setSelectedOption(item)\n    onSelect(item)\n    setIsMenuExpanded(false)\n  }\n\n\n  const displayBold = (): boolean => {\n    let result = false\n\n    option.items.forEach((val: BrowseResult) => {\n      if (filters.includes(val.tagId)) result = true\n    })\n\n    return result\n  }\n\n  const displayLabel = (): string => {\n\n    if (filters.includes(option.tagId)) return option.name\n\n    let result = ''\n    let includesCount = 0\n    option.items.forEach((val: BrowseResult) => {\n      if (filters.includes(val.tagId)) {\n        result = val.name\n        includesCount += 1\n      }\n    })\n\n    if (includesCount === 1) return result\n\n    return option.name\n  }\n\n  const isOpenClass = isMenuExpanded ? styles['accordion-filter__is-open'] : '';\n  const isValueSelected = selectedOption ? styles['accordion-filter__is-selected'] : '';\n\n  return (\n    <div className={`${styles['accordion-filter']}`} >\n      <button\n        tabIndex={0}\n        className={`${styles['accordion-filter__header']} ${isOpenClass} ${isValueSelected}  ${displayBold() && styles['accordion-filter-highlight']}`}\n        onClick={handleChildrenVisibility}\n      >\n        <div className={styles['accordion-filter__padding']}>\n          {\n            displayLabel()\n          }\n        </div>\n      </button>\n\n      <div className={styles['accordion-filter__items-group']} style={{ display: isMenuExpanded ? 'block' : 'none' }}>\n        {\n          option.items?.length > 0 && option.items.map(item => item.showInAccordion && (\n            <button\n              key={uuidv4()}\n              className={styles['accordion-filter__item']}\n              onClick={() => handleSelectedItem(item)}\n            >\n              <div className={styles['accordion-filter__padding']}>{item.name}</div>\n            </button>\n          ))\n        }\n      </div>\n    </div >\n  )\n}\n\nexport default AccordionFilter\n"]},"metadata":{},"sourceType":"module"}