{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nexport const postUserSecuritySignup = (firstname, lastname, email, password, accept_email_notifications) => {\n  return fetch(`${baseUrl}/v1/usersecurity/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      firstname,\n      lastname,\n      email,\n      password,\n      accept_email_notifications\n    })\n  }).then(async response => {\n    let json = await response.json();\n    return {\n      success: json.success,\n      statusCode: json.statusCode,\n      data: json.data,\n      is_success: json.success\n    };\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/userSecurity/signup/api/postUserSecuritySignup.ts"],"names":["baseUrl","postUserSecuritySignup","firstname","lastname","email","password","accept_email_notifications","fetch","method","headers","body","JSON","stringify","then","response","json","success","statusCode","data","is_success"],"mappings":"AAAA,SAASA,OAAT,QAAwB,yBAAxB;AAIA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,SAAD,EAAoBC,QAApB,EAAsCC,KAAtC,EAAqDC,QAArD,EAAuEC,0BAAvE,KAAqJ;AACzL,SAAOC,KAAK,CACT,GAAEP,OAAQ,yBADD,EAC2B;AACrCQ,IAAAA,MAAM,EAAE,MAD6B;AACrBC,IAAAA,OAAO,EAAE;AACvB,sBAAgB;AADO,KADY;AAIrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA,QAA9B;AAAwCC,MAAAA;AAAxC,KAAf;AAJ+B,GAD3B,CAAL,CAOLO,IAPK,CAOA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAhB;AAAyBC,MAAAA,UAAU,EAAEF,IAAI,CAACE,UAA1C;AAAsDC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAAjE;AAAuEC,MAAAA,UAAU,EAAEJ,IAAI,CAACC;AAAxF,KAAP;AACD,GAVM,CAAP;AAWD,CAZM","sourcesContent":["import { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { SignupResponse } from '../models'\n\nexport const postUserSecuritySignup = (firstname: string, lastname: string, email: string, password: string, accept_email_notifications: boolean): Promise<ApiResponse<SignupResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/signup`, {\n    method: 'POST', headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ firstname, lastname, email, password, accept_email_notifications })\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    return { success: json.success, statusCode: json.statusCode, data: json.data, is_success: json.success }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}