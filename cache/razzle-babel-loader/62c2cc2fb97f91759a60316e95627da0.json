{"ast":null,"code":"import { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { subscriptionDetailsRequestedEvent, subscriptionDetailsReceivedEvent, subscriptionDetailsErroredEvent } from '../events';\nimport { getSubscriptionDetails } from '../api/getSubscriptionsSubscriptionDetails';\n\nvar subscriptionDetailsRequestedEpic = function subscriptionDetailsRequestedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(subscriptionDetailsRequestedEvent)), exhaustMap(function (event) {\n    return from(getSubscriptionDetails()).pipe(exhaustMap(function (apiResponse) {\n      // console.log('subscriptionDetailsRequestedEpic apiResponse', apiResponse)\n      return of(subscriptionDetailsReceivedEvent(apiResponse));\n    }), catchError(function () {\n      return of(subscriptionDetailsErroredEvent({\n        id: undefined,\n        error: 'Network error',\n        errorDescription: 'Check your internet connection'\n      }));\n    }));\n  }));\n};\n\nexport default [subscriptionDetailsRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/payments/subscriptions/epics/subscriptionDetailsRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","subscriptionDetailsRequestedEvent","subscriptionDetailsReceivedEvent","subscriptionDetailsErroredEvent","getSubscriptionDetails","subscriptionDetailsRequestedEpic","action$","store","pipe","event","apiResponse","id","undefined","error","errorDescription"],"mappings":"AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAyCC,iCAAzC,EAA4EC,gCAA5E,EAA8GC,+BAA9G,QAAqJ,WAArJ;AAEA,SAASC,sBAAT,QAAuC,4CAAvC;;AAEA,IAAMC,gCAA+G,GAAG,SAAlHA,gCAAkH,CAACC,OAAD,EAAUC,KAAV;AAAA,SACtHD,OAAO,CAACE,IAAR,CACEV,MAAM,CAACE,UAAU,CAACC,iCAAD,CAAX,CADR,EAEEJ,UAAU,CAAC,UAAAY,KAAK;AAAA,WACdd,IAAI,CAACS,sBAAsB,EAAvB,CAAJ,CAA+BI,IAA/B,CACEX,UAAU,CAAC,UAAAa,WAAW,EAAI;AACxB;AACA,aAAOd,EAAE,CAACM,gCAAgC,CAACQ,WAAD,CAAjC,CAAT;AACD,KAHS,CADZ,EAKEX,UAAU,CAAC;AAAA,aAAMH,EAAE,CAACO,+BAA+B,CAAC;AAClDQ,QAAAA,EAAE,EAAEC,SAD8C;AAElDC,QAAAA,KAAK,EAAE,eAF2C;AAGlDC,QAAAA,gBAAgB,EAAE;AAHgC,OAAD,CAAhC,CAAR;AAAA,KAAD,CALZ,CADc;AAAA,GAAN,CAFZ,CADsH;AAAA,CAAxH;;AAkBA,eAAe,CAACT,gCAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { SubscriptionDetailsEventTypes,  subscriptionDetailsRequestedEvent, subscriptionDetailsReceivedEvent, subscriptionDetailsErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { getSubscriptionDetails } from '../api/getSubscriptionsSubscriptionDetails'\n\nconst subscriptionDetailsRequestedEpic: Epic<SubscriptionDetailsEventTypes, SubscriptionDetailsEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(subscriptionDetailsRequestedEvent)),\n    exhaustMap(event =>\n      from(getSubscriptionDetails()).pipe(\n        exhaustMap(apiResponse => {\n          // console.log('subscriptionDetailsRequestedEpic apiResponse', apiResponse)\n          return of(subscriptionDetailsReceivedEvent(apiResponse))\n        }),\n        catchError(() => of(subscriptionDetailsErroredEvent({\n          id: undefined,\n          error: 'Network error',\n          errorDescription: 'Check your internet connection'\n        })))\n      )\n    )\n  )\n\nexport default [subscriptionDetailsRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}