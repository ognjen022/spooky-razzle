{"ast":null,"code":"export let PurchaseOption;\n\n(function (PurchaseOption) {\n  PurchaseOption[PurchaseOption[\"GamePass\"] = 0] = \"GamePass\";\n  PurchaseOption[PurchaseOption[\"WatchItAll\"] = 1] = \"WatchItAll\";\n  PurchaseOption[PurchaseOption[\"SeasonPass\"] = 2] = \"SeasonPass\";\n})(PurchaseOption || (PurchaseOption = {}));","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/payments/purchase/models.ts"],"names":["PurchaseOption"],"mappings":"AAmBA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["export interface PurchaseState {\n  readonly showModal: boolean\n  readonly tagInfo: any | undefined\n  readonly purchaseOption: PurchaseOption\n  readonly tagId: string | undefined\n  readonly eventId: number | undefined\n  readonly cardToken: any | undefined\n  readonly isSaving: boolean,\n  readonly checkingPromo: boolean,\n  readonly promoCode: string | undefined\n  readonly promoCoupon: PromoInformation | undefined\n}\n\nexport interface PromoInformation {\n  readonly priceAfter?: string | undefined;\n  readonly nextPayment?: string | undefined;\n  readonly error?: string | undefined\n}\n\nexport enum PurchaseOption {\n  GamePass,\n  WatchItAll,\n  SeasonPass\n}\n"]},"metadata":{},"sourceType":"module"}