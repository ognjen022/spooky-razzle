{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nimport { getHeaders } from '../../../shared/getHeaders';\nexport const postUserSecurityUpdatePassword = request => {\n  return fetch(`${baseUrl}/v1/usersecurity/updatepassword`, {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify({\n      newPassword: request.confirmPassword\n    })\n  }).then(async response => {\n    let json = await response.json();\n    const data = json.data;\n    const result = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    };\n    return result;\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/userSecurity/password/api/postUserSecurityUpdatePassword.ts"],"names":["baseUrl","getHeaders","postUserSecurityUpdatePassword","request","fetch","method","headers","body","JSON","stringify","newPassword","confirmPassword","then","response","json","data","result","statusCode","success","is_success"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,OAAO,MAAMC,8BAA8B,GAAIC,OAAD,IAAgF;AAC5H,SAAOC,KAAK,CACT,GAAEJ,OAAQ,iCADD,EACmC;AAC7CK,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAEL,UAAU,EAF0B;AAG7CM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,WAAW,EAAEP,OAAO,CAACQ;AAAvB,KAAf;AAHuC,GADnC,CAAL,CAMLC,IANK,CAMA,MAAOC,QAAP,IAAoB;AACzB,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAjB;AACA,UAAMC,IAA2B,GAAGD,IAAI,CAACC,IAAzC;AACA,UAAMC,MAA0C,GAAG;AACjDD,MAAAA,IADiD;AAEjDE,MAAAA,UAAU,EAAEH,IAAI,CAACG,UAFgC;AAGjDC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHmC;AAIjDC,MAAAA,UAAU,EAAEL,IAAI,CAAC,YAAD;AAJiC,KAAnD;AAMA,WAAOE,MAAP;AACD,GAhBM,CAAP;AAiBD,CAlBM","sourcesContent":["import { PasswordResetRequest, PasswordResetResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\nimport { getHeaders } from '../../../shared/getHeaders'\n\nexport const postUserSecurityUpdatePassword = (request: PasswordResetRequest): Promise<ApiResponse<PasswordResetResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/updatepassword`, {\n    method: 'POST',\n    headers: getHeaders(),\n    body: JSON.stringify({ newPassword: request.confirmPassword })\n  }\n  ).then(async (response) => {\n    let json = await response.json()\n    const data: PasswordResetResponse = json.data\n    const result: ApiResponse<PasswordResetResponse> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    }\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}