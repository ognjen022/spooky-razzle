{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as configEventTypes from './eventTypes';\nconst initialState = {\n  auth0_client_id: undefined,\n  stripe_key: undefined,\n  instrumentation_key: undefined,\n  products: undefined\n};\nconst configReducer = createReducer(initialState, {\n  [configEventTypes.CONFIG_RECEIVED]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    products: {\n      game_pass: action.payload.game_pass_product_id,\n      watch_it_all: action.payload.watch_it_all_product_id\n    },\n    auth0_client_id: action.payload.auth0_client_id,\n    stripe_key: action.payload.stripe_key,\n    instrumentation_key: action.payload.instrumentation_key\n  }),\n  [configEventTypes.CONFIG_ERRORED]: (state, action) => _objectSpread({}, action.payload)\n});\nexport default configReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/config/configReducers.ts"],"names":["createReducer","configEventTypes","initialState","auth0_client_id","undefined","stripe_key","instrumentation_key","products","configReducer","CONFIG_RECEIVED","state","action","game_pass","payload","game_pass_product_id","watch_it_all","watch_it_all_product_id","CONFIG_ERRORED"],"mappings":";;;;;;AACA,SAASA,aAAT,QAAsD,kBAAtD;AAEA,OAAO,KAAKC,gBAAZ,MAAkC,cAAlC;AAEA,MAAMC,YAAiC,GAAG;AACxCC,EAAAA,eAAe,EAAEC,SADuB;AAExCC,EAAAA,UAAU,EAAED,SAF4B;AAGxCE,EAAAA,mBAAmB,EAAEF,SAHmB;AAIxCG,EAAAA,QAAQ,EAAEH;AAJ8B,CAA1C;AAOA,MAAMI,aAA2C,GAAGR,aAAa,CAACE,YAAD,EAAe;AAC5E,GAACD,gBAAgB,CAACQ,eAAlB,GAAoC,CAACC,KAAD,EAA6BC,MAA7B,qCAC/BD,KAD+B;AAElCH,IAAAA,QAAQ,EAAE;AACRK,MAAAA,SAAS,EAAED,MAAM,CAACE,OAAP,CAAeC,oBADlB;AAERC,MAAAA,YAAY,EAAEJ,MAAM,CAACE,OAAP,CAAeG;AAFrB,KAFwB;AAMlCb,IAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,CAAeV,eANE;AAOlCE,IAAAA,UAAU,EAAEM,MAAM,CAACE,OAAP,CAAeR,UAPO;AAQlCC,IAAAA,mBAAmB,EAAEK,MAAM,CAACE,OAAP,CAAeP;AARF,IADwC;AAY5E,GAACL,gBAAgB,CAACgB,cAAlB,GAAmC,CAACP,KAAD,EAAQC,MAAR,uBAA6CA,MAAM,CAACE,OAApD;AAZyC,CAAf,CAAjE;AAcA,eAAeL,aAAf","sourcesContent":["import { IConfigurationState, IConfigurationResponse } from './models';\nimport { createReducer, PayloadAction, Reducer } from '@reduxjs/toolkit'\n\nimport * as configEventTypes from './eventTypes'\n\nconst initialState: IConfigurationState = {\n  auth0_client_id: undefined,\n  stripe_key: undefined,\n  instrumentation_key: undefined,\n  products: undefined\n}\n\nconst configReducer: Reducer<IConfigurationState> = createReducer(initialState, {\n    [configEventTypes.CONFIG_RECEIVED]: (state: IConfigurationState, action: PayloadAction<IConfigurationResponse>) => ({\n      ...state, \n      products: { \n        game_pass: action.payload.game_pass_product_id,\n        watch_it_all: action.payload.watch_it_all_product_id\n      },\n      auth0_client_id: action.payload.auth0_client_id,\n      stripe_key: action.payload.stripe_key,\n      instrumentation_key: action.payload.instrumentation_key\n      })\n    ,\n    [configEventTypes.CONFIG_ERRORED]: (state, action: PayloadAction<any>) => ({ ...action.payload })\n})\nexport default configReducer"]},"metadata":{},"sourceType":"module"}