{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { isMobile } from '../../utils/utils';\nimport styles from './Modal.module.scss';\nimport classNames from 'classnames';\nexport let ModalSize;\n\n(function (ModalSize) {\n  ModalSize[\"lg\"] = \"lg\";\n  ModalSize[\"md\"] = \"md\";\n  ModalSize[\"sm\"] = \"sm\";\n})(ModalSize || (ModalSize = {}));\n\nconst Modal = ({\n  display,\n  children,\n  handleCloseModal,\n  modalSize\n}) => {\n  const close = () => {\n    handleCloseModal();\n  };\n\n  const contentClasses = classNames(styles.modal__content, styles[`modal__content--${isMobile() ? '' : modalSize}`]);\n  return __jsx(\"div\", {\n    className: `${styles['modal']} ${display ? styles['is-active'] : ''}`\n  }, __jsx(\"div\", {\n    onMouseDown: close,\n    className: styles['modal__inner']\n  }, __jsx(\"div\", {\n    className: contentClasses\n  }, __jsx(\"button\", {\n    onClick: close,\n    className: `${styles['modal__close-button']} ${styles['js-toggle-modal']}`\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-mini-close\"\n  })), __jsx(\"span\", {\n    className: \"screen-reader-text\"\n  }, \"Close\")), display && children)));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/components/Modal/Modal.tsx"],"names":["React","isMobile","styles","classNames","ModalSize","Modal","display","children","handleCloseModal","modalSize","close","contentClasses","modal__content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAYZ,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,gBAArB;AAAuCC,EAAAA;AAAvC,CAAD,KAAwD;AAE1F,QAAMC,KAAK,GAAG,MAAM;AAClBF,IAAAA,gBAAgB;AACjB,GAFD;;AAGA,QAAMG,cAAc,GAAGR,UAAU,CAC/BD,MAAM,CAACU,cADwB,EAE/BV,MAAM,CAAE,mBAAkBD,QAAQ,KAAK,EAAL,GAAUQ,SAAU,EAAhD,CAFyB,CAAjC;AAIA,SACE;AAAK,IAAA,SAAS,EAAG,GAAEP,MAAM,CAAC,OAAD,CAAU,IAAGI,OAAO,GAAGJ,MAAM,CAAC,WAAD,CAAT,GAAyB,EAAG;AAAzE,KAEE;AAAK,IAAA,WAAW,EAAEQ,KAAlB;AAAyB,IAAA,SAAS,EAAER,MAAM,CAAC,cAAD;AAA1C,KACE;AAAK,IAAA,SAAS,EAAES;AAAhB,KACE;AAAQ,IAAA,OAAO,EAAED,KAAjB;AAAwB,IAAA,SAAS,EAAG,GAAER,MAAM,CAAC,qBAAD,CAAwB,IAAGA,MAAM,CAAC,iBAAD,CAAoB;AAAjG,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAC;AAA3B,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,aAJF,CADF,EAQII,OAAO,IACLC,QATN,CADF,CAFF,CADF;AAmBD,CA5BD;;AA8BA,eAAeF,KAAf","sourcesContent":["import React from 'react'\nimport { isMobile } from '../../utils/utils';\nimport styles from './Modal.module.scss'\nimport classNames from 'classnames';\n\nexport enum ModalSize {\n  lg ='lg',\n  md = 'md',\n  sm = 'sm'\n}\n\ninterface ModalProps {\n  display: boolean;\n  handleCloseModal: Function;\n  modalSize?: ModalSize\n}\n\nconst Modal: React.FC<ModalProps> = ({ display, children, handleCloseModal, modalSize }) => {\n\n  const close = () => {\n    handleCloseModal();\n  }\n  const contentClasses = classNames(\n    styles.modal__content,\n    styles[`modal__content--${isMobile() ? '' : modalSize}`]\n  )\n  return (\n    <div className={`${styles['modal']} ${display ? styles['is-active'] : ''}`}>\n      {/* <div onClick={(e) => console.log(e)} className={styles['modal__background']}></div> */}\n      <div onMouseDown={close} className={styles['modal__inner']}>\n        <div className={contentClasses}>\n          <button onClick={close} className={`${styles['modal__close-button']} ${styles['js-toggle-modal']}`}>\n            <svg className='icon' role='presentation'>\n              <use xlinkHref='#icon-mini-close'></use>\n            </svg>\n            <span className='screen-reader-text'>Close</span>\n          </button>\n          {\n            display &&\n              children\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}