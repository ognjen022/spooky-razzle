{"ast":null,"code":"import { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { passwordUpdateRequestedEvent, passwordReceivedEvent, passwordErroredEvent } from '../events';\nimport { postUserSecurityUpdatePassword } from '../api/postUserSecurityUpdatePassword';\n\nvar passwordResetRequestedEpic = function passwordResetRequestedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(passwordUpdateRequestedEvent)), exhaustMap(function (event) {\n    return from(postUserSecurityUpdatePassword({\n      password: event.payload.password,\n      confirmPassword: event.payload.confirmPassword\n    })).pipe(exhaustMap(function (apiResponse) {\n      return of(apiResponse.statusCode === 200 ? passwordReceivedEvent(apiResponse.data) : passwordErroredEvent(apiResponse.data));\n    }), catchError(function () {\n      return of(passwordErroredEvent({\n        id: undefined,\n        error: 'Network error',\n        errorDescription: 'Check your internet connection'\n      }));\n    }));\n  }));\n};\n\nexport default [passwordResetRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/password/epics/passwordResetRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","passwordUpdateRequestedEvent","passwordReceivedEvent","passwordErroredEvent","postUserSecurityUpdatePassword","passwordResetRequestedEpic","action$","store","pipe","event","password","payload","confirmPassword","apiResponse","statusCode","data","id","undefined","error","errorDescription"],"mappings":"AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA6BC,4BAA7B,EAA2DC,qBAA3D,EAAkFC,oBAAlF,QAA8G,WAA9G;AAEA,SAASC,8BAAT,QAA+C,uCAA/C;;AAEA,IAAMC,0BAAmF,GAAG,SAAtFA,0BAAsF,CAACC,OAAD,EAAUC,KAAV;AAAA,SAC1FD,OAAO,CAACE,IAAR,CACEV,MAAM,CAACE,UAAU,CAACC,4BAAD,CAAX,CADR,EAEEJ,UAAU,CAAC,UAAAY,KAAK;AAAA,WACdd,IAAI,CAACS,8BAA8B,CAAC;AAAEM,MAAAA,QAAQ,EAAED,KAAK,CAACE,OAAN,CAAcD,QAA1B;AAAoCE,MAAAA,eAAe,EAAEH,KAAK,CAACE,OAAN,CAAcC;AAAnE,KAAD,CAA/B,CAAJ,CAA2HJ,IAA3H,CACEX,UAAU,CAAC,UAAAgB,WAAW;AAAA,aACpBjB,EAAE,CAACiB,WAAW,CAACC,UAAZ,KAA2B,GAA3B,GAAiCZ,qBAAqB,CAACW,WAAW,CAACE,IAAb,CAAtD,GAA2EZ,oBAAoB,CAACU,WAAW,CAACE,IAAb,CAAhG,CADkB;AAAA,KAAZ,CADZ,EAIEhB,UAAU,CAAC;AAAA,aAAMH,EAAE,CAACO,oBAAoB,CAAC;AACvCa,QAAAA,EAAE,EAAEC,SADmC;AAEvCC,QAAAA,KAAK,EAAE,eAFgC;AAGvCC,QAAAA,gBAAgB,EAAE;AAHqB,OAAD,CAArB,CAAR;AAAA,KAAD,CAJZ,CADc;AAAA,GAAN,CAFZ,CAD0F;AAAA,CAA5F;;AAiBA,eAAe,CAACd,0BAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { PasswordEventTypes, passwordUpdateRequestedEvent, passwordReceivedEvent, passwordErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { postUserSecurityUpdatePassword } from '../api/postUserSecurityUpdatePassword'\n\nconst passwordResetRequestedEpic: Epic<PasswordEventTypes, PasswordEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(passwordUpdateRequestedEvent)),\n    exhaustMap(event =>\n      from(postUserSecurityUpdatePassword({ password: event.payload.password, confirmPassword: event.payload.confirmPassword })).pipe(\n        exhaustMap(apiResponse => \n          of(apiResponse.statusCode === 200 ? passwordReceivedEvent(apiResponse.data) : passwordErroredEvent(apiResponse.data))\n        ),\n        catchError(() => of(passwordErroredEvent({\n          id: undefined,\n          error: 'Network error',\n          errorDescription: 'Check your internet connection'\n        })))\n      )\n    )\n  )\n\nexport default [passwordResetRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}