{"ast":null,"code":"import _defineProperty from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as eventTypes from './eventTypes';\nvar initialState = {\n  newsMetaData: [],\n  currentNewsArticle: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  hasLoadedNews: false\n};\nvar newsReducer = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, eventTypes.CONTENT_NEWS_RECEIVED, function (state, action) {\n  state.newsMetaData = action.payload.newsMetaData;\n  state.hasLoadedNews = true;\n  return state;\n}), _defineProperty(_createReducer, eventTypes.CONTENT_NEWS_ERRORED, function (state, action) {\n  state.error = action.payload.error;\n  state.errorDescription = action.payload.errorDescription;\n  state.hasLoadedNews = true;\n  return state;\n}), _defineProperty(_createReducer, eventTypes.CONTENT_NEWS_ARTICLE_RECEIVED, function (state, action) {\n  state.currentNewsArticle = action.payload.newsArticle;\n  state.hasLoadedNews = true;\n  return state;\n}), _defineProperty(_createReducer, eventTypes.CONTENT_NEWS_ARTICLE_ERRORED, function (state, action) {\n  state.error = action.payload.error;\n  state.errorDescription = action.payload.errorDescription;\n  state.hasLoadedNews = true;\n  return state;\n}), _createReducer));\nexport default newsReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/content/news/newsReducer.ts"],"names":["createReducer","eventTypes","initialState","newsMetaData","currentNewsArticle","undefined","error","errorDescription","hasLoadedNews","newsReducer","CONTENT_NEWS_RECEIVED","state","action","payload","CONTENT_NEWS_ERRORED","CONTENT_NEWS_ARTICLE_RECEIVED","newsArticle","CONTENT_NEWS_ARTICLE_ERRORED"],"mappings":";;;;AAAA,SAASA,aAAT,QAAsD,kBAAtD;AAGA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAGA,IAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,kBAAkB,EAAEC,SAFW;AAG/BC,EAAAA,KAAK,EAAED,SAHwB;AAI/BE,EAAAA,gBAAgB,EAAEF,SAJa;AAK/BG,EAAAA,aAAa,EAAE;AALgB,CAAjC;AAQA,IAAMC,WAAgC,GAAGT,aAAa,CAACE,YAAD,wDACnDD,UAAU,CAACS,qBADwC,EAChB,UAACC,KAAD,EAAQC,MAAR,EAAyD;AAC3FD,EAAAA,KAAK,CAACR,YAAN,GAAqBS,MAAM,CAACC,OAAP,CAAeV,YAApC;AACAQ,EAAAA,KAAK,CAACH,aAAN,GAAsB,IAAtB;AACA,SAAOG,KAAP;AACD,CALmD,mCAMnDV,UAAU,CAACa,oBANwC,EAMjB,UAACH,KAAD,EAAQC,MAAR,EAAyD;AAC1FD,EAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACAK,EAAAA,KAAK,CAACJ,gBAAN,GAAyBK,MAAM,CAACC,OAAP,CAAeN,gBAAxC;AACAI,EAAAA,KAAK,CAACH,aAAN,GAAsB,IAAtB;AACA,SAAOG,KAAP;AACD,CAXmD,mCAYnDV,UAAU,CAACc,6BAZwC,EAYR,UAACJ,KAAD,EAAQC,MAAR,EAAwD;AAClGD,EAAAA,KAAK,CAACP,kBAAN,GAA2BQ,MAAM,CAACC,OAAP,CAAeG,WAA1C;AACAL,EAAAA,KAAK,CAACH,aAAN,GAAsB,IAAtB;AACA,SAAOG,KAAP;AACD,CAhBmD,mCAiBnDV,UAAU,CAACgB,4BAjBwC,EAiBT,UAACN,KAAD,EAAQC,MAAR,EAAwD;AACjGD,EAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACAK,EAAAA,KAAK,CAACJ,gBAAN,GAAyBK,MAAM,CAACC,OAAP,CAAeN,gBAAxC;AACAI,EAAAA,KAAK,CAACH,aAAN,GAAsB,IAAtB;AACA,SAAOG,KAAP;AACD,CAtBmD,mBAAtD;AAyBA,eAAeF,WAAf","sourcesContent":["import { createReducer, Reducer, PayloadAction } from '@reduxjs/toolkit'\nimport _ from 'lodash'\n\nimport * as eventTypes from './eventTypes'\nimport { INewsState, INewsMetaDataResponse, INewsArticleResponse } from './models'\n\nconst initialState: INewsState = {\n  newsMetaData: [],\n  currentNewsArticle: undefined,\n  error: undefined,\n  errorDescription: undefined,\n  hasLoadedNews: false,\n}\n\nconst newsReducer: Reducer<INewsState> = createReducer(initialState, {\n  [eventTypes.CONTENT_NEWS_RECEIVED]: (state, action: PayloadAction<INewsMetaDataResponse>) => {\n    state.newsMetaData = action.payload.newsMetaData\n    state.hasLoadedNews = true\n    return state\n  },\n  [eventTypes.CONTENT_NEWS_ERRORED]: (state, action: PayloadAction<INewsMetaDataResponse>) => {\n    state.error = action.payload.error\n    state.errorDescription = action.payload.errorDescription\n    state.hasLoadedNews = true\n    return state\n  },\n  [eventTypes.CONTENT_NEWS_ARTICLE_RECEIVED]: (state, action: PayloadAction<INewsArticleResponse>) => {\n    state.currentNewsArticle = action.payload.newsArticle\n    state.hasLoadedNews = true\n    return state\n  },\n  [eventTypes.CONTENT_NEWS_ARTICLE_ERRORED]: (state, action: PayloadAction<INewsArticleResponse>) => {\n    state.error = action.payload.error\n    state.errorDescription = action.payload.errorDescription\n    state.hasLoadedNews = true\n    return state\n  },\n})\n\nexport default newsReducer\n"]},"metadata":{},"sourceType":"module"}