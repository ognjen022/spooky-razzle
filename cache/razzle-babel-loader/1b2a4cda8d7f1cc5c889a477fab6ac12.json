{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes';\nexport const contactUsRequestedEvent = createAction(eventTypes.CONTACT_SEND_REQUESTED, resolve => (firstname, lastname, email, messsage) => resolve({\n  firstname,\n  lastname,\n  email,\n  messsage\n}));\nexport const contactUsReceivedEvent = createAction(eventTypes.CONTACT_SEND_RECEIVED, resolve => data => resolve(data));\nexport const contactUsErroredEvent = createAction(eventTypes.CONTACT_SEND_ERRORED, resolve => error => resolve(error));","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/contact/events.ts"],"names":["createAction","eventTypes","contactUsRequestedEvent","CONTACT_SEND_REQUESTED","resolve","firstname","lastname","email","messsage","contactUsReceivedEvent","CONTACT_SEND_RECEIVED","data","contactUsErroredEvent","CONTACT_SEND_ERRORED","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAKA,OAAO,MAAMC,uBAAuB,GAAGF,YAAY,CACjDC,UAAU,CAACE,sBADsC,EAEhDC,OAAD,IAAa,CAACC,SAAD,EAAoBC,QAApB,EAAsCC,KAAtC,EAAqDC,QAArD,KAA0EJ,OAAO,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAAD,CAF7C,CAA5C;AAKP,OAAO,MAAMC,sBAAsB,GAAGT,YAAY,CAACC,UAAU,CAACS,qBAAZ,EAAoCN,OAAD,IAAcO,IAAD,IAChGP,OAAO,CAACO,IAAD,CADyC,CAA3C;AAIP,OAAO,MAAMC,qBAAqB,GAAGZ,YAAY,CAACC,UAAU,CAACY,oBAAZ,EAAmCT,OAAD,IAAcU,KAAD,IAA+BV,OAAO,CAACU,KAAD,CAArF,CAA1C","sourcesContent":["import { createAction } from 'typesafe-actions'\nimport * as eventTypes from './eventTypes'\nimport { IContactUsResponse } from './models'\nimport { ActionType } from 'typesafe-actions'\nimport { networkErroredEvent } from '../shared/networkErroredEvent'\n\nexport const contactUsRequestedEvent = createAction(\n  eventTypes.CONTACT_SEND_REQUESTED,\n  (resolve) => (firstname: string, lastname: string, email: string, messsage: string) => resolve({ firstname, lastname, email, messsage })\n)\n\nexport const contactUsReceivedEvent = createAction(eventTypes.CONTACT_SEND_RECEIVED, (resolve) => (data: IContactUsResponse) =>\n  resolve(data)\n)\n\nexport const contactUsErroredEvent = createAction(eventTypes.CONTACT_SEND_ERRORED, (resolve) => (error: IContactUsResponse) => resolve(error))\n\nexport type ContactUsEventTypes = ActionType<\n  typeof contactUsRequestedEvent | typeof contactUsReceivedEvent | typeof contactUsErroredEvent | typeof networkErroredEvent\n>\n"]},"metadata":{},"sourceType":"module"}