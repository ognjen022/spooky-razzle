{"ast":null,"code":"var _jsxFileName = \"/Users/ognjen/Desktop/spooky.live-ssr/src/components/VideoStreamer/VideoStreamerSingle.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './VideoStreamer.module.scss';\nimport PurchaseButton from '../PurchaseButton/PurchaseButton';\nimport { VideoStreamStatus, StreamTypes } from '../../services/content/tags/models';\nimport { getTagsFull, selectVideoStreamStatus, isStreamLive } from '../../services/content/tags/selectors';\nimport SaveStreamButton from '../../components/SaveButtons/SaveStreamButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport { goBack } from 'connected-react-router';\nimport PlayButton from '../PlayButton/PlayButton';\nimport { isMobile } from '../../utils/utils';\nimport EventSeoHead from '../SeoHead/EventSeoHead';\nimport LazyImage from '../LazyImage/LazyImage';\nimport VideoPlayerDefault from '../VideoPlayer/VideoPlayerDefault';\nimport TracTracPlayer from '../VideoPlayer/TracTracPlayer';\nimport Button from '../Button/Button';\nvar mainScreen;\n\n(function (mainScreen) {\n  mainScreen[\"tracTrac\"] = \"tractrac\";\n  mainScreen[\"stream\"] = \"stream\";\n})(mainScreen || (mainScreen = {}));\n\nconst VideoStreamerSingle = props => {\n  var _stream$videoStreams;\n\n  const videoPlayer = /*#__PURE__*/React.createRef();\n  const {\n    eventIdParam\n  } = useParams();\n  const eventId = parseInt(eventIdParam);\n  const uniqueId = uuidv4();\n  const {\n    0: playing,\n    1: setPlaying\n  } = useState(false);\n  const {\n    1: setShowModal\n  } = useState(false);\n  const uuidIndex = useSelector(state => state.content.tags.uuidIndex || []);\n  const isLoggedIn = useSelector(state => selectIsLoggedIn(state.userSecurity.token));\n  const dispatch = useDispatch();\n  const streams = useSelector(state => state.content.tags.streams);\n\n  const stream = _.find(streams || [], stream => stream.eventId === eventId);\n\n  if (!stream) dispatch(goBack());\n  const videoStreamStatus = useSelector(state => selectVideoStreamStatus(state, stream));\n  const {\n    0: tracTracSources,\n    1: setTractracSources\n  } = useState([]);\n  const {\n    0: streamProgress,\n    1: setStreamProgress\n  } = useState(0);\n  const {\n    0: tracTrac,\n    1: setTracTrac\n  } = useState(false);\n  const {\n    0: streamerMainScreen,\n    1: setStreamerMainScreen\n  } = useState(mainScreen.stream); // No stream or liveStreams?\n\n  let hasVideoStream = stream && stream.videoStreams && ((_stream$videoStreams = stream.videoStreams) === null || _stream$videoStreams === void 0 ? void 0 : _stream$videoStreams.length) > 0;\n  let hasBroadcast = stream && isStreamLive(stream.startTime, stream.duration);\n  let autoPlay = hasVideoStream && hasBroadcast && isLoggedIn;\n  const lineUpTagsFull = stream ? getTagsFull(stream.lineUpTags, uuidIndex) : [];\n  const {\n    0: tracTracSource,\n    1: setTractracSource\n  } = useState(undefined);\n  if (!stream) return __jsx(React.Fragment, null);\n\n  const getLivestreamEventId = stream => {\n    if (!stream || !stream.videoStreams || stream.videoStreams.length === 0) {\n      return '';\n    }\n\n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.MatchStream)[0].liveStreamEventId;\n  };\n\n  const getLiveEventVideoIdUrlParam = stream => {\n    if (!stream || !stream.videoStreams || stream.videoStreams.length === 0 || !stream.videoStreams[0].liveEventVideoId) {\n      return 0;\n    }\n\n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.MatchStream)[0].liveEventVideoId; //`&videoId=${stream.videoStreams[0].liveEventVideoId}`\n  };\n\n  const getTracTracSources = stream => {\n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.TracTracStream);\n  };\n\n  const cropImageIfMobile = imageUri => {\n    if (isMobile()) {\n      return `${imageUri}?width=640&height=360&mode=crop`;\n    }\n\n    return `${imageUri}?width=2560&height=1440&mode=crop`;\n  }; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  useEffect(() => {\n    if (tracTrac) {\n      const sources = getTracTracSources(stream).map((val, index) => ({\n        id: uuidv4(),\n        streamName: val.streamName,\n        source: val.tractracSource,\n        previewImage: val.previewImage\n      }));\n      setTractracSources(sources);\n      setTractracSource(sources[0]);\n      setStreamerMainScreen(mainScreen.tracTrac);\n    }\n  }, [tracTrac]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  useEffect(() => {\n    if (stream) {\n      setTracTrac(!isMobile() && stream.videoStreams.filter(vs => vs.streamType === StreamTypes.TracTracStream).length > 0);\n    }\n  }, [stream]);\n  console.log(stream, tracTracSource);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(EventSeoHead, {\n    stream: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), tracTrac ? __jsx(\"div\", {\n    className: styles['video-streamer-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer__details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"aspect-ratio-16-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, playing && tracTracSource ? streamerMainScreen === mainScreen.tracTrac ? __jsx(TracTracPlayer, {\n    tracTracSource: tracTracSource.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }) : __jsx(VideoPlayerDefault, {\n    position: streamProgress,\n    eventId: getLivestreamEventId(stream),\n    videoId: getLiveEventVideoIdUrlParam(stream),\n    isLive: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }) : __jsx(React.Fragment, null, streamerMainScreen === mainScreen.tracTrac ? __jsx(LazyImage, {\n    src: cropImageIfMobile((tracTracSource === null || tracTracSource === void 0 ? void 0 : tracTracSource.previewImage) ? `${tracTracSource === null || tracTracSource === void 0 ? void 0 : tracTracSource.previewImage}` : (stream === null || stream === void 0 ? void 0 : stream.image) ? `${stream === null || stream === void 0 ? void 0 : stream.image}` : 'https://via.placeholder.com/2560x1440.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 27\n    }\n  }) : __jsx(LazyImage, {\n    src: cropImageIfMobile((stream === null || stream === void 0 ? void 0 : stream.image) ? `${stream === null || stream === void 0 ? void 0 : stream.image}` : 'https://via.placeholder.com/2560x1440.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }\n  }), __jsx(PlayButton, {\n    stream: stream,\n    className: 'calendar-video__play-icon',\n    playStream: () => setPlaying(true),\n    mobileRedirectUrl: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }))))), __jsx(\"div\", {\n    className: styles['video-streamer__details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"aspect-ratio-16-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, playing ? streamerMainScreen === mainScreen.tracTrac ? __jsx(VideoPlayerDefault, {\n    position: streamProgress,\n    eventId: getLivestreamEventId(stream),\n    videoId: getLiveEventVideoIdUrlParam(stream),\n    isLive: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }) : __jsx(TracTracPlayer, {\n    tracTracSource: tracTracSource.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }) : __jsx(React.Fragment, null, streamerMainScreen === mainScreen.tracTrac ? __jsx(LazyImage, {\n    src: cropImageIfMobile((stream === null || stream === void 0 ? void 0 : stream.image) ? `${stream === null || stream === void 0 ? void 0 : stream.image}` : 'https://via.placeholder.com/2560x1440.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 27\n    }\n  }) : __jsx(LazyImage, {\n    src: cropImageIfMobile((tracTracSource === null || tracTracSource === void 0 ? void 0 : tracTracSource.previewImage) ? `${tracTracSource === null || tracTracSource === void 0 ? void 0 : tracTracSource.previewImage}` : (stream === null || stream === void 0 ? void 0 : stream.image) ? `${stream === null || stream === void 0 ? void 0 : stream.image}` : 'https://via.placeholder.com/2560x1440.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }), __jsx(PlayButton, {\n    stream: stream,\n    className: 'calendar-video__play-icon',\n    playStream: () => setPlaying(true),\n    mobileRedirectUrl: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  })))), tracTrac && __jsx(React.Fragment, null, !isMobile() && stream.videoStreams.filter(vs => vs.streamType === StreamTypes.TracTracStream).length > 0 && tracTrac && __jsx(Button, {\n    onClick: () => setStreamerMainScreen(streamerMainScreen === mainScreen.tracTrac ? mainScreen.stream : mainScreen.tracTrac),\n    color: 'ghost-green',\n    label: \"swap main screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: styles['video-streamer__tractrac-feed'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, \"TracTrac Feeds\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, tracTracSources.map((item, index) => {\n    return __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 31\n      }\n    }, __jsx(Link, {\n      to: '#',\n      style: {\n        fontWeight: tracTracSource.id === item.id ? 'bold' : 'normal'\n      },\n      onClick: () => setTractracSource(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 35\n      }\n    }, item.streamName));\n  })))))) : __jsx(\"div\", {\n    className: styles['video-streamer'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"aspect-ratio-16-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, playing ? __jsx(VideoPlayerDefault, {\n    eventId: getLivestreamEventId(stream),\n    videoId: getLiveEventVideoIdUrlParam(stream),\n    position: streamProgress,\n    onTimeUpdate: ev => setStreamProgress(ev),\n    isLive: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }) // <iframe title=\"Video Player\" src={`/video-player/index.html?eventId=${getLivestreamEventId(stream)}${getLiveEventVideoIdUrlParam(stream)}`} allowFullScreen></iframe>\n  : __jsx(React.Fragment, null, __jsx(LazyImage, {\n    src: cropImageIfMobile((stream === null || stream === void 0 ? void 0 : stream.image) ? `${stream.image}` : 'https://via.placeholder.com/2560x1440.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }), __jsx(PlayButton, {\n    stream: stream,\n    className: 'calendar-video__play-icon',\n    playStream: () => setPlaying(true),\n    mobileRedirectUrl: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  })))), __jsx(\"div\", {\n    className: styles['video-streamer-content'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer__details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-stream__details-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer__date-label'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, moment(stream.startTime).format('ddd Do MMM YYYY')\n  /* TUE 7th Jan 2020 */\n  ))), __jsx(\"h2\", {\n    className: styles['video-streamer__details-name'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \" \", stream.name), __jsx(\"div\", {\n    className: styles['video-streamer__actions'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(SaveStreamButton, {\n    suffix: \"to my stream\",\n    className: styles['video-streamer__tractrac'],\n    stream: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, stream.description), __jsx(\"div\", {\n    className: styles['video-streamer-socials-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, __jsx(\"nav\", {\n    className: styles['video-streamer-social-nav'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: styles['video-streamer-teams-vs-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles['inner-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, (videoStreamStatus === VideoStreamStatus.NotPurchased || videoStreamStatus === VideoStreamStatus.NotPurchasedNotLoggedIn) && __jsx(\"div\", {\n    className: styles['video-stream-teams-vs-header'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"Purchase Options\")), (lineUpTagsFull === null || lineUpTagsFull === void 0 ? void 0 : lineUpTagsFull.length) >= 2 && __jsx(\"ul\", {\n    className: styles['video-streamer-teams-vs-list'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, __jsx(\"li\", {\n    className: styles['video-streamer-teams-vs-list__images'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles['video-streamer-teams-vs-list__image'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, __jsx(LazyImage, {\n    src: lineUpTagsFull[0].icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: styles['video-streamer-teams-vs-list__image'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, __jsx(LazyImage, {\n    src: lineUpTagsFull[1].icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }))), __jsx(\"li\", {\n    className: styles['video-streamer-teams-vs-list__names'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    to: lineUpTagsFull[0].path || '#',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, lineUpTagsFull[0].name)), __jsx(\"div\", {\n    className: styles['video-streamer-teams-vs-list__versus-span'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, \"Vs\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    to: lineUpTagsFull[1].path || '#',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, lineUpTagsFull[1].name)))), __jsx(PurchaseButton, {\n    classNames: `${styles['video-streamer-teams-vs-list__actions']} ${(lineUpTagsFull === null || lineUpTagsFull === void 0 ? void 0 : lineUpTagsFull.length) < 2 ? styles['video-streamer-teams-vs-list__actions--offset'] : ''}`,\n    mainTag: undefined,\n    stream: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles['video-streamer-socials-wrapper-mobile'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, __jsx(\"nav\", {\n    className: styles['video-streamer-social-nav'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default VideoStreamerSingle;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/components/VideoStreamer/VideoStreamerSingle.tsx"],"names":["React","useEffect","useState","_","moment","v4","uuidv4","styles","PurchaseButton","VideoStreamStatus","StreamTypes","getTagsFull","selectVideoStreamStatus","isStreamLive","SaveStreamButton","useSelector","useDispatch","useParams","Link","selectIsLoggedIn","goBack","PlayButton","isMobile","EventSeoHead","LazyImage","VideoPlayerDefault","TracTracPlayer","Button","mainScreen","VideoStreamerSingle","props","videoPlayer","createRef","eventIdParam","eventId","parseInt","uniqueId","playing","setPlaying","setShowModal","uuidIndex","state","content","tags","isLoggedIn","userSecurity","token","dispatch","streams","stream","find","videoStreamStatus","tracTracSources","setTractracSources","streamProgress","setStreamProgress","tracTrac","setTracTrac","streamerMainScreen","setStreamerMainScreen","hasVideoStream","videoStreams","length","hasBroadcast","startTime","duration","autoPlay","lineUpTagsFull","lineUpTags","tracTracSource","setTractracSource","undefined","getLivestreamEventId","filter","streamType","MatchStream","liveStreamEventId","getLiveEventVideoIdUrlParam","liveEventVideoId","getTracTracSources","TracTracStream","cropImageIfMobile","imageUri","sources","map","val","index","id","streamName","source","tractracSource","previewImage","vs","console","log","image","item","fontWeight","ev","format","name","description","NotPurchased","NotPurchasedNotLoggedIn","icon","path"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport styles from './VideoStreamer.module.scss'\n\nimport PurchaseButton from '../PurchaseButton/PurchaseButton'\nimport { ITag, IStream, VideoStream, ITagIndex, VideoStreamStatus, StreamTypes } from '../../services/content/tags/models'\nimport { filterStreams, getTagsFull, selectVideoStreamStatus, isStreamLive } from '../../services/content/tags/selectors'\nimport SaveStreamButton from '../../components/SaveButtons/SaveStreamButton'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../services/RootState'\nimport { Stream } from 'stream'\nimport { useParams, Link } from 'react-router-dom'\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors'\nimport { push, goBack } from 'connected-react-router'\nimport PlayButton from '../PlayButton/PlayButton'\nimport { getInitials, isMobile } from '../../utils/utils'\nimport { showPurchaseModalToggledEvent } from '../../services/payments/purchase/events'\nimport EventSeoHead from '../SeoHead/EventSeoHead'\nimport LazyImage from '../LazyImage/LazyImage'\nimport VideoPlayerDefault from '../VideoPlayer/VideoPlayerDefault'\nimport TracTracPlayer from '../VideoPlayer/TracTracPlayer'\nimport Button from '../Button/Button'\nimport { relative } from 'path'\ninterface VideoStreamerProps {\n\n}\n\nenum mainScreen {\n  tracTrac = 'tractrac',\n  stream = 'stream'\n}\n\nconst VideoStreamerSingle: React.FC<VideoStreamerProps> = (props) => {\n  const videoPlayer = React.createRef<any>();\n  const { eventIdParam } = useParams() as any\n  const eventId: number = parseInt(eventIdParam)\n\n  const uniqueId = uuidv4()\n  const [playing, setPlaying] = useState(false)\n  const [, setShowModal] = useState(false)\n  const uuidIndex = useSelector<RootState, ITagIndex[]>(state => state.content.tags.uuidIndex || [])\n  const isLoggedIn = useSelector<RootState, boolean>(state => selectIsLoggedIn(state.userSecurity.token))\n  const dispatch = useDispatch()\n\n  const streams = useSelector<RootState, IStream[] | undefined>(state => state.content.tags.streams)\n  const stream: IStream | undefined = _.find(streams || [], (stream: IStream) => stream.eventId === eventId)\n\n  if (!stream) dispatch(goBack())\n\n  const videoStreamStatus = useSelector<RootState, VideoStreamStatus>(state => selectVideoStreamStatus(state, stream))\n  const [tracTracSources, setTractracSources] = useState<any>([]);\n  const [streamProgress, setStreamProgress] = useState<number>(0);\n  const [tracTrac, setTracTrac] = useState(false);\n  const [streamerMainScreen, setStreamerMainScreen] = useState(mainScreen.stream);\n  // No stream or liveStreams?\n  let hasVideoStream = (stream && stream.videoStreams && stream.videoStreams?.length > 0)\n  let hasBroadcast = stream && isStreamLive(stream.startTime, stream.duration);\n  let autoPlay = hasVideoStream && hasBroadcast && isLoggedIn\n  const lineUpTagsFull: ITag[] = stream ? getTagsFull(stream.lineUpTags, uuidIndex) : []\n\n  const [tracTracSource, setTractracSource] = useState<any>(undefined);\n  if (!stream) return (<></>)\n\n  const getLivestreamEventId = (stream: IStream): string => {\n    if (!stream || !stream.videoStreams || stream.videoStreams.length === 0) {\n      return ''\n    }\n\n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.MatchStream)[0].liveStreamEventId\n  }\n\n  const getLiveEventVideoIdUrlParam = (stream: IStream): number => {\n    if (!stream || !stream.videoStreams || stream.videoStreams.length === 0 || !stream.videoStreams[0].liveEventVideoId) {\n      return 0\n    }\n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.MatchStream)[0].liveEventVideoId//`&videoId=${stream.videoStreams[0].liveEventVideoId}`\n  }\n\n  const getTracTracSources = (stream: IStream) : VideoStream[] => {\n  \n    return stream.videoStreams.filter(stream => stream.streamType === StreamTypes.TracTracStream)\n  }\n\n  const cropImageIfMobile = (imageUri: string): string => {\n    \n    if (isMobile()) {\n      return `${imageUri}?width=640&height=360&mode=crop`\n    }\n    return `${imageUri}?width=2560&height=1440&mode=crop`;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    if(tracTrac) {\n      \n      const sources = getTracTracSources(stream).map((val, index) => ({\n        id: uuidv4(),\n        streamName:  val.streamName,\n        source: val.tractracSource,\n        previewImage: val.previewImage\n      }));\n      setTractracSources(sources)\n      setTractracSource(sources[0]);\n\n      setStreamerMainScreen(mainScreen.tracTrac);\n    }\n  }, [tracTrac])\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    if (stream) {\n      setTracTrac(!isMobile() && stream.videoStreams.filter(vs => vs.streamType === StreamTypes.TracTracStream).length > 0);\n    }\n  }, [stream])\n  \n  console.log(stream, tracTracSource);\n  return (\n    <div className=\"container\">\n      <EventSeoHead stream={stream} />\n      {\n        tracTrac ? \n        (\n        <div className={styles['video-streamer-wrapper']}>\n          <div className={styles['video-streamer__details']}>\n            <div className={styles['video-streamer']}>\n              <div className=\"aspect-ratio-16-9\">\n                {playing && tracTracSource ?\n                  (\n                    streamerMainScreen === mainScreen.tracTrac ? \n                    (\n                      <TracTracPlayer \n                        tracTracSource={tracTracSource.source}></TracTracPlayer>\n                    ) : \n                    (\n                      <VideoPlayerDefault \n                        position={streamProgress}\n                        eventId={getLivestreamEventId(stream)} \n                        videoId={getLiveEventVideoIdUrlParam(stream)}\n                        isLive={false} ></VideoPlayerDefault>\n                    )\n                  ) : (\n                    <>\n                      {\n                        streamerMainScreen === mainScreen.tracTrac ? \n                        (\n                          <LazyImage src={cropImageIfMobile(tracTracSource?.previewImage ? `${tracTracSource?.previewImage}` : stream?.image ? `${stream?.image}` : 'https://via.placeholder.com/2560x1440.png')} alt=\"\" />\n                        ) :\n                        (\n                          <LazyImage src={cropImageIfMobile(stream?.image ? `${stream?.image}` : 'https://via.placeholder.com/2560x1440.png')} alt=\"\" />\n                        )\n                      }\n                      <PlayButton\n                        stream={stream}\n                        className={'calendar-video__play-icon'}\n                        playStream={() => setPlaying(true)}\n                        mobileRedirectUrl={undefined}\n                      />\n                    </>\n                  )\n                }\n              </div>\n            </div>\n          </div>\n          <div className={styles['video-streamer__details']}>\n            <div className={styles['video-streamer']}>\n              <div className=\"aspect-ratio-16-9\">\n                {playing ?\n                  (\n                    streamerMainScreen === mainScreen.tracTrac ? \n                    (\n                      <VideoPlayerDefault \n                        position={streamProgress}\n                        eventId={getLivestreamEventId(stream)} \n                        videoId={getLiveEventVideoIdUrlParam(stream)}\n                        isLive={false} ></VideoPlayerDefault>\n                    ) : \n                    (\n                      <TracTracPlayer \n                        tracTracSource={tracTracSource.source}></TracTracPlayer>\n                    )\n                  ) : (\n                    <>\n                      {\n                        streamerMainScreen === mainScreen.tracTrac ? \n                        (\n                          <LazyImage src={cropImageIfMobile(stream?.image ? `${stream?.image}` : 'https://via.placeholder.com/2560x1440.png')} alt=\"\" />\n                        ) :\n                        (\n                          <LazyImage src={cropImageIfMobile(tracTracSource?.previewImage ? `${tracTracSource?.previewImage}` : stream?.image ? `${stream?.image}` : 'https://via.placeholder.com/2560x1440.png')} alt=\"\" />\n                        )\n                      }\n                      <PlayButton\n                        stream={stream}\n                        className={'calendar-video__play-icon'}\n                        playStream={() => setPlaying(true)}\n                        mobileRedirectUrl={undefined}\n                      />\n                    </>\n                  )\n                }\n              </div>\n            </div>\n            {\n              tracTrac && \n              <>\n                {\n                  !isMobile() && stream.videoStreams.filter(vs => vs.streamType === StreamTypes.TracTracStream).length > 0 && tracTrac &&\n\n                    <Button \n                      onClick={() => setStreamerMainScreen(streamerMainScreen === mainScreen.tracTrac ? mainScreen.stream : mainScreen.tracTrac)}\n                      color={'ghost-green'}\n                      label=\"swap main screen\">\n                    </Button>\n                }\n                <div className={styles['video-streamer__tractrac-feed']} >\n                  <span>TracTrac Feeds</span>\n                  <ul>\n                    {tracTracSources.map((item, index) => {\n                      return (<li><Link to={'#'} \n                      style={{\n                    fontWeight: tracTracSource.id === item.id ? 'bold' : 'normal'\n                  }} \n                  onClick={() => setTractracSource(item)}>{item.streamName}</Link></li>);\n                    })}\n                  </ul>\n                </div>\n              </>\n              \n            }\n          </div>\n        </div>\n        ) :\n        (<div className={styles['video-streamer']}>\n          <div className=\"aspect-ratio-16-9\">\n            {playing ?\n              (\n                <VideoPlayerDefault \n                  eventId={getLivestreamEventId(stream)} \n                  videoId={getLiveEventVideoIdUrlParam(stream)}\n                  position={streamProgress}\n                  onTimeUpdate={ev => setStreamProgress(ev)}\n                  isLive={false} ></VideoPlayerDefault>\n                // <iframe title=\"Video Player\" src={`/video-player/index.html?eventId=${getLivestreamEventId(stream)}${getLiveEventVideoIdUrlParam(stream)}`} allowFullScreen></iframe>\n              ) : (\n                <>\n                  <LazyImage src={cropImageIfMobile(stream?.image ? `${stream.image}` : 'https://via.placeholder.com/2560x1440.png')} alt=\"\" />\n                  <PlayButton\n                    stream={stream}\n                    className={'calendar-video__play-icon'}\n                    playStream={() => setPlaying(true)}\n                    mobileRedirectUrl={undefined}\n                  />\n                </>\n              )\n            }\n\n\n          </div>\n        </div>)\n      }\n      <div className={styles['video-streamer-content']}>\n        <div className={styles['video-streamer__details']}>\n          <div className={styles['video-stream__details-wrapper']}>\n            \n            <div className={styles['video-streamer__date-label']}>\n              <span>{moment(stream.startTime).format('ddd Do MMM YYYY') /* TUE 7th Jan 2020 */}</span>\n            </div>\n          </div>\n          <h2 className={styles['video-streamer__details-name']}> {stream.name}</h2>\n          <div className={styles['video-streamer__actions']}>\n            <SaveStreamButton\n              suffix=\"to my stream\" \n              className={styles['video-streamer__tractrac']} \n              stream={stream}></SaveStreamButton>\n            \n          </div>\n          <p>{stream.description}</p>\n          <div className={styles['video-streamer-socials-wrapper']}>\n            <nav className={styles['video-streamer-social-nav']}>\n              {/*\n              <ul className={styles['video-streamer-social-nav__list']}>\n                <li className={styles['video-streamer-social-nav__list-item']}>\n\n                  <a href=\"/#\" className={styles['video-streamer-social-nav__link']}>\n                    <svg className=\"icon\" role=\"presentation\">\n                      <use xlinkHref=\"#icon-social-facebook\"></use>\n                    </svg>\n                    <span className=\"screen-reader-text\">Facebook</span>\n                  </a>\n\n                </li>\n                <li className={styles['video-streamer-social-nav__list-item']}>\n                  <a href=\"/#\" className={styles['video-streamer-social-nav__link']}>\n                    <svg className=\"icon\" role=\"presentation\">\n                      <use xlinkHref=\"#icon-social-twitter\"></use>\n                    </svg>\n                    <span className=\"screen-reader-text\">Twitter</span>\n                  </a>\n\n                </li>\n              </ul>\n              */}\n            </nav>\n          </div>\n\n        </div>\n        <div className={styles['video-streamer-teams-vs-wrapper']}>\n          <div className={styles['inner-wrapper']}>\n            {\n              (videoStreamStatus === VideoStreamStatus.NotPurchased || videoStreamStatus === VideoStreamStatus.NotPurchasedNotLoggedIn) &&\n              <div className={styles['video-stream-teams-vs-header']}>\n                <span>Purchase Options</span>\n              </div>\n            }\n            {lineUpTagsFull?.length >= 2 &&\n              <ul className={styles['video-streamer-teams-vs-list']}>\n\n                <li className={styles['video-streamer-teams-vs-list__images']}>\n                  <div className={styles['video-streamer-teams-vs-list__image']}>\n                    <LazyImage src={lineUpTagsFull[0].icon} alt=\"\" />\n                  </div>\n                  <div className={styles['video-streamer-teams-vs-list__image']}>\n                    <LazyImage src={lineUpTagsFull[1].icon} alt=\"\" />\n                  </div>\n                </li>\n                <li className={styles['video-streamer-teams-vs-list__names']}>\n                  <span>\n                    <Link to={lineUpTagsFull[0].path || '#'}>{lineUpTagsFull[0].name}</Link>\n                  </span>\n                  <div className={styles['video-streamer-teams-vs-list__versus-span']}>Vs</div>\n                  <span>\n                    <Link to={lineUpTagsFull[1].path || '#'}>{lineUpTagsFull[1].name}</Link>\n                  </span>\n                </li>\n              </ul>\n            \n            }\n            \n            <PurchaseButton classNames={`${styles['video-streamer-teams-vs-list__actions']} ${lineUpTagsFull?.length < 2 ? styles['video-streamer-teams-vs-list__actions--offset'] : ''}`} mainTag={undefined} stream={stream} />\n\n          </div>\n          <div className={styles['video-streamer-socials-wrapper-mobile']}>\n            <nav className={styles['video-streamer-social-nav']}>\n              {/*\n              <ul className={styles['video-streamer-social-nav__list']}>\n                <li className={styles['video-streamer-social-nav__list-item']}>\n\n                    <a href=\"/#\" className={styles['video-streamer-social-nav__link']}>\n                      <svg className=\"icon\" role=\"presentation\">\n                        <use xlinkHref=\"#icon-social-facebook\"></use>\n                      </svg>\n                      <span className=\"screen-reader-text\">Facebook</span>\n                    </a>\n                </li>\n                <li className={styles['video-streamer-social-nav__list-item']}>\n                  <a href=\"/#\" className={styles['video-streamer-social-nav__link']}>\n                    <svg className=\"icon\" role=\"presentation\">\n                      <use xlinkHref=\"#icon-social-twitter\"></use>\n                    </svg>\n                    <span className=\"screen-reader-text\">Twitter</span>\n                  </a>\n                </li>\n              </ul>\n                  */}\n            </nav>\n          </div>\n        </div>\n        \n      </div>\n    </div >\n  )\n}\n\nexport default VideoStreamerSingle\n"]},"metadata":{},"sourceType":"module"}