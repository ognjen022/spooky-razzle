{"ast":null,"code":"import { baseUrl } from '../../../shared/baseUrl';\nexport const postUserSecurityLogin = (username, password) => {\n  return fetch(`${baseUrl}/v1/usersecurity/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(async response => {\n    // console.log('postUserSecurityLogin response', response)\n    if (response.status === 401) {\n      let text = await response.text();\n      const result = {\n        data: {\n          accessToken: undefined,\n          expiresIn: 0,\n          expiry: undefined,\n          idToken: undefined,\n          scope: undefined,\n          tokenType: undefined,\n          error: text || 'Login unsuccessful.',\n          errorDescription: text,\n          refreshToken: undefined,\n          redirectTo: undefined\n        },\n        statusCode: response.status,\n        success: false,\n        is_success: false\n      };\n      return result;\n    }\n\n    let json = await response.json(); // console.log('postUserSecurityLogin json', json)\n\n    const data = json.data;\n    const result = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    };\n    return result;\n  });\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/userSecurity/token/api/postUserSecurityLogin.ts"],"names":["baseUrl","postUserSecurityLogin","username","password","fetch","method","headers","body","JSON","stringify","then","response","status","text","result","data","accessToken","undefined","expiresIn","expiry","idToken","scope","tokenType","error","errorDescription","refreshToken","redirectTo","statusCode","success","is_success","json"],"mappings":"AACA,SAASA,OAAT,QAAwB,yBAAxB;AAGA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAA6E;AAChH,SAAOC,KAAK,CACT,GAAEJ,OAAQ,wBADD,EAC0B;AACpCK,IAAAA,MAAM,EAAE,MAD4B;AACpBC,IAAAA,OAAO,EAAE;AACvB,sBAAgB;AADO,KADW;AAIpCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf;AAJ8B,GAD1B,CAAL,CAOLO,IAPK,CAOA,MAAOC,QAAP,IAAoB;AACzB;AACA,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAjB;AACA,YAAMC,MAAkC,GAAG;AACzCC,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAEC,SADT;AAEJC,UAAAA,SAAS,EAAE,CAFP;AAGJC,UAAAA,MAAM,EAAEF,SAHJ;AAIJG,UAAAA,OAAO,EAAEH,SAJL;AAKJI,UAAAA,KAAK,EAAEJ,SALH;AAMJK,UAAAA,SAAS,EAAEL,SANP;AAOJM,UAAAA,KAAK,EAAEV,IAAI,IAAI,qBAPX;AAQJW,UAAAA,gBAAgB,EAAEX,IARd;AASJY,UAAAA,YAAY,EAAER,SATV;AAUJS,UAAAA,UAAU,EAAET;AAVR,SADmC;AAazCU,QAAAA,UAAU,EAAEhB,QAAQ,CAACC,MAboB;AAczCgB,QAAAA,OAAO,EAAE,KAdgC;AAezCC,QAAAA,UAAU,EAAE;AAf6B,OAA3C;AAiBA,aAAOf,MAAP;AACD;;AAED,QAAIgB,IAAI,GAAG,MAAMnB,QAAQ,CAACmB,IAAT,EAAjB,CAxByB,CAyBzB;;AACA,UAAMf,IAAmB,GAAGe,IAAI,CAACf,IAAjC;AACA,UAAMD,MAAkC,GAAG;AACzCC,MAAAA,IADyC;AAEzCY,MAAAA,UAAU,EAAEG,IAAI,CAACH,UAFwB;AAGzCC,MAAAA,OAAO,EAAEE,IAAI,CAACF,OAH2B;AAIzCC,MAAAA,UAAU,EAAEC,IAAI,CAAC,YAAD;AAJyB,KAA3C;AAMA,WAAOhB,MAAP;AACD,GAzCM,CAAP;AA0CD,CA3CM","sourcesContent":["import { TokenResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\n\nexport const postUserSecurityLogin = (username: string, password: string): Promise<ApiResponse<TokenResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/login`, {\n    method: 'POST', headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ username, password })\n  }\n  ).then(async (response) => {\n    // console.log('postUserSecurityLogin response', response)\n    if (response.status === 401) {\n      let text = await response.text()\n      const result: ApiResponse<TokenResponse> = {\n        data: {\n          accessToken: undefined,\n          expiresIn: 0,\n          expiry: undefined,\n          idToken: undefined,\n          scope: undefined,\n          tokenType: undefined,\n          error: text || 'Login unsuccessful.',\n          errorDescription: text,\n          refreshToken: undefined,\n          redirectTo: undefined,\n        },\n        statusCode: response.status,\n        success: false,\n        is_success: false\n      }\n      return result\n    }\n\n    let json = await response.json()\n    // console.log('postUserSecurityLogin json', json)\n    const data: TokenResponse = json.data\n    const result: ApiResponse<TokenResponse> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    }\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}