{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as eventTypes from './eventTypes';\nconst initialState = {\n  list: []\n};\nconst purchaseReducer = createReducer(initialState, {\n  [eventTypes.PAYMENTS_PRODUCTS_RECEIVED]: (state, event) => _objectSpread(_objectSpread({}, state), {}, {\n    list: event.payload.data\n  })\n});\nexport default purchaseReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/payments/products/productsReducer.ts"],"names":["createReducer","eventTypes","initialState","list","purchaseReducer","PAYMENTS_PRODUCTS_RECEIVED","state","event","payload","data"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAAsD,kBAAtD;AAEA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAGA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAApC;AAIA,MAAMC,eAAuC,GAAGJ,aAAa,CAACE,YAAD,EAAe;AAC1E,GAACD,UAAU,CAACI,0BAAZ,GAAyC,CAACC,KAAD,EAAQC,KAAR,qCAA+DD,KAA/D;AAAsEH,IAAAA,IAAI,EAAEI,KAAK,CAACC,OAAN,CAAcC;AAA1F;AADiC,CAAf,CAA7D;AAIA,eAAeL,eAAf","sourcesContent":["import { createReducer, Reducer, PayloadAction } from '@reduxjs/toolkit'\nimport { Product, ProductsState } from './models'\nimport * as eventTypes from './eventTypes'\nimport { ApiResponse } from '../../shared/ApiResponse'\n\nconst initialState: ProductsState = {\n  list: []\n}\n\nconst purchaseReducer: Reducer<ProductsState> = createReducer(initialState, {\n  [eventTypes.PAYMENTS_PRODUCTS_RECEIVED]: (state, event: PayloadAction<ApiResponse<Product[]>>) => ({ ...state, list: event.payload.data }),\n})\n\nexport default purchaseReducer\n"]},"metadata":{},"sourceType":"module"}