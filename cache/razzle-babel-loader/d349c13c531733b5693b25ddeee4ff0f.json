{"ast":null,"code":"import _asyncToGenerator from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/regenerator\";\nimport { baseUrl } from '../../../shared/baseUrl';\nexport var postUserSecurityLogin = function postUserSecurityLogin(username, password) {\n  return fetch(\"\".concat(baseUrl, \"/v1/usersecurity/login\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var text, _result, json, data, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(response.status === 401)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return response.text();\n\n            case 3:\n              text = _context.sent;\n              _result = {\n                data: {\n                  accessToken: undefined,\n                  expiresIn: 0,\n                  expiry: undefined,\n                  idToken: undefined,\n                  scope: undefined,\n                  tokenType: undefined,\n                  error: text || 'Login unsuccessful.',\n                  errorDescription: text,\n                  refreshToken: undefined,\n                  redirectTo: undefined\n                },\n                statusCode: response.status,\n                success: false,\n                is_success: false\n              };\n              return _context.abrupt(\"return\", _result);\n\n            case 6:\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              json = _context.sent;\n              // console.log('postUserSecurityLogin json', json)\n              data = json.data;\n              result = {\n                data: data,\n                statusCode: json.statusCode,\n                success: json.success,\n                is_success: json['is_success']\n              };\n              return _context.abrupt(\"return\", result);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/userSecurity/token/api/postUserSecurityLogin.ts"],"names":["baseUrl","postUserSecurityLogin","username","password","fetch","method","headers","body","JSON","stringify","then","response","status","text","result","data","accessToken","undefined","expiresIn","expiry","idToken","scope","tokenType","error","errorDescription","refreshToken","redirectTo","statusCode","success","is_success","json"],"mappings":";;AACA,SAASA,OAAT,QAAwB,yBAAxB;AAGA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,QAAD,EAAmBC,QAAnB,EAA6E;AAChH,SAAOC,KAAK,WACPJ,OADO,6BAC0B;AACpCK,IAAAA,MAAM,EAAE,MAD4B;AACpBC,IAAAA,OAAO,EAAE;AACvB,sBAAgB;AADO,KADW;AAIpCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAf;AAJ8B,GAD1B,CAAL,CAOLO,IAPK;AAAA,wEAOA,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEDA,QAAQ,CAACC,MAAT,KAAoB,GAFnB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGcD,QAAQ,CAACE,IAAT,EAHd;;AAAA;AAGCA,cAAAA,IAHD;AAIGC,cAAAA,OAJH,GAIwC;AACzCC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,WAAW,EAAEC,SADT;AAEJC,kBAAAA,SAAS,EAAE,CAFP;AAGJC,kBAAAA,MAAM,EAAEF,SAHJ;AAIJG,kBAAAA,OAAO,EAAEH,SAJL;AAKJI,kBAAAA,KAAK,EAAEJ,SALH;AAMJK,kBAAAA,SAAS,EAAEL,SANP;AAOJM,kBAAAA,KAAK,EAAEV,IAAI,IAAI,qBAPX;AAQJW,kBAAAA,gBAAgB,EAAEX,IARd;AASJY,kBAAAA,YAAY,EAAER,SATV;AAUJS,kBAAAA,UAAU,EAAET;AAVR,iBADmC;AAazCU,gBAAAA,UAAU,EAAEhB,QAAQ,CAACC,MAboB;AAczCgB,gBAAAA,OAAO,EAAE,KAdgC;AAezCC,gBAAAA,UAAU,EAAE;AAf6B,eAJxC;AAAA,+CAqBIf,OArBJ;;AAAA;AAAA;AAAA,qBAwBYH,QAAQ,CAACmB,IAAT,EAxBZ;;AAAA;AAwBDA,cAAAA,IAxBC;AAyBL;AACMf,cAAAA,IA1BD,GA0BuBe,IAAI,CAACf,IA1B5B;AA2BCD,cAAAA,MA3BD,GA2BsC;AACzCC,gBAAAA,IAAI,EAAJA,IADyC;AAEzCY,gBAAAA,UAAU,EAAEG,IAAI,CAACH,UAFwB;AAGzCC,gBAAAA,OAAO,EAAEE,IAAI,CAACF,OAH2B;AAIzCC,gBAAAA,UAAU,EAAEC,IAAI,CAAC,YAAD;AAJyB,eA3BtC;AAAA,+CAiCEhB,MAjCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPA;;AAAA;AAAA;AAAA;AAAA,MAAP;AA0CD,CA3CM","sourcesContent":["import { TokenResponse } from '../models'\nimport { baseUrl } from '../../../shared/baseUrl'\nimport { ApiResponse } from '../../../shared/ApiResponse'\n\nexport const postUserSecurityLogin = (username: string, password: string): Promise<ApiResponse<TokenResponse>> => {\n  return fetch(\n    `${baseUrl}/v1/usersecurity/login`, {\n    method: 'POST', headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ username, password })\n  }\n  ).then(async (response) => {\n    // console.log('postUserSecurityLogin response', response)\n    if (response.status === 401) {\n      let text = await response.text()\n      const result: ApiResponse<TokenResponse> = {\n        data: {\n          accessToken: undefined,\n          expiresIn: 0,\n          expiry: undefined,\n          idToken: undefined,\n          scope: undefined,\n          tokenType: undefined,\n          error: text || 'Login unsuccessful.',\n          errorDescription: text,\n          refreshToken: undefined,\n          redirectTo: undefined,\n        },\n        statusCode: response.status,\n        success: false,\n        is_success: false\n      }\n      return result\n    }\n\n    let json = await response.json()\n    // console.log('postUserSecurityLogin json', json)\n    const data: TokenResponse = json.data\n    const result: ApiResponse<TokenResponse> = {\n      data,\n      statusCode: json.statusCode,\n      success: json.success,\n      is_success: json['is_success']\n    }\n    return result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}