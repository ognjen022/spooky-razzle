{"ast":null,"code":"import _asyncToGenerator from \"/Users/ognjen/Desktop/spooky.live-ssr/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/ognjen/Desktop/spooky.live-ssr/src/components/PaymentDetailsForm/PaymentDetailsForm.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport _regeneratorRuntime from \"/Users/ognjen/Desktop/spooky.live-ssr/node_modules/@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './PaymentDetailsForm.module.scss';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { selectError, selectIsSubmitting } from '../../services/payments/paymentDetails/selectors';\nimport { paymentDetailsRequestedEvent } from '../../services/payments/paymentDetails/events'; // import { isNumber } from '../../utils/utils'\n\nvar PaymentDetails = function PaymentDetails() {\n  var dispatch = useDispatch(); // const [changeButton, setChangeButton] = useState(false)\n\n  var _useState = useState(''),\n      cardNumber = _useState[0],\n      setCardNumber = _useState[1];\n\n  var _useState2 = useState(false),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var errorText = useSelector(function (state) {\n    return selectError(state.payments.paymentDetails);\n  });\n  var isSubmitting = useSelector(function (state) {\n    return selectIsSubmitting(state.payments.paymentDetails);\n  });\n  var cardName = useSelector(function (state) {\n    var _state$userSecurity$p;\n\n    return ((_state$userSecurity$p = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p === void 0 ? void 0 : _state$userSecurity$p.name) || '';\n  });\n  var cardAddressLine1 = useSelector(function (state) {\n    var _state$userSecurity$p2;\n\n    return ((_state$userSecurity$p2 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p2 === void 0 ? void 0 : _state$userSecurity$p2.address_line1) || '';\n  });\n  var cardAddressLine2 = useSelector(function (state) {\n    var _state$userSecurity$p3;\n\n    return ((_state$userSecurity$p3 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p3 === void 0 ? void 0 : _state$userSecurity$p3.address_line2) || '';\n  });\n  var cardAddressCity = useSelector(function (state) {\n    var _state$userSecurity$p4;\n\n    return ((_state$userSecurity$p4 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p4 === void 0 ? void 0 : _state$userSecurity$p4.address_city) || '';\n  });\n  var cardPostCode = useSelector(function (state) {\n    var _state$userSecurity$p5;\n\n    return ((_state$userSecurity$p5 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p5 === void 0 ? void 0 : _state$userSecurity$p5.address_zip) || '';\n  });\n  var cardAddressCountry = useSelector(function (state) {\n    var _state$userSecurity$p6;\n\n    return ((_state$userSecurity$p6 = state.userSecurity.profile.cardInfo) === null || _state$userSecurity$p6 === void 0 ? void 0 : _state$userSecurity$p6.address_country) || '';\n  }); // Submit form\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(paymentDetailsRequestedEvent(payload.name, cardNumber.replace(/  /g, ''), //payload.card,\n              payload.ccv, payload.expiryMonth, payload.expiryYear, payload.address1, payload.address2, payload.city, payload.postCode, payload.country));\n\n            case 2:\n              //setChangeButton(true)\n              setSubmitted(true); // clear fields\n\n              setTimeout(function () {//form.reset()\n                //setCardNumber('')\n                //setChangeButton(false)\n              }, 2000);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Initial values form\n\n\n  var initialValues = {\n    name: cardName,\n    address1: cardAddressLine1,\n    address2: cardAddressLine2,\n    city: cardAddressCity,\n    postCode: cardPostCode,\n    country: cardAddressCountry\n  }; // Create form\n\n  var _useForm = useForm({\n    onSubmit: onSubmit,\n    validate: validate,\n    initialValues: initialValues\n  }),\n      form = _useForm.form,\n      handleSubmit = _useForm.handleSubmit,\n      dirtySinceLastSubmit = _useForm.dirtySinceLastSubmit;\n\n  useEffect(function () {\n    setSubmitted(false);\n  }, [dirtySinceLastSubmit]); // Create form fields\n\n  var name = useField('name', form); // const card = useField('card', form)\n\n  var ccv = useField('ccv', form);\n  var expiryMonth = useField('expiryMonth', form);\n  var expiryYear = useField('expiryYear', form);\n  var address1 = useField('address1', form);\n  var address2 = useField('address2', form);\n  var city = useField('city', form);\n  var postcode = useField('postCode', form);\n  var country = useField('country', form);\n\n  var onCardNumberChange = function onCardNumberChange(e) {\n    var value = e.target.value;\n    var valArray = value.split(' ').join('').split('');\n    var valSpace = value.split(\"\"); // to work with backspace\n\n    if (valSpace[valSpace.length - 1] == ' ') {\n      var valSpaceN = valSpace.slice(0, -2);\n      value = valSpaceN.join(\"\");\n      setCardNumber(value);\n      return;\n    }\n\n    if (isNaN(valArray.join(''))) return;\n    if (valArray.length === 17) return;\n\n    if (valArray.length % 4 === 0 && valArray.length <= 15) {\n      setCardNumber(e.target.value + \"  \");\n    } else {\n      setCardNumber(e.target.value);\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles['account__form'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles['account__form-group'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Name on card\"), __jsx(Input, {\n    data: name,\n    label: \"name\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Card Number\"), __jsx(\"input\", {\n    type: \"text\",\n    value: cardNumber,\n    onChange: onCardNumberChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles['account__form-group--inline'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Expiry Month [1-12]\"), __jsx(Input, {\n    data: expiryMonth,\n    label: \"expiryMonth\",\n    type: \"text\",\n    maxLength: 2,\n    onInput: function onInput(e) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Expiry Year [YYYY]\"), __jsx(Input, {\n    data: expiryYear,\n    label: \"expiryYear\",\n    type: \"text\",\n    maxLength: 4,\n    onInput: function onInput(e) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"CCV\"), __jsx(Input, {\n    data: ccv,\n    label: \"ccv\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Address Line 1\"), __jsx(Input, {\n    data: address1,\n    label: \"address1\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Address Line 2\"), __jsx(Input, {\n    data: address2,\n    label: \"address2\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"City\"), __jsx(Input, {\n    data: city,\n    label: \"city\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles['account__form-group--inline'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Postcode\"), __jsx(Input, {\n    data: postcode,\n    label: \"postcode\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Country\"), __jsx(Input, {\n    data: country,\n    label: \"country\",\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: styles['account__form-group-button'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"text-right \".concat(styles['text-right']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'secondary' : 'secondary',\n    isLoading: isSubmitting,\n    color: submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'ghost-green' : 'success',\n    label: submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'Saved' : 'Save',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  })), __jsx(\"p\", {\n    className: styles['account__stripe-info'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"All payments Secured by Stripe\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, errorText && errorText.length > 0 && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, errorText))))));\n};\n\nexport var validate = function validate(values) {\n  var errors = {\n    name: undefined,\n    card: undefined,\n    ccv: undefined,\n    expiryMonth: undefined,\n    expiryYear: undefined,\n    address1: undefined,\n    address2: undefined,\n    city: undefined,\n    postCode: undefined,\n    country: undefined\n  }; // Name validations\n\n  if (values.name && values.name.length === 1 && values.name.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.name = 'Enter your Name as it appears on your card';\n  } // Card number validations\n\n\n  if (values.address1 && values.address1.length === 1 && values.address1.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.card = 'Enter your card number';\n  } // Card CCV number validations\n  // if (values.ccv && values.ccv.toString().length === 1 && values.ccv.toString().length < 3) {\n  // \t// Avoid error to kick in if value length is 0 (For :focus purposes)\n  // \terrors.ccv = 'Enter your card CCV number'\n  // } else if (values.ccv && values.ccv.toString().length < 3) {\n  // \terrors.ccv = 'CCV must have 3 characters'\n  // } \n  // Address1 validations\n\n\n  if (values.address1 && values.address1.length === 1 && values.address1.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.address1 = 'Enter your Address';\n  } // City validations\n\n\n  if (values.city && values.city.length === 1 && values.city.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.address1 = 'Enter your Address';\n  }\n\n  return errors;\n};\nexport default PaymentDetails;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/components/PaymentDetailsForm/PaymentDetailsForm.tsx"],"names":["React","useState","useEffect","useForm","useField","useDispatch","useSelector","styles","Input","Button","selectError","selectIsSubmitting","paymentDetailsRequestedEvent","PaymentDetails","dispatch","cardNumber","setCardNumber","submitted","setSubmitted","errorText","state","payments","paymentDetails","isSubmitting","cardName","userSecurity","profile","cardInfo","name","cardAddressLine1","address_line1","cardAddressLine2","address_line2","cardAddressCity","address_city","cardPostCode","address_zip","cardAddressCountry","address_country","onSubmit","payload","replace","ccv","expiryMonth","expiryYear","address1","address2","city","postCode","country","setTimeout","initialValues","validate","form","handleSubmit","dirtySinceLastSubmit","postcode","onCardNumberChange","e","value","target","valArray","split","join","valSpace","length","valSpaceN","slice","isNaN","values","errors","undefined","card"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport styles from './PaymentDetailsForm.module.scss'\n\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\n\nimport { RootState } from '../../services/RootState'\nimport { selectError, selectIsSubmitting } from '../../services/payments/paymentDetails/selectors'\nimport { paymentDetailsRequestedEvent } from '../../services/payments/paymentDetails/events'\n// import { isNumber } from '../../utils/utils'\n\nexport interface IPaymentDetailsFormValues {\n  name: string | undefined\n  card: string | undefined\n  ccv: string | undefined\n  expiryMonth: string | undefined\n  expiryYear: string | undefined\n  address1: string | undefined\n  address2: string | undefined\n  city: string | undefined\n  postCode: string | undefined\n  country: string | undefined\n}\n\nconst PaymentDetails = () => {\n  let dispatch = useDispatch()\n  // const [changeButton, setChangeButton] = useState(false)\n  const [cardNumber, setCardNumber] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n\n  let errorText = useSelector<RootState, string>(state => selectError(state.payments.paymentDetails))\n  let isSubmitting = useSelector<RootState, boolean>(state => selectIsSubmitting(state.payments.paymentDetails))\n\n\n  let cardName = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.name || '')\n  let cardAddressLine1 = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_line1 || '')\n  let cardAddressLine2 = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_line2 || '')\n  let cardAddressCity = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_city || '')\n  let cardPostCode = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_zip || '')\n  let cardAddressCountry = useSelector<RootState, string>(state => state.userSecurity.profile.cardInfo?.address_country || '')\n\n\n  // Submit form\n  const onSubmit = async (payload: any) => {\n    await dispatch(paymentDetailsRequestedEvent(\n      payload.name,\n      cardNumber.replace(/  /g, ''), //payload.card,\n      payload.ccv,\n      payload.expiryMonth,\n      payload.expiryYear,\n      payload.address1,\n      payload.address2,\n      payload.city,\n      payload.postCode,\n      payload.country\n    ))\n    //setChangeButton(true)\n    setSubmitted(true)\n    // clear fields\n    setTimeout(() => {\n      //form.reset()\n      //setCardNumber('')\n      //setChangeButton(false)\n    }, 2000)\n  }\n\n  // Initial values form\n  let initialValues: Partial<IPaymentDetailsFormValues> = {\n    name: cardName,\n    address1: cardAddressLine1,\n    address2: cardAddressLine2,\n    city: cardAddressCity,\n    postCode: cardPostCode,\n    country: cardAddressCountry\n  }\n\n  // Create form\n  const { form, handleSubmit, dirtySinceLastSubmit } = useForm({ onSubmit, validate, initialValues })\n\n  useEffect(() => {\n    setSubmitted(false)\n  }, [dirtySinceLastSubmit])\n\n  // Create form fields\n  const name = useField('name', form)\n  // const card = useField('card', form)\n  const ccv = useField('ccv', form)\n  const expiryMonth = useField('expiryMonth', form)\n  const expiryYear = useField('expiryYear', form)\n  const address1 = useField('address1', form)\n  const address2 = useField('address2', form)\n  const city = useField('city', form)\n  const postcode = useField('postCode', form)\n  const country = useField('country', form)\n\n  const onCardNumberChange = (e) => {\n    var value = e.target.value;\n    const valArray = value.split(' ').join('').split('');\n    var valSpace = value.split(\"\")\n\n    // to work with backspace\n    if (valSpace[valSpace.length - 1] == ' ') {\n      var valSpaceN = valSpace.slice(0, -2)\n      value = valSpaceN.join(\"\")\n      setCardNumber(value)\n      return;\n    }\n\n    if (isNaN(valArray.join('')))\n      return;\n    if (valArray.length === 17)\n      return\n    if (valArray.length % 4 === 0 && valArray.length <= 15) {\n      setCardNumber(e.target.value + \"  \")\n    } else {\n      setCardNumber(e.target.value)\n    }\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles['account__form']}>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>Name on card</label>\n            <Input data={name} label=\"name\" type=\"text\" required />\n          </p>\n          <p>\n            <label>Card Number</label>\n            {/* <Input data={card} label=\"card\" type=\"text\" required /> */}\n            <input type=\"text\" value={cardNumber} onChange={onCardNumberChange} required />\n          </p>\n          <div className={styles['account__form-group--inline']}>\n            <p>\n              <label>Expiry Month [1-12]</label>\n              <Input\n                data={expiryMonth}\n                label=\"expiryMonth\"\n                type=\"text\"\n                maxLength={2}\n                onInput={e => { e.target.value = e.target.value.replace(/[^0-9]/g, '') }}\n                required\n              />\n            </p>\n\n            <p>\n              <label>Expiry Year [YYYY]</label>\n              <Input\n                data={expiryYear}\n                label=\"expiryYear\"\n                type=\"text\"\n                maxLength={4}\n                onInput={e => { e.target.value = e.target.value.replace(/[^0-9]/g, '') }}\n                required\n              />\n            </p>\n          </div>\n\n          <p>\n            <label>CCV</label>\n            <Input data={ccv} label=\"ccv\" type=\"text\" required />\n          </p>\n        </div>\n        <div className={styles['account__form-group']}>\n          <p>\n            <label>Address Line 1</label>\n            <Input data={address1} label=\"address1\" type=\"text\" required />\n          </p>\n          <p>\n            <label>Address Line 2</label>\n            <Input data={address2} label=\"address2\" type=\"text\" />\n          </p>\n\n          <p>\n            <label>City</label>\n            <Input data={city} label=\"city\" type=\"text\" required />\n          </p>\n\n          <div className={styles['account__form-group--inline']}>\n            <p>\n              <label>Postcode</label>\n              <Input data={postcode} label=\"postcode\" type=\"text\" required />\n            </p>\n\n            <p>\n              <label>Country</label>\n              <Input data={country} label=\"country\" type=\"text\" required />\n            </p>\n          </div>\n\n          <div className={styles['account__form-group-button']}>\n            <p className={`text-right ${styles['text-right']}`}>\n              <Button\n                type=\"submit\"\n                variant={submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'secondary' : 'secondary'}\n                isLoading={isSubmitting}\n                color={submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'ghost-green' : 'success'}\n                label={submitted && !isSubmitting && !errorText && !dirtySinceLastSubmit ? 'Saved' : 'Save'}\n              />\n            </p>\n            <p className={styles['account__stripe-info']}>All payments Secured by Stripe</p>\n            <p>\n              {\n                errorText && errorText.length > 0 &&\n                <span>\n                  {errorText}\n                </span>\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport const validate = (values: IPaymentDetailsFormValues) => {\n  const errors: IPaymentDetailsFormValues = {\n    name: undefined,\n    card: undefined,\n    ccv: undefined,\n    expiryMonth: undefined,\n    expiryYear: undefined,\n    address1: undefined,\n    address2: undefined,\n    city: undefined,\n    postCode: undefined,\n    country: undefined\n  }\n\n  // Name validations\n  if (values.name && values.name.length === 1 && values.name.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.name = 'Enter your Name as it appears on your card'\n  }\n\n  // Card number validations\n  if (values.address1 && values.address1.length === 1 && values.address1.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.card = 'Enter your card number'\n  }\n\n  // Card CCV number validations\n  // if (values.ccv && values.ccv.toString().length === 1 && values.ccv.toString().length < 3) {\n  // \t// Avoid error to kick in if value length is 0 (For :focus purposes)\n  // \terrors.ccv = 'Enter your card CCV number'\n  // } else if (values.ccv && values.ccv.toString().length < 3) {\n  // \terrors.ccv = 'CCV must have 3 characters'\n  // } \n\n  // Address1 validations\n  if (values.address1 && values.address1.length === 1 && values.address1.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.address1 = 'Enter your Address'\n  }\n\n  // City validations\n  if (values.city && values.city.length === 1 && values.city.length < 3) {\n    // Avoid error to kick in if value length is 0 (For :focus purposes)\n    errors.address1 = 'Enter your Address'\n  }\n\n  return errors\n}\n\nexport default PaymentDetails\n"]},"metadata":{},"sourceType":"module"}