{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { from, of } from 'rxjs';\nimport { exhaustMap, filter, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { tokenRequestedEvent, tokenReceivedEvent, tokenErroredEvent } from '../events';\nimport { postUserSecurityLogin } from '../api/postUserSecurityLogin';\n\nconst tokenRequestedEpic = (action$, store) => action$.pipe(filter(isActionOf(tokenRequestedEvent)), exhaustMap(event => from(postUserSecurityLogin(event.payload.username, event.payload.password)).pipe(exhaustMap(apiResponse => of(apiResponse.statusCode === 200 ? tokenReceivedEvent(_objectSpread(_objectSpread({}, apiResponse.data), {}, {\n  redirectTo: event.payload.redirectTo\n})) : tokenErroredEvent(apiResponse.data))), catchError(error => {\n  // console.log('tokenRequestedEpic error', error)\n  return of(tokenErroredEvent({\n    accessToken: undefined,\n    expiresIn: 0,\n    expiry: undefined,\n    idToken: undefined,\n    scope: undefined,\n    tokenType: undefined,\n    error: 'Network error',\n    errorDescription: 'Check your internet connection',\n    refreshToken: undefined,\n    redirectTo: undefined\n  }));\n}))));\n\nexport default [tokenRequestedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/services/userSecurity/token/epics/tokenRequestedEpic.ts"],"names":["from","of","exhaustMap","filter","catchError","isActionOf","tokenRequestedEvent","tokenReceivedEvent","tokenErroredEvent","postUserSecurityLogin","tokenRequestedEpic","action$","store","pipe","event","payload","username","password","apiResponse","statusCode","data","redirectTo","error","accessToken","undefined","expiresIn","expiry","idToken","scope","tokenType","errorDescription","refreshToken"],"mappings":";;;;;;AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,iBAAnE,QAA4F,WAA5F;AAEA,SAASC,qBAAT,QAAsC,8BAAtC;;AAEA,MAAMC,kBAAqE,GAAG,CAACC,OAAD,EAAUC,KAAV,KAC5ED,OAAO,CAACE,IAAR,CACEV,MAAM,CAACE,UAAU,CAACC,mBAAD,CAAX,CADR,EAEEJ,UAAU,CAACY,KAAK,IACdd,IAAI,CAACS,qBAAqB,CAACK,KAAK,CAACC,OAAN,CAAcC,QAAf,EAAyBF,KAAK,CAACC,OAAN,CAAcE,QAAvC,CAAtB,CAAJ,CAA4EJ,IAA5E,CACEX,UAAU,CAACgB,WAAW,IACpBjB,EAAE,CAACiB,WAAW,CAACC,UAAZ,KAA2B,GAA3B,GAAiCZ,kBAAkB,iCAAMW,WAAW,CAACE,IAAlB;AAAwBC,EAAAA,UAAU,EAAEP,KAAK,CAACC,OAAN,CAAcM;AAAlD,GAAnD,GAAqHb,iBAAiB,CAACU,WAAW,CAACE,IAAb,CAAvI,CADM,CADZ,EAIEhB,UAAU,CAACkB,KAAK,IAAI;AAClB;AACA,SAAOrB,EAAE,CAACO,iBAAiB,CAAC;AAC1Be,IAAAA,WAAW,EAAEC,SADa;AAE1BC,IAAAA,SAAS,EAAE,CAFe;AAG1BC,IAAAA,MAAM,EAAEF,SAHkB;AAI1BG,IAAAA,OAAO,EAAEH,SAJiB;AAK1BI,IAAAA,KAAK,EAAEJ,SALmB;AAM1BK,IAAAA,SAAS,EAAEL,SANe;AAO1BF,IAAAA,KAAK,EAAE,eAPmB;AAQ1BQ,IAAAA,gBAAgB,EAAE,gCARQ;AAS1BC,IAAAA,YAAY,EAAEP,SATY;AAU1BH,IAAAA,UAAU,EAAEG;AAVc,GAAD,CAAlB,CAAT;AAYD,CAdS,CAJZ,CADQ,CAFZ,CADF;;AA4BA,eAAe,CAACd,kBAAD,CAAf","sourcesContent":["import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { exhaustMap, filter, catchError } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { TokenEventTypes, tokenRequestedEvent, tokenReceivedEvent, tokenErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { postUserSecurityLogin } from '../api/postUserSecurityLogin'\n\nconst tokenRequestedEpic: Epic<TokenEventTypes, TokenEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(tokenRequestedEvent)),\n    exhaustMap(event =>\n      from(postUserSecurityLogin(event.payload.username, event.payload.password)).pipe(\n        exhaustMap(apiResponse =>\n          of(apiResponse.statusCode === 200 ? tokenReceivedEvent({ ...apiResponse.data, redirectTo: event.payload.redirectTo }) : tokenErroredEvent(apiResponse.data))\n        ),\n        catchError(error => {\n          // console.log('tokenRequestedEpic error', error)\n          return of(tokenErroredEvent({\n            accessToken: undefined,\n            expiresIn: 0,\n            expiry: undefined,\n            idToken: undefined,\n            scope: undefined,\n            tokenType: undefined,\n            error: 'Network error',\n            errorDescription: 'Check your internet connection',\n            refreshToken: undefined,\n            redirectTo: undefined,\n          }))\n        }\n        )\n      )\n    )\n  )\n\nexport default [tokenRequestedEpic]\n"]},"metadata":{},"sourceType":"module"}