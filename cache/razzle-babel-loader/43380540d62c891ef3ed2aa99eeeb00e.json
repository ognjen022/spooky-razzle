{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport * as eventTypes from './eventTypes';\nexport const passwordUpdateRequestedEvent = createAction(eventTypes.USERSECURITY_PASSWORD_CHANGE_REQUESTED, resolve => (password, confirmPassword) => resolve({\n  password,\n  confirmPassword\n}));\nexport const passwordReceivedEvent = createAction(eventTypes.USERSECURITY_PASSWORD_CHANGE_RECEIVED, resolve => data => resolve(data));\nexport const passwordErroredEvent = createAction(eventTypes.USERSECURITY_PASSWORD_CHANGE_ERRORED, resolve => error => resolve(error));","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/password/events.ts"],"names":["createAction","eventTypes","passwordUpdateRequestedEvent","USERSECURITY_PASSWORD_CHANGE_REQUESTED","resolve","password","confirmPassword","passwordReceivedEvent","USERSECURITY_PASSWORD_CHANGE_RECEIVED","data","passwordErroredEvent","USERSECURITY_PASSWORD_CHANGE_ERRORED","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAKA,OAAO,MAAMC,4BAA4B,GAAGF,YAAY,CACtDC,UAAU,CAACE,sCAD2C,EAErDC,OAAD,IAAa,CAACC,QAAD,EAAmBC,eAAnB,KAAgDF,OAAO,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,CAFd,CAAjD;AAKP,OAAO,MAAMC,qBAAqB,GAAGP,YAAY,CAACC,UAAU,CAACO,qCAAZ,EAAoDJ,OAAD,IAAcK,IAAD,IAC/GL,OAAO,CAACK,IAAD,CADwC,CAA1C;AAIP,OAAO,MAAMC,oBAAoB,GAAGV,YAAY,CAACC,UAAU,CAACU,oCAAZ,EAAmDP,OAAD,IAAcQ,KAAD,IAAkCR,OAAO,CAACQ,KAAD,CAAxG,CAAzC","sourcesContent":["import { createAction } from 'typesafe-actions'\nimport * as eventTypes from './eventTypes'\nimport { PasswordResetResponse } from './models'\nimport { ActionType } from 'typesafe-actions'\nimport { networkErroredEvent } from '../../shared/networkErroredEvent'\n\nexport const passwordUpdateRequestedEvent = createAction(\n  eventTypes.USERSECURITY_PASSWORD_CHANGE_REQUESTED,\n  (resolve) => (password: string, confirmPassword: string ) => resolve({ password, confirmPassword })\n)\n\nexport const passwordReceivedEvent = createAction(eventTypes.USERSECURITY_PASSWORD_CHANGE_RECEIVED, (resolve) => (data: PasswordResetResponse) =>\n  resolve(data)\n)\n\nexport const passwordErroredEvent = createAction(eventTypes.USERSECURITY_PASSWORD_CHANGE_ERRORED, (resolve) => (error: PasswordResetResponse) => resolve(error))\n\nexport type PasswordEventTypes = ActionType<\n  typeof passwordUpdateRequestedEvent | typeof passwordReceivedEvent | typeof passwordErroredEvent | typeof networkErroredEvent\n>\n"]},"metadata":{},"sourceType":"module"}