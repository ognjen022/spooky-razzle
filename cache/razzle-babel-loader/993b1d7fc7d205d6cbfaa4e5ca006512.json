{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as eventTypes from './eventTypes';\nconst initialState = {\n  contactUsData: {\n    firstName: undefined,\n    email: undefined,\n    lastName: undefined,\n    message: undefined\n  },\n  error: undefined,\n  errorDescription: undefined,\n  isSending: false\n};\nconst contactUsReducer = createReducer(initialState, {\n  [eventTypes.CONTACT_SEND_REQUESTED]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    isSending: true\n  }),\n  [eventTypes.CONTACT_SEND_RECEIVED]: (state, action) => _objectSpread(_objectSpread({}, action.payload), {}, {\n    isSending: false\n  }),\n  [eventTypes.CONTACT_SEND_ERRORED]: (state, action) => _objectSpread(_objectSpread({}, action.payload), {}, {\n    isSending: false\n  })\n});\nexport default contactUsReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/contact/contactReducers.ts"],"names":["createReducer","eventTypes","initialState","contactUsData","firstName","undefined","email","lastName","message","error","errorDescription","isSending","contactUsReducer","CONTACT_SEND_REQUESTED","state","CONTACT_SEND_RECEIVED","action","payload","CONTACT_SEND_ERRORED"],"mappings":";;;;;;AAAA,SAAkBA,aAAlB,QAAsD,kBAAtD;AAEA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAGA,MAAMC,YAA6B,GAAG;AAClCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,SAAS,EAAEC,SADA;AAEXC,IAAAA,KAAK,EAAGD,SAFG;AAGXE,IAAAA,QAAQ,EAAGF,SAHA;AAIXG,IAAAA,OAAO,EAAGH;AAJC,GADmB;AAOlCI,EAAAA,KAAK,EAAEJ,SAP2B;AAQlCK,EAAAA,gBAAgB,EAAEL,SARgB;AASlCM,EAAAA,SAAS,EAAE;AATuB,CAAtC;AAYE,MAAMC,gBAA0C,GAAGZ,aAAa,CAACE,YAAD,EAAe;AAC7E,GAACD,UAAU,CAACY,sBAAZ,GAAsCC,KAAD,oCAAiBZ,YAAjB;AAA+BS,IAAAA,SAAS,EAAE;AAA1C,IADwC;AAE7E,GAACV,UAAU,CAACc,qBAAZ,GAAoC,CAACD,KAAD,EAAQE,MAAR,qCAA4DA,MAAM,CAACC,OAAnE;AAA4EN,IAAAA,SAAS,EAAE;AAAvF,IAFyC;AAG7E,GAACV,UAAU,CAACiB,oBAAZ,GAAmC,CAACJ,KAAD,EAAQE,MAAR,qCAA4DA,MAAM,CAACC,OAAnE;AAA4EN,IAAAA,SAAS,EAAE;AAAvF;AAH0C,CAAf,CAAhE;AAMA,eAAeC,gBAAf","sourcesContent":["import { Reducer, createReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { IContactUsState, IContactUsResponse } from './models';\nimport * as eventTypes from './eventTypes'\n\n\nconst initialState: IContactUsState = {\n    contactUsData: {\n        firstName: undefined,\n        email : undefined,\n        lastName : undefined,\n        message : undefined\n    },\n    error: undefined,\n    errorDescription: undefined,\n    isSending: false\n}\n  \n  const contactUsReducer: Reducer<IContactUsState> = createReducer(initialState, {\n    [eventTypes.CONTACT_SEND_REQUESTED]: (state) => ({ ...initialState, isSending: true }),\n    [eventTypes.CONTACT_SEND_RECEIVED]: (state, action: PayloadAction<IContactUsResponse>) => ({ ...action.payload, isSending: false }),\n    [eventTypes.CONTACT_SEND_ERRORED]: (state, action: PayloadAction<IContactUsResponse>) => ({ ...action.payload, isSending: false }),\n  })\n  \n  export default contactUsReducer"]},"metadata":{},"sourceType":"module"}