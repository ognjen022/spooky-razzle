{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { filter, mergeMap, tap } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { profileReceivedEvent } from '../events';\n\nvar profileReceivedEpic = function profileReceivedEpic(action$, store) {\n  return action$.pipe(filter(isActionOf(profileReceivedEvent)), tap(function (action) {\n    if (window.Intercom) {\n      var _action$payload$metad, _action$payload$metad2;\n\n      window.Intercom('update', {\n        name: \"\".concat((_action$payload$metad = action.payload.metadata) === null || _action$payload$metad === void 0 ? void 0 : _action$payload$metad.FirstName, \" \").concat((_action$payload$metad2 = action.payload.metadata) === null || _action$payload$metad2 === void 0 ? void 0 : _action$payload$metad2.LastName),\n        email: \"\".concat(action.payload.email)\n      });\n    }\n  }), mergeMap(function (event) {\n    return EMPTY;\n  }));\n};\n\nexport default [profileReceivedEpic];","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/services/userSecurity/profile/epics/profileReceivedEpic.ts"],"names":["EMPTY","filter","mergeMap","tap","isActionOf","profileReceivedEvent","profileReceivedEpic","action$","store","pipe","action","window","Intercom","name","payload","metadata","FirstName","LastName","email","event"],"mappings":"AAEA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAAqBC,MAArB,EAAyCC,QAAzC,EAAmDC,GAAnD,QAA8D,gBAA9D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA4BC,oBAA5B,QAA6E,WAA7E;;AAIA,IAAMC,mBAA0E,GAAG,SAA7EA,mBAA6E,CAACC,OAAD,EAAUC,KAAV;AAAA,SACjFD,OAAO,CAACE,IAAR,CACER,MAAM,CAACG,UAAU,CAACC,oBAAD,CAAX,CADR,EAEEF,GAAG,CAAC,UAAAO,MAAM,EAAI;AACZ,QAAKC,MAAD,CAAgBC,QAApB,EAA8B;AAAA;;AAC3BD,MAAAA,MAAD,CAAgBC,QAAhB,CAAyB,QAAzB,EAAmC;AAC/BC,QAAAA,IAAI,qCAAKH,MAAM,CAACI,OAAP,CAAeC,QAApB,0DAAK,sBAAyBC,SAA9B,wCAA2CN,MAAM,CAACI,OAAP,CAAeC,QAA1D,2DAA2C,uBAAyBE,QAApE,CAD2B;AAE/BC,QAAAA,KAAK,YAAKR,MAAM,CAACI,OAAP,CAAeI,KAApB;AAF0B,OAAnC;AAID;AACF,GAPE,CAFL,EAUEhB,QAAQ,CAAC,UAACiB,KAAD;AAAA,WAAgBnB,KAAhB;AAAA,GAAD,CAVV,CADiF;AAAA,CAAnF;;AAcA,eAAe,CAACM,mBAAD,CAAf","sourcesContent":["\nimport { Epic } from 'redux-observable'\nimport { EMPTY } from 'rxjs'\nimport { exhaustMap, filter, catchError, mergeMap, tap } from 'rxjs/operators'\nimport { isActionOf } from 'typesafe-actions'\nimport { ProfileEventTypes, profileReceivedEvent, profileErroredEvent } from '../events'\nimport { RootState } from '../../../RootState'\nimport { getProfile } from '../api/getProfile'\n\nconst profileReceivedEpic: Epic<ProfileEventTypes, ProfileEventTypes, RootState> = (action$, store) =>\n  action$.pipe(\n    filter(isActionOf(profileReceivedEvent)),\n    tap(action => {\n      if ((window as any).Intercom) {\n        (window as any).Intercom('update', {\n            name: `${action.payload.metadata?.FirstName} ${action.payload.metadata?.LastName}`,\n            email: `${action.payload.email}`\n        });\n      }\n    }),\n    mergeMap((event: any) => EMPTY)\n  )\n\nexport default [profileReceivedEpic]\n"]},"metadata":{},"sourceType":"module"}