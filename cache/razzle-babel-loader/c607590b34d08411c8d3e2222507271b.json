{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '../Button/Button';\nimport { VideoStreamStatus } from '../../services/content/tags/models';\nimport { selectVideoStreamStatus } from '../../services/content/tags/selectors';\nimport { showPurchaseModalToggledEvent } from '../../services/payments/purchase/events';\nimport { selectHasProduct } from '../../services/payments/subscriptions/selectors';\nimport { selectGamePassPriceFormatted } from '../../services/payments/products/selectors';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport { accountToggleLoginEvent } from '../../services/userSecurity/accountDetails/events';\n\nvar PurchaseButton = function PurchaseButton(props) {\n  var _props$mainTag$pricin;\n\n  var labelStyle = {\n    width: '100%'\n  };\n  var seasonPassPrice = props.mainTag ? \"$\".concat((((_props$mainTag$pricin = props.mainTag.pricing) !== null && _props$mainTag$pricin !== void 0 ? _props$mainTag$pricin : 2995) / 100).toString()) : '$29.95';\n  var isLoggedIn = useSelector(function (state) {\n    return selectIsLoggedIn(state.userSecurity.token);\n  });\n  var gamePassPrice = useSelector(function (state) {\n    return selectGamePassPriceFormatted(state.payments.products, state.configuration);\n  });\n  var stream = props.stream,\n      mainTag = props.mainTag;\n  var dispatch = useDispatch();\n  var streamStatus = useSelector(function (state) {\n    return selectVideoStreamStatus(state, stream);\n  });\n  var hasProduct = useSelector(function (state) {\n    return selectHasProduct(state.payments.subscriptions, (mainTag === null || mainTag === void 0 ? void 0 : mainTag.stripeProductId) || '', state.configuration);\n  });\n\n  var renderButtons = function renderButtons() {\n    return __jsx(React.Fragment, null, __jsx(\"p\", {\n      style: labelStyle\n    }, \"You can unlock this stream by purchasing it as one-off, or by subscribing to our monthly watch it all plan, or through it's tournament page.\"), __jsx(\"p\", {\n      style: {\n        width: '100%',\n        justifyContent: (mainTag === null || mainTag === void 0 ? void 0 : mainTag.stripeProductId) ? '' : 'flex-end'\n      }\n    }, ((mainTag === null || mainTag === void 0 ? void 0 : mainTag.stripeProductId) || stream) && __jsx(Button, {\n      onClick: function onClick() {\n        return handleClick(mainTag === null || mainTag === void 0 ? void 0 : mainTag.stripeProductId, (mainTag === null || mainTag === void 0 ? void 0 : mainTag.id) || undefined, stream === null || stream === void 0 ? void 0 : stream.eventId);\n      },\n      type: \"submit\",\n      variant: \"secondary\",\n      color: \"ghost-green\",\n      label: \"Purchase for \".concat(mainTag ? seasonPassPrice : gamePassPrice)\n    }), __jsx(Button, {\n      style: {\n        flex: (mainTag === null || mainTag === void 0 ? void 0 : mainTag.stripeProductId) ? '1' : '.4'\n      },\n      onClick: function onClick() {\n        return handleClick(undefined, undefined, undefined);\n      },\n      type: \"submit\",\n      variant: \"secondary\",\n      color: \"success\",\n      label: \"Subscribe to watch it all\"\n    })));\n  };\n\n  var handleClick = function handleClick(product, tag, eventId) {\n    if (!isLoggedIn) {\n      dispatch(accountToggleLoginEvent(function () {\n        return showPurchaseModalToggledEvent(product, tag, eventId);\n      }));\n    } else {\n      dispatch(showPurchaseModalToggledEvent(product, tag, eventId));\n    }\n  };\n\n  if (streamStatus === VideoStreamStatus.FreeNotLoggedIn) return __jsx(React.Fragment, null);\n  if (streamStatus === VideoStreamStatus.Free || hasProduct || streamStatus === VideoStreamStatus.Purchased) return __jsx(React.Fragment, null);\n\n  if (!hasProduct || streamStatus === VideoStreamStatus.NotPurchased || streamStatus === VideoStreamStatus.NotPurchasedNotLoggedIn) {\n    if (props.classNames) return __jsx(\"div\", {\n      className: props.classNames\n    }, renderButtons());\n    return renderButtons();\n  }\n\n  return __jsx(React.Fragment, null);\n};\n\nexport default PurchaseButton;","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky.live-ssr/src/components/PurchaseButton/PurchaseButton.tsx"],"names":["React","useDispatch","useSelector","Button","VideoStreamStatus","selectVideoStreamStatus","showPurchaseModalToggledEvent","selectHasProduct","selectGamePassPriceFormatted","selectIsLoggedIn","accountToggleLoginEvent","PurchaseButton","props","labelStyle","width","seasonPassPrice","mainTag","pricing","toString","isLoggedIn","state","userSecurity","token","gamePassPrice","payments","products","configuration","stream","dispatch","streamStatus","hasProduct","subscriptions","stripeProductId","renderButtons","justifyContent","handleClick","id","undefined","eventId","flex","product","tag","FreeNotLoggedIn","Free","Purchased","NotPurchased","NotPurchasedNotLoggedIn","classNames"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '../Button/Button'\nimport { IStream, ITag, VideoStreamStatus } from '../../services/content/tags/models'\nimport { RootState } from '../../services/RootState';\nimport { selectVideoStreamStatus } from '../../services/content/tags/selectors'\nimport { showPurchaseModalToggledEvent } from '../../services/payments/purchase/events';\nimport { selectHasProduct } from '../../services/payments/subscriptions/selectors';\nimport { selectGamePassPriceFormatted, selectSeasonPassPriceFormatted } from '../../services/payments/products/selectors';\nimport { selectIsLoggedIn } from '../../services/userSecurity/token/selectors';\nimport { accountToggleLoginEvent } from '../../services/userSecurity/accountDetails/events';\n\ninterface IPurchaseButtonProps {\n  stream: IStream | undefined\n  mainTag: ITag | undefined,\n  classNames?: string | undefined\n}\n\nconst PurchaseButton: React.FC<IPurchaseButtonProps> = (props: IPurchaseButtonProps) => {\n\n  const labelStyle = {\n    width: '100%',\n  };\n\n  const seasonPassPrice = props.mainTag ? \n    `$${((props.mainTag.pricing ?? 2995) / 100).toString()}` : '$29.95';\n  \n  const isLoggedIn = useSelector<RootState, boolean>(state => selectIsLoggedIn(state.userSecurity.token))\n\n  const gamePassPrice = useSelector<RootState, string>(state => selectGamePassPriceFormatted(state.payments.products, state.configuration));\n  const { stream, mainTag } = props\n  const dispatch = useDispatch()\n  const streamStatus = useSelector<RootState, VideoStreamStatus>(state => selectVideoStreamStatus(state, stream))\n  const hasProduct = useSelector<RootState, boolean>(state => selectHasProduct(state.payments.subscriptions, mainTag?.stripeProductId || '', state.configuration))\n\n  const renderButtons = () => {\n    return (\n      <>\n        <p style={labelStyle}>\n          You can unlock this stream by purchasing it as one-off, or by subscribing to our monthly watch it all plan, or through it's tournament page.\n        </p>\n        <p style={{width: '100%', justifyContent: mainTag?.stripeProductId ? '' : 'flex-end'}}>\n          {\n            (mainTag?.stripeProductId || stream) &&\n            <Button\n              onClick={() => handleClick(mainTag?.stripeProductId, mainTag?.id || undefined, stream?.eventId)}\n              type=\"submit\"\n              variant=\"secondary\"\n              color=\"ghost-green\"\n              label={`Purchase for ${mainTag ? seasonPassPrice : gamePassPrice}`}\n            />\n          }\n          <Button\n            style={{flex: mainTag?.stripeProductId ?  '1' : '.4'}}\n            onClick={() => handleClick(undefined, undefined, undefined)}\n            type=\"submit\"\n            variant=\"secondary\"\n            color=\"success\"\n            label=\"Subscribe to watch it all\"\n          />\n        </p>\n      </>\n    )\n  }\n  const handleClick = (product, tag, eventId) => {\n    if (!isLoggedIn) {\n      dispatch(accountToggleLoginEvent(() => showPurchaseModalToggledEvent(product, tag, eventId)));\n    }\n    else {\n      dispatch(showPurchaseModalToggledEvent(product, tag, eventId));\n    }\n  }\n  \n  if (streamStatus === VideoStreamStatus.FreeNotLoggedIn)\n    return (\n      <>\n       \n      </>\n    )\n\n  if (streamStatus === VideoStreamStatus.Free || (hasProduct || streamStatus === VideoStreamStatus.Purchased))\n    return (\n      <>\n      </>\n    )\n\n  \n  if (!hasProduct || streamStatus === VideoStreamStatus.NotPurchased || streamStatus === VideoStreamStatus.NotPurchasedNotLoggedIn) {\n    \n    if (props.classNames) \n      return (\n        <div className={props.classNames}>\n          {renderButtons()}\n        </div>\n      )\n    \n    return (\n      renderButtons()\n    )\n  }\n  return <></>\n}\n\nexport default PurchaseButton"]},"metadata":{},"sourceType":"module"}