{"ast":null,"code":"/* eslint-disable */\n\n/**\n * Regx for Email\n */\nexport var regexEmail = /\\S+@\\S+\\.\\S+/;\n/**\n * Regx for Strong Password\n */\n//https://dzone.com/articles/use-regex-test-password\n\nexport var regexStrongPassword = /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n/* eslint-enable */\n\n/* get initials of teams for icons if no crest available */\n\nexport var getInitials = function getInitials(name) {\n  var words = name.split(' ');\n  var initials = words[0].substring(0, 1).toUpperCase();\n  if (words.length > 1) initials += words[words.length - 1].substring(0, 1).toUpperCase();\n  return initials;\n};\n/* checks if value is a number */\n\nexport var isNumber = function isNumber(value) {\n  return /^\\d+$/.test(value);\n};\nexport var getStyles = function getStyles(value, classList) {\n  var output = '';\n  classList.forEach(function (key) {\n    output += \"\".concat(value[key], \" \");\n  });\n  return output;\n};\nexport var isMobile = function isMobile() {\n  var toMatch = [/Android/i, /webOS/i, /iPhone/i, /iPad/i, /iPod/i, /BlackBerry/i, /Windows Phone/i];\n  return toMatch.some(function (item) {\n    return navigator.userAgent.match(item);\n  });\n};\nexport var isIos = function isIos() {\n  var toMatch = [/iPhone/i];\n\n  if (toMatch.some(function (item) {\n    return navigator.userAgent.match(item);\n  })) {\n    return true;\n  }\n\n  return false;\n};\nexport var truncateString = function truncateString(value, len) {\n  if (value && value.length > len) {\n    return \"\".concat(value.substring(0, len - 1), \"...\");\n  }\n\n  return value;\n};","map":{"version":3,"sources":["/Users/ognjen/Desktop/spooky-live-ssr/ui/src/utils/utils.ts"],"names":["regexEmail","regexStrongPassword","getInitials","name","words","split","initials","substring","toUpperCase","length","isNumber","value","test","getStyles","classList","output","forEach","key","isMobile","toMatch","some","item","navigator","userAgent","match","isIos","truncateString","len"],"mappings":"AAAA;;AAIA;AACA;AACA;AACA,OAAO,IAAMA,UAAU,GAAG,cAAnB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAMC,mBAAmB,GAAG,qDAA5B;AAEP;;AAGA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,MAAIC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAZ;AACA,MAAIC,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,WAAzB,EAAf;AAEA,MAAIJ,KAAK,CAACK,MAAN,GAAe,CAAnB,EACEH,QAAQ,IAAIF,KAAK,CAACA,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAL,CAAwBF,SAAxB,CAAkC,CAAlC,EAAqC,CAArC,EAAwCC,WAAxC,EAAZ;AAEF,SAAOF,QAAP;AACD,CARM;AAUP;;AACA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAW,QAAQC,IAAR,CAAaD,KAAb,CAAX;AAAA,CAAjB;AAEP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD,EAAmCG,SAAnC,EAAmE;AAC1F,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,GAAG,EAAI;AACvBF,IAAAA,MAAM,cAAOJ,KAAK,CAACM,GAAD,CAAZ,MAAN;AACD,GAFD;AAGA,SAAOF,MAAP;AACD,CANM;AASP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAe;AACrC,MAAMC,OAAO,GAAG,CACd,UADc,EAEd,QAFc,EAGd,SAHc,EAId,OAJc,EAKd,OALc,EAMd,aANc,EAOd,gBAPc,CAAhB;AASA,SAAOA,OAAO,CAACC,IAAR,CAAa,UAAAC,IAAI;AAAA,WAAIC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0BH,IAA1B,CAAJ;AAAA,GAAjB,CAAP;AACD,CAXM;AAaP,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAe;AAClC,MAAMN,OAAO,GAAG,CACd,SADc,CAAhB;;AAGA,MAAIA,OAAO,CAACC,IAAR,CAAa,UAACC,IAAD;AAAA,WAAUC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0BH,IAA1B,CAAV;AAAA,GAAb,CAAJ,EAA6D;AAC3D,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CARM;AAUP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACf,KAAD,EAAgBgB,GAAhB,EAAwC;AACpE,MAAIhB,KAAK,IAAIA,KAAK,CAACF,MAAN,GAAekB,GAA5B,EAAiC;AAC/B,qBAAUhB,KAAK,CAACJ,SAAN,CAAgB,CAAhB,EAAmBoB,GAAG,GAAG,CAAzB,CAAV;AACD;;AAED,SAAOhB,KAAP;AACD,CANM","sourcesContent":["/* eslint-disable */\n\nimport { truncate } from \"fs\";\n\n/**\n * Regx for Email\n */\nexport const regexEmail = /\\S+@\\S+\\.\\S+/\n\n/**\n * Regx for Strong Password\n */\n//https://dzone.com/articles/use-regex-test-password\nexport const regexStrongPassword = /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n\n/* eslint-enable */\n\n\n/* get initials of teams for icons if no crest available */\nexport const getInitials = (name) => {\n  let words = name.split(' ');\n  let initials = words[0].substring(0, 1).toUpperCase();\n\n  if (words.length > 1)\n    initials += words[words.length - 1].substring(0, 1).toUpperCase();\n\n  return initials;\n};\n\n/* checks if value is a number */\nexport const isNumber = (value) => /^\\d+$/.test(value)\n\nexport const getStyles = (value: { [key: string]: string }, classList: string[]): string => {\n  let output = '';\n  classList.forEach(key => {\n    output += `${value[key]} `;\n  });\n  return output;\n}\n\n\nexport const isMobile = (): boolean => {\n  const toMatch = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i\n  ];\n  return toMatch.some(item => navigator.userAgent.match(item));\n}\n\nexport const isIos = (): boolean => {\n  const toMatch = [\n    /iPhone/i\n  ];\n  if (toMatch.some((item) => navigator.userAgent.match(item))) {\n    return true\n  }\n  return false\n}\n\nexport const truncateString = (value: string, len: number): string => {\n  if (value && value.length > len) {\n    return `${value.substring(0, len - 1)}...`\n  }\n\n  return value;\n}"]},"metadata":{},"sourceType":"module"}