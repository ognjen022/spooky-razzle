{"ast":null,"code":"import _defineProperty from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ognjen/Desktop/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _createReducer;\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as eventTypes from './eventTypes';\nvar initialState = {\n  isLoading: true,\n  stream: undefined,\n  token: undefined\n};\nvar videoPlayerReducer = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_STREAM_REQUESTED, function () {\n  return _objectSpread(_objectSpread({}, initialState), {}, {\n    isLoading: true\n  });\n}), _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_STREAM_RECEIVED, function (state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    stream: action.payload,\n    isLoading: false\n  });\n}), _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_STREAM_ERRORED, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    stream: undefined,\n    isLoading: false\n  });\n}), _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isLoading: true\n  });\n}), _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED, function (state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    token: action.payload,\n    isLoading: false\n  });\n}), _defineProperty(_createReducer, eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_ERRORED, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isLoading: true\n  });\n}), _createReducer));\nexport default videoPlayerReducer;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/services/content/videoPlayer/videoPlayerReducer.ts"],"names":["createReducer","eventTypes","initialState","isLoading","stream","undefined","token","videoPlayerReducer","CONTENT_VIDEO_PLAYER_STREAM_REQUESTED","CONTENT_VIDEO_PLAYER_STREAM_RECEIVED","state","action","payload","CONTENT_VIDEO_PLAYER_STREAM_ERRORED","CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED","CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED","CONTENT_VIDEO_PLAYER_TOKEN_ERRORED"],"mappings":";;;;;AAAA,SAAkBA,aAAlB,QAAsD,kBAAtD;AAIA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAEA,IAAMC,YAA+B,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,MAAM,EAAEC,SAF4B;AAGpCC,EAAAA,KAAK,EAAED;AAH6B,CAAxC;AAOA,IAAME,kBAA8C,GAAGP,aAAa,CAACE,YAAD,wDAC/DD,UAAU,CAACO,qCADoD,EACZ;AAAA,yCAAYN,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAArC;AAAA,CADY,mCAE/DF,UAAU,CAACQ,oCAFoD,EAEb,UAACC,KAAD,EAAQC,MAAR,EAAwD;AACvG,yCAAYD,KAAZ;AAAmBN,IAAAA,MAAM,EAAEO,MAAM,CAACC,OAAlC;AAA2CT,IAAAA,SAAS,EAAE;AAAtD;AACH,CAJ+D,mCAK/DF,UAAU,CAACY,mCALoD,EAKd,UAACH,KAAD,EAAW;AACzD,yCAAYA,KAAZ;AAAmBN,IAAAA,MAAM,EAAEC,SAA3B;AAAsCF,IAAAA,SAAS,EAAE;AAAjD;AACH,CAP+D,mCAQ/DF,UAAU,CAACa,oCARoD,EAQb,UAACJ,KAAD,EAAW;AAC1D,yCAAYA,KAAZ;AAAmBP,IAAAA,SAAS,EAAE;AAA9B;AACH,CAV+D,mCAW/DF,UAAU,CAACc,mCAXoD,EAWd,UAACL,KAAD,EAAQC,MAAR,EAAuD;AACrG,yCAAYD,KAAZ;AAAmBJ,IAAAA,KAAK,EAAEK,MAAM,CAACC,OAAjC;AAA0CT,IAAAA,SAAS,EAAE;AAArD;AACH,CAb+D,mCAc/DF,UAAU,CAACe,kCAdoD,EAcf,UAACN,KAAD,EAAW;AACxD,yCAAYA,KAAZ;AAAmBP,IAAAA,SAAS,EAAE;AAA9B;AACH,CAhB+D,mBAApE;AAmBA,eAAeI,kBAAf","sourcesContent":["import { Reducer, createReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { IVideoStreamResponse, IVideoPlayerState, IVideoTokenResponse } from './models';\n\nimport { Event } from '../../eventGroups'\nimport * as eventTypes from './eventTypes'\n\nconst initialState: IVideoPlayerState = {\n    isLoading: true,\n    stream: undefined,\n    token: undefined\n}\n\n\nconst videoPlayerReducer: Reducer<IVideoPlayerState> = createReducer(initialState, {\n    [eventTypes.CONTENT_VIDEO_PLAYER_STREAM_REQUESTED]: () => ({ ...initialState, isLoading: true }),\n    [eventTypes.CONTENT_VIDEO_PLAYER_STREAM_RECEIVED]: (state, action: PayloadAction<IVideoStreamResponse>) => {\n        return { ...state, stream: action.payload, isLoading: false }\n    },\n    [eventTypes.CONTENT_VIDEO_PLAYER_STREAM_ERRORED]: (state) => {\n        return { ...state, stream: undefined, isLoading: false }\n    },\n    [eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_REQUESTED]: (state) => {\n        return { ...state, isLoading: true }\n    }, \n    [eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_RECEIVED]: (state, action: PayloadAction<IVideoTokenResponse>) => {\n        return { ...state, token: action.payload, isLoading: false }\n    },\n    [eventTypes.CONTENT_VIDEO_PLAYER_TOKEN_ERRORED]: (state) => {\n        return { ...state, isLoading: true }\n    }\n});\n\nexport default videoPlayerReducer\n"]},"metadata":{},"sourceType":"module"}