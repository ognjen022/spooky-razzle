{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './Button.module.scss';\n\nconst Button = props => {\n  const {\n    label,\n    type,\n    variant,\n    color,\n    size,\n    disabled,\n    className,\n    isLoading,\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, [\"label\", \"type\", \"variant\", \"color\", \"size\", \"disabled\", \"className\", \"isLoading\", \"children\"]);\n\n  const allowedTypes = ['button', 'submit', 'reset'];\n  const buttonType = type && allowedTypes.includes(type) ? type : 'button';\n  const classes = classNames(styles.button, variant && styles[`button--${variant}`], color && styles[`button--${color}`], size && styles[`button--${size}-width`], className);\n\n  const loaderSVG = __jsx(\"svg\", {\n    className: \"icon icon-loading\",\n    role: \"presentation\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"#icon-loading\"\n  }));\n\n  return __jsx(\"button\", _extends({\n    type: buttonType,\n    className: classes,\n    disabled: disabled,\n    \"aria-disabled\": disabled\n  }, rest), isLoading ? loaderSVG : label || children);\n};\n\nconst defaultProps = {\n  disabled: false,\n  isLoading: false\n};\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/Users/ognjen/Desktop/with-typescript/src/components/Button/Button.tsx"],"names":["React","classNames","styles","Button","props","label","type","variant","color","size","disabled","className","isLoading","children","rest","allowedTypes","buttonType","includes","classes","button","loaderSVG","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAuBA,MAAMC,MAA8B,GAAIC,KAAD,IAAW;AAChD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA,QAArC;AAA+CC,IAAAA,SAA/C;AAA0DC,IAAAA,SAA1D;AAAqEC,IAAAA;AAArE,MAA2FT,KAAjG;AAAA,QAAwFU,IAAxF,4BAAiGV,KAAjG;;AAEA,QAAMW,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAArB;AACA,QAAMC,UAAU,GAAGV,IAAI,IAAIS,YAAY,CAACE,QAAb,CAAsBX,IAAtB,CAAR,GAAsCA,IAAtC,GAA6C,QAAhE;AAEA,QAAMY,OAAO,GAAGjB,UAAU,CAACC,MAAM,CAACiB,MAAR,EAAgBZ,OAAO,IAAIL,MAAM,CAAE,WAAUK,OAAQ,EAApB,CAAjC,EAAyDC,KAAK,IAAIN,MAAM,CAAE,WAAUM,KAAM,EAAlB,CAAxE,EAA8FC,IAAI,IAAIP,MAAM,CAAE,WAAUO,IAAK,QAAjB,CAA5G,EAAuIE,SAAvI,CAA1B;;AAEA,QAAMS,SAAS,GACb;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,IAAI,EAAC;AAAxC,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,IADF,CADF;;AAMA,SACE;AAAQ,IAAA,IAAI,EAAEJ,UAAd;AAA0B,IAAA,SAAS,EAAEE,OAArC;AAA8C,IAAA,QAAQ,EAAER,QAAxD;AAAkE,qBAAeA;AAAjF,KAA+FI,IAA/F,GACGF,SAAS,GAAGQ,SAAH,GAAef,KAAK,IAAIQ,QADpC,CADF;AAKD,CAnBD;;AAqBA,MAAMQ,YAA0B,GAAG;AACjCX,EAAAA,QAAQ,EAAE,KADuB;AAEjCE,EAAAA,SAAS,EAAE;AAFsB,CAAnC;AAKAT,MAAM,CAACkB,YAAP,GAAsBA,YAAtB;AAEA,eAAelB,MAAf","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './Button.module.scss'\n\ntype VariantType = 'secondary' | 'facebook' | 'google' | 'actioned' | 'secondary2'\ntype ColorType = 'success' | 'ghost' | 'ghost-green'\ntype ButtonType = 'button' | 'submit' | 'reset'\ntype SizeType = 'full'\n\nexport interface IButtonProps {\n  id?: string\n  type?: ButtonType\n  label?: string\n  style?: React.CSSProperties\n  disabled?: boolean\n  className?: string\n  tabIndex?: number\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n\n  variant?: VariantType\n  isLoading?: boolean\n  color?: ColorType\n  size?: SizeType\n}\n\nconst Button: React.FC<IButtonProps> = (props) => {\n  const { label, type, variant, color, size, disabled, className, isLoading, children, ...rest } = props\n\n  const allowedTypes = ['button', 'submit', 'reset']\n  const buttonType = type && allowedTypes.includes(type) ? type : 'button'\n\n  const classes = classNames(styles.button, variant && styles[`button--${variant}`], color && styles[`button--${color}`], size && styles[`button--${size}-width`], className)\n\n  const loaderSVG = (\n    <svg className=\"icon icon-loading\" role=\"presentation\">\n      <use xlinkHref=\"#icon-loading\"></use>\n    </svg>\n  )\n\n  return (\n    <button type={buttonType} className={classes} disabled={disabled} aria-disabled={disabled} {...rest}>\n      {isLoading ? loaderSVG : label || children}\n    </button>\n  )\n}\n\nconst defaultProps: IButtonProps = {\n  disabled: false,\n  isLoading: false,\n}\n\nButton.defaultProps = defaultProps\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}